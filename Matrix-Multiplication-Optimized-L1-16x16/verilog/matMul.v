// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matMul_matMul,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.114000,HLS_SYN_LAT=2139,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2731,HLS_SYN_LUT=1691,HLS_VERSION=2020_2}" *)

module matMul (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_stream_TDATA,
        in_stream_TVALID,
        in_stream_TREADY,
        in_stream_TKEEP,
        in_stream_TSTRB,
        in_stream_TLAST,
        out_stream_TDATA,
        out_stream_TVALID,
        out_stream_TREADY,
        out_stream_TKEEP,
        out_stream_TSTRB,
        out_stream_TLAST
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_pp0_stage0 = 14'd128;
parameter    ap_ST_fsm_pp0_stage1 = 14'd256;
parameter    ap_ST_fsm_pp0_stage2 = 14'd512;
parameter    ap_ST_fsm_pp0_stage3 = 14'd1024;
parameter    ap_ST_fsm_state17 = 14'd2048;
parameter    ap_ST_fsm_pp1_stage0 = 14'd4096;
parameter    ap_ST_fsm_state21 = 14'd8192;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] in_stream_TDATA;
input   in_stream_TVALID;
output   in_stream_TREADY;
input  [3:0] in_stream_TKEEP;
input  [3:0] in_stream_TSTRB;
input  [0:0] in_stream_TLAST;
output  [31:0] out_stream_TDATA;
output   out_stream_TVALID;
input   out_stream_TREADY;
output  [3:0] out_stream_TKEEP;
output  [3:0] out_stream_TSTRB;
output  [0:0] out_stream_TLAST;

reg ap_done;
reg ap_idle;
reg ap_ready;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    in_stream_TDATA_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln18_fu_1061_p2;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln25_fu_1129_p2;
reg    out_stream_TDATA_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln42_reg_1655;
reg    ap_enable_reg_pp1_iter2;
reg   [0:0] icmp_ln42_reg_1655_pp1_iter1_reg;
reg   [8:0] indvar_flatten_reg_949;
reg   [4:0] i_2_reg_961;
reg   [4:0] k_reg_972;
reg   [31:0] res_reg_983;
reg   [4:0] i_3_reg_995;
wire   [4:0] add_ln17_fu_1019_p2;
reg   [4:0] add_ln17_reg_1381;
wire    ap_CS_fsm_state2;
wire   [3:0] trunc_ln21_fu_1031_p1;
reg   [3:0] trunc_ln21_reg_1389;
wire   [0:0] icmp_ln17_fu_1025_p2;
wire   [4:0] add_ln18_fu_1035_p2;
reg   [4:0] add_ln18_reg_1393;
reg    ap_block_state3;
wire   [4:0] add_ln24_fu_1087_p2;
reg   [4:0] add_ln24_reg_1401;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln24_fu_1093_p2;
wire   [3:0] trunc_ln28_fu_1099_p1;
reg   [3:0] trunc_ln28_reg_1410;
wire   [4:0] add_ln25_fu_1103_p2;
reg   [4:0] add_ln25_reg_1414;
reg    ap_block_state6;
wire   [0:0] icmp_ln32_fu_1155_p2;
reg   [0:0] icmp_ln32_reg_1422;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state8_pp0_stage0_iter0;
wire    ap_block_state12_pp0_stage0_iter1;
wire    ap_block_state16_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln32_reg_1422_pp0_iter1_reg;
wire   [0:0] icmp_ln34_fu_1161_p2;
reg   [0:0] icmp_ln34_reg_1426;
reg   [0:0] icmp_ln34_reg_1426_pp0_iter1_reg;
wire   [63:0] zext_ln32_fu_1197_p1;
reg   [63:0] zext_ln32_reg_1431;
reg   [63:0] zext_ln32_reg_1431_pp0_iter1_reg;
wire   [4:0] select_ln32_3_fu_1217_p3;
reg   [4:0] select_ln32_3_reg_1436;
reg    ap_enable_reg_pp0_iter0;
wire   [3:0] trunc_ln32_2_fu_1225_p1;
reg   [3:0] trunc_ln32_2_reg_1441;
wire   [3:0] trunc_ln36_fu_1249_p1;
reg   [3:0] trunc_ln36_reg_1606;
wire   [4:0] add_ln34_fu_1253_p2;
reg   [4:0] add_ln34_reg_1611;
wire   [0:0] icmp_ln34_1_fu_1259_p2;
reg   [0:0] icmp_ln34_1_reg_1616;
reg   [0:0] icmp_ln34_1_reg_1616_pp0_iter1_reg;
wire   [31:0] tmp_fu_1265_p18;
reg   [31:0] tmp_reg_1620;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state9_pp0_stage1_iter0;
wire    ap_block_state13_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire   [31:0] tmp_1_fu_1302_p18;
reg   [31:0] tmp_1_reg_1625;
wire   [8:0] add_ln32_fu_1339_p2;
reg   [8:0] add_ln32_reg_1630;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state11_pp0_stage3_iter0;
wire    ap_block_state15_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire   [31:0] grp_fu_1011_p2;
reg   [31:0] mul_reg_1635;
wire   [31:0] grp_fu_1006_p2;
reg    ap_enable_reg_pp0_iter2;
wire   [4:0] add_ln42_fu_1353_p2;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state18_pp1_stage0_iter0;
reg    ap_block_state19_pp1_stage0_iter1;
reg    ap_block_state19_io;
reg    ap_block_state20_pp1_stage0_iter2;
reg    ap_block_state20_io;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln42_fu_1359_p2;
wire   [0:0] valOut_last_V_fu_1370_p2;
reg   [0:0] valOut_last_V_reg_1664;
wire    ap_block_pp0_stage3_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter1_state12;
wire    ap_CS_fsm_state17;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state18;
reg   [3:0] A_0_address0;
reg    A_0_ce0;
reg    A_0_we0;
wire   [31:0] A_0_q0;
reg   [3:0] A_1_address0;
reg    A_1_ce0;
reg    A_1_we0;
wire   [31:0] A_1_q0;
reg   [3:0] A_2_address0;
reg    A_2_ce0;
reg    A_2_we0;
wire   [31:0] A_2_q0;
reg   [3:0] A_3_address0;
reg    A_3_ce0;
reg    A_3_we0;
wire   [31:0] A_3_q0;
reg   [3:0] A_4_address0;
reg    A_4_ce0;
reg    A_4_we0;
wire   [31:0] A_4_q0;
reg   [3:0] A_5_address0;
reg    A_5_ce0;
reg    A_5_we0;
wire   [31:0] A_5_q0;
reg   [3:0] A_6_address0;
reg    A_6_ce0;
reg    A_6_we0;
wire   [31:0] A_6_q0;
reg   [3:0] A_7_address0;
reg    A_7_ce0;
reg    A_7_we0;
wire   [31:0] A_7_q0;
reg   [3:0] A_8_address0;
reg    A_8_ce0;
reg    A_8_we0;
wire   [31:0] A_8_q0;
reg   [3:0] A_9_address0;
reg    A_9_ce0;
reg    A_9_we0;
wire   [31:0] A_9_q0;
reg   [3:0] A_10_address0;
reg    A_10_ce0;
reg    A_10_we0;
wire   [31:0] A_10_q0;
reg   [3:0] A_11_address0;
reg    A_11_ce0;
reg    A_11_we0;
wire   [31:0] A_11_q0;
reg   [3:0] A_12_address0;
reg    A_12_ce0;
reg    A_12_we0;
wire   [31:0] A_12_q0;
reg   [3:0] A_13_address0;
reg    A_13_ce0;
reg    A_13_we0;
wire   [31:0] A_13_q0;
reg   [3:0] A_14_address0;
reg    A_14_ce0;
reg    A_14_we0;
wire   [31:0] A_14_q0;
reg   [3:0] A_15_address0;
reg    A_15_ce0;
reg    A_15_we0;
wire   [31:0] A_15_q0;
reg   [3:0] B_0_address0;
reg    B_0_ce0;
reg    B_0_we0;
wire   [31:0] B_0_q0;
reg   [3:0] B_1_address0;
reg    B_1_ce0;
reg    B_1_we0;
wire   [31:0] B_1_q0;
reg   [3:0] B_2_address0;
reg    B_2_ce0;
reg    B_2_we0;
wire   [31:0] B_2_q0;
reg   [3:0] B_3_address0;
reg    B_3_ce0;
reg    B_3_we0;
wire   [31:0] B_3_q0;
reg   [3:0] B_4_address0;
reg    B_4_ce0;
reg    B_4_we0;
wire   [31:0] B_4_q0;
reg   [3:0] B_5_address0;
reg    B_5_ce0;
reg    B_5_we0;
wire   [31:0] B_5_q0;
reg   [3:0] B_6_address0;
reg    B_6_ce0;
reg    B_6_we0;
wire   [31:0] B_6_q0;
reg   [3:0] B_7_address0;
reg    B_7_ce0;
reg    B_7_we0;
wire   [31:0] B_7_q0;
reg   [3:0] B_8_address0;
reg    B_8_ce0;
reg    B_8_we0;
wire   [31:0] B_8_q0;
reg   [3:0] B_9_address0;
reg    B_9_ce0;
reg    B_9_we0;
wire   [31:0] B_9_q0;
reg   [3:0] B_10_address0;
reg    B_10_ce0;
reg    B_10_we0;
wire   [31:0] B_10_q0;
reg   [3:0] B_11_address0;
reg    B_11_ce0;
reg    B_11_we0;
wire   [31:0] B_11_q0;
reg   [3:0] B_12_address0;
reg    B_12_ce0;
reg    B_12_we0;
wire   [31:0] B_12_q0;
reg   [3:0] B_13_address0;
reg    B_13_ce0;
reg    B_13_we0;
wire   [31:0] B_13_q0;
reg   [3:0] B_14_address0;
reg    B_14_ce0;
reg    B_14_we0;
wire   [31:0] B_14_q0;
reg   [3:0] B_15_address0;
reg    B_15_ce0;
reg    B_15_we0;
wire   [31:0] B_15_q0;
reg   [3:0] mulOut_address0;
reg    mulOut_ce0;
reg    mulOut_we0;
wire   [31:0] mulOut_q0;
reg   [4:0] i_reg_905;
reg   [4:0] j_reg_916;
wire    ap_CS_fsm_state4;
reg   [4:0] i_1_reg_927;
reg   [4:0] j_1_reg_938;
wire    ap_CS_fsm_state7;
reg   [8:0] ap_phi_mux_indvar_flatten_phi_fu_953_p4;
wire    ap_block_pp0_stage0;
reg   [4:0] ap_phi_mux_i_2_phi_fu_965_p4;
reg   [4:0] ap_phi_mux_k_phi_fu_976_p4;
wire   [63:0] zext_ln18_fu_1041_p1;
wire   [63:0] zext_ln25_fu_1109_p1;
wire   [63:0] zext_ln34_fu_1229_p1;
wire   [63:0] zext_ln42_fu_1365_p1;
reg    ap_block_pp1_stage0_01001;
wire   [31:0] bitcast_ln21_fu_1067_p1;
wire   [31:0] bitcast_ln28_fu_1135_p1;
wire   [31:0] grp_fu_1006_p0;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire   [4:0] add_ln32_1_fu_1175_p2;
wire   [3:0] trunc_ln32_fu_1181_p1;
wire   [3:0] trunc_ln32_1_fu_1185_p1;
wire   [3:0] select_ln32_4_fu_1189_p3;
wire   [4:0] select_ln32_fu_1167_p3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_state21;
wire    regslice_both_out_stream_V_data_V_U_apdone_blk;
reg   [13:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_state10_pp0_stage2_iter0;
wire    ap_block_state14_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage2_11001;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire    regslice_both_in_stream_V_data_V_U_apdone_blk;
wire   [31:0] in_stream_TDATA_int_regslice;
wire    in_stream_TVALID_int_regslice;
reg    in_stream_TREADY_int_regslice;
wire    regslice_both_in_stream_V_data_V_U_ack_in;
wire    regslice_both_in_stream_V_keep_V_U_apdone_blk;
wire   [3:0] in_stream_TKEEP_int_regslice;
wire    regslice_both_in_stream_V_keep_V_U_vld_out;
wire    regslice_both_in_stream_V_keep_V_U_ack_in;
wire    regslice_both_in_stream_V_strb_V_U_apdone_blk;
wire   [3:0] in_stream_TSTRB_int_regslice;
wire    regslice_both_in_stream_V_strb_V_U_vld_out;
wire    regslice_both_in_stream_V_strb_V_U_ack_in;
wire    regslice_both_in_stream_V_last_V_U_apdone_blk;
wire   [0:0] in_stream_TLAST_int_regslice;
wire    regslice_both_in_stream_V_last_V_U_vld_out;
wire    regslice_both_in_stream_V_last_V_U_ack_in;
wire   [31:0] out_stream_TDATA_int_regslice;
reg    out_stream_TVALID_int_regslice;
wire    out_stream_TREADY_int_regslice;
wire    regslice_both_out_stream_V_data_V_U_vld_out;
wire    regslice_both_out_stream_V_keep_V_U_apdone_blk;
wire    regslice_both_out_stream_V_keep_V_U_ack_in_dummy;
wire    regslice_both_out_stream_V_keep_V_U_vld_out;
wire    regslice_both_out_stream_V_strb_V_U_apdone_blk;
wire    regslice_both_out_stream_V_strb_V_U_ack_in_dummy;
wire    regslice_both_out_stream_V_strb_V_U_vld_out;
wire    regslice_both_out_stream_V_last_V_U_apdone_blk;
wire    regslice_both_out_stream_V_last_V_U_ack_in_dummy;
wire    regslice_both_out_stream_V_last_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_0_address0),
    .ce0(A_0_ce0),
    .we0(A_0_we0),
    .d0(bitcast_ln21_fu_1067_p1),
    .q0(A_0_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_1_address0),
    .ce0(A_1_ce0),
    .we0(A_1_we0),
    .d0(bitcast_ln21_fu_1067_p1),
    .q0(A_1_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_2_address0),
    .ce0(A_2_ce0),
    .we0(A_2_we0),
    .d0(bitcast_ln21_fu_1067_p1),
    .q0(A_2_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_3_address0),
    .ce0(A_3_ce0),
    .we0(A_3_we0),
    .d0(bitcast_ln21_fu_1067_p1),
    .q0(A_3_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_4_address0),
    .ce0(A_4_ce0),
    .we0(A_4_we0),
    .d0(bitcast_ln21_fu_1067_p1),
    .q0(A_4_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_5_address0),
    .ce0(A_5_ce0),
    .we0(A_5_we0),
    .d0(bitcast_ln21_fu_1067_p1),
    .q0(A_5_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_6_address0),
    .ce0(A_6_ce0),
    .we0(A_6_we0),
    .d0(bitcast_ln21_fu_1067_p1),
    .q0(A_6_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_7_address0),
    .ce0(A_7_ce0),
    .we0(A_7_we0),
    .d0(bitcast_ln21_fu_1067_p1),
    .q0(A_7_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_8_address0),
    .ce0(A_8_ce0),
    .we0(A_8_we0),
    .d0(bitcast_ln21_fu_1067_p1),
    .q0(A_8_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_9_address0),
    .ce0(A_9_ce0),
    .we0(A_9_we0),
    .d0(bitcast_ln21_fu_1067_p1),
    .q0(A_9_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_10_address0),
    .ce0(A_10_ce0),
    .we0(A_10_we0),
    .d0(bitcast_ln21_fu_1067_p1),
    .q0(A_10_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_11_address0),
    .ce0(A_11_ce0),
    .we0(A_11_we0),
    .d0(bitcast_ln21_fu_1067_p1),
    .q0(A_11_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_12_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_12_address0),
    .ce0(A_12_ce0),
    .we0(A_12_we0),
    .d0(bitcast_ln21_fu_1067_p1),
    .q0(A_12_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_13_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_13_address0),
    .ce0(A_13_ce0),
    .we0(A_13_we0),
    .d0(bitcast_ln21_fu_1067_p1),
    .q0(A_13_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_14_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_14_address0),
    .ce0(A_14_ce0),
    .we0(A_14_we0),
    .d0(bitcast_ln21_fu_1067_p1),
    .q0(A_14_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_15_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_15_address0),
    .ce0(A_15_ce0),
    .we0(A_15_we0),
    .d0(bitcast_ln21_fu_1067_p1),
    .q0(A_15_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_0_address0),
    .ce0(B_0_ce0),
    .we0(B_0_we0),
    .d0(bitcast_ln28_fu_1135_p1),
    .q0(B_0_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_1_address0),
    .ce0(B_1_ce0),
    .we0(B_1_we0),
    .d0(bitcast_ln28_fu_1135_p1),
    .q0(B_1_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_2_address0),
    .ce0(B_2_ce0),
    .we0(B_2_we0),
    .d0(bitcast_ln28_fu_1135_p1),
    .q0(B_2_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_3_address0),
    .ce0(B_3_ce0),
    .we0(B_3_we0),
    .d0(bitcast_ln28_fu_1135_p1),
    .q0(B_3_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_4_address0),
    .ce0(B_4_ce0),
    .we0(B_4_we0),
    .d0(bitcast_ln28_fu_1135_p1),
    .q0(B_4_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_5_address0),
    .ce0(B_5_ce0),
    .we0(B_5_we0),
    .d0(bitcast_ln28_fu_1135_p1),
    .q0(B_5_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_6_address0),
    .ce0(B_6_ce0),
    .we0(B_6_we0),
    .d0(bitcast_ln28_fu_1135_p1),
    .q0(B_6_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_7_address0),
    .ce0(B_7_ce0),
    .we0(B_7_we0),
    .d0(bitcast_ln28_fu_1135_p1),
    .q0(B_7_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_8_address0),
    .ce0(B_8_ce0),
    .we0(B_8_we0),
    .d0(bitcast_ln28_fu_1135_p1),
    .q0(B_8_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_9_address0),
    .ce0(B_9_ce0),
    .we0(B_9_we0),
    .d0(bitcast_ln28_fu_1135_p1),
    .q0(B_9_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_10_address0),
    .ce0(B_10_ce0),
    .we0(B_10_we0),
    .d0(bitcast_ln28_fu_1135_p1),
    .q0(B_10_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_11_address0),
    .ce0(B_11_ce0),
    .we0(B_11_we0),
    .d0(bitcast_ln28_fu_1135_p1),
    .q0(B_11_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_12_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_12_address0),
    .ce0(B_12_ce0),
    .we0(B_12_we0),
    .d0(bitcast_ln28_fu_1135_p1),
    .q0(B_12_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_13_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_13_address0),
    .ce0(B_13_ce0),
    .we0(B_13_we0),
    .d0(bitcast_ln28_fu_1135_p1),
    .q0(B_13_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_14_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_14_address0),
    .ce0(B_14_ce0),
    .we0(B_14_we0),
    .d0(bitcast_ln28_fu_1135_p1),
    .q0(B_14_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_15_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_15_address0),
    .ce0(B_15_ce0),
    .we0(B_15_we0),
    .d0(bitcast_ln28_fu_1135_p1),
    .q0(B_15_q0)
);

matMul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
mulOut_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(mulOut_address0),
    .ce0(mulOut_ce0),
    .we0(mulOut_we0),
    .d0(grp_fu_1006_p2),
    .q0(mulOut_q0)
);

matMul_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1006_p0),
    .din1(mul_reg_1635),
    .ce(1'b1),
    .dout(grp_fu_1006_p2)
);

matMul_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_reg_1620),
    .din1(tmp_1_reg_1625),
    .ce(1'b1),
    .dout(grp_fu_1011_p2)
);

matMul_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U3(
    .din0(A_0_q0),
    .din1(A_1_q0),
    .din2(A_2_q0),
    .din3(A_3_q0),
    .din4(A_4_q0),
    .din5(A_5_q0),
    .din6(A_6_q0),
    .din7(A_7_q0),
    .din8(A_8_q0),
    .din9(A_9_q0),
    .din10(A_10_q0),
    .din11(A_11_q0),
    .din12(A_12_q0),
    .din13(A_13_q0),
    .din14(A_14_q0),
    .din15(A_15_q0),
    .din16(trunc_ln32_2_reg_1441),
    .dout(tmp_fu_1265_p18)
);

matMul_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U4(
    .din0(B_0_q0),
    .din1(B_1_q0),
    .din2(B_2_q0),
    .din3(B_3_q0),
    .din4(B_4_q0),
    .din5(B_5_q0),
    .din6(B_6_q0),
    .din7(B_7_q0),
    .din8(B_8_q0),
    .din9(B_9_q0),
    .din10(B_10_q0),
    .din11(B_11_q0),
    .din12(B_12_q0),
    .din13(B_13_q0),
    .din14(B_14_q0),
    .din15(B_15_q0),
    .din16(trunc_ln36_reg_1606),
    .dout(tmp_1_fu_1302_p18)
);

matMul_regslice_both #(
    .DataWidth( 32 ))
regslice_both_in_stream_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_stream_TDATA),
    .vld_in(in_stream_TVALID),
    .ack_in(regslice_both_in_stream_V_data_V_U_ack_in),
    .data_out(in_stream_TDATA_int_regslice),
    .vld_out(in_stream_TVALID_int_regslice),
    .ack_out(in_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_stream_V_data_V_U_apdone_blk)
);

matMul_regslice_both #(
    .DataWidth( 4 ))
regslice_both_in_stream_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_stream_TKEEP),
    .vld_in(in_stream_TVALID),
    .ack_in(regslice_both_in_stream_V_keep_V_U_ack_in),
    .data_out(in_stream_TKEEP_int_regslice),
    .vld_out(regslice_both_in_stream_V_keep_V_U_vld_out),
    .ack_out(in_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_stream_V_keep_V_U_apdone_blk)
);

matMul_regslice_both #(
    .DataWidth( 4 ))
regslice_both_in_stream_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_stream_TSTRB),
    .vld_in(in_stream_TVALID),
    .ack_in(regslice_both_in_stream_V_strb_V_U_ack_in),
    .data_out(in_stream_TSTRB_int_regslice),
    .vld_out(regslice_both_in_stream_V_strb_V_U_vld_out),
    .ack_out(in_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_stream_V_strb_V_U_apdone_blk)
);

matMul_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_stream_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_stream_TLAST),
    .vld_in(in_stream_TVALID),
    .ack_in(regslice_both_in_stream_V_last_V_U_ack_in),
    .data_out(in_stream_TLAST_int_regslice),
    .vld_out(regslice_both_in_stream_V_last_V_U_vld_out),
    .ack_out(in_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_stream_V_last_V_U_apdone_blk)
);

matMul_regslice_both #(
    .DataWidth( 32 ))
regslice_both_out_stream_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_stream_TDATA_int_regslice),
    .vld_in(out_stream_TVALID_int_regslice),
    .ack_in(out_stream_TREADY_int_regslice),
    .data_out(out_stream_TDATA),
    .vld_out(regslice_both_out_stream_V_data_V_U_vld_out),
    .ack_out(out_stream_TREADY),
    .apdone_blk(regslice_both_out_stream_V_data_V_U_apdone_blk)
);

matMul_regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_stream_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(out_stream_TVALID_int_regslice),
    .ack_in(regslice_both_out_stream_V_keep_V_U_ack_in_dummy),
    .data_out(out_stream_TKEEP),
    .vld_out(regslice_both_out_stream_V_keep_V_U_vld_out),
    .ack_out(out_stream_TREADY),
    .apdone_blk(regslice_both_out_stream_V_keep_V_U_apdone_blk)
);

matMul_regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_stream_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(out_stream_TVALID_int_regslice),
    .ack_in(regslice_both_out_stream_V_strb_V_U_ack_in_dummy),
    .data_out(out_stream_TSTRB),
    .vld_out(regslice_both_out_stream_V_strb_V_U_vld_out),
    .ack_out(out_stream_TREADY),
    .apdone_blk(regslice_both_out_stream_V_strb_V_U_apdone_blk)
);

matMul_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_stream_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(valOut_last_V_reg_1664),
    .vld_in(out_stream_TVALID_int_regslice),
    .ack_in(regslice_both_out_stream_V_last_V_U_ack_in_dummy),
    .data_out(out_stream_TLAST),
    .vld_out(regslice_both_out_stream_V_last_V_U_vld_out),
    .ack_out(out_stream_TREADY),
    .apdone_blk(regslice_both_out_stream_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln24_fu_1093_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter1_state12) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0)) | ((1'b1 == ap_CS_fsm_state5) & (icmp_ln24_fu_1093_p2 == 1'd1)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter1_state12) & (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
        end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln24_fu_1093_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state18))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state18)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state18);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln17_fu_1025_p2 == 1'd1))) begin
        i_1_reg_927 <= 5'd0;
    end else if ((~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln25_fu_1129_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        i_1_reg_927 <= add_ln24_reg_1401;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln24_fu_1093_p2 == 1'd1))) begin
        i_2_reg_961 <= 5'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln32_reg_1422 == 1'd0))) begin
        i_2_reg_961 <= select_ln32_3_reg_1436;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i_3_reg_995 <= 5'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln42_fu_1359_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_3_reg_995 <= add_ln42_fu_1353_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_905 <= 5'd0;
    end else if ((~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln18_fu_1061_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_reg_905 <= add_ln17_reg_1381;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln24_fu_1093_p2 == 1'd1))) begin
        indvar_flatten_reg_949 <= 9'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln32_reg_1422 == 1'd0))) begin
        indvar_flatten_reg_949 <= add_ln32_reg_1630;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln24_fu_1093_p2 == 1'd0))) begin
        j_1_reg_938 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        j_1_reg_938 <= add_ln25_reg_1414;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln17_fu_1025_p2 == 1'd0))) begin
        j_reg_916 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        j_reg_916 <= add_ln18_reg_1393;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln24_fu_1093_p2 == 1'd1))) begin
        k_reg_972 <= 5'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln32_reg_1422 == 1'd0))) begin
        k_reg_972 <= add_ln34_reg_1611;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln24_fu_1093_p2 == 1'd1))) begin
        res_reg_983 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln32_reg_1422_pp0_iter1_reg == 1'd0))) begin
        res_reg_983 <= grp_fu_1006_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln17_reg_1381 <= add_ln17_fu_1019_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        add_ln18_reg_1393 <= add_ln18_fu_1035_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln24_reg_1401 <= add_ln24_fu_1087_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        add_ln25_reg_1414 <= add_ln25_fu_1103_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln32_reg_1630 <= add_ln32_fu_1339_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln32_fu_1155_p2 == 1'd0))) begin
        add_ln34_reg_1611 <= add_ln34_fu_1253_p2;
        select_ln32_3_reg_1436 <= select_ln32_3_fu_1217_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln32_reg_1422 <= icmp_ln32_fu_1155_p2;
        icmp_ln32_reg_1422_pp0_iter1_reg <= icmp_ln32_reg_1422;
        icmp_ln34_1_reg_1616_pp0_iter1_reg <= icmp_ln34_1_reg_1616;
        icmp_ln34_reg_1426_pp0_iter1_reg <= icmp_ln34_reg_1426;
        zext_ln32_reg_1431_pp0_iter1_reg[3 : 0] <= zext_ln32_reg_1431[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln32_fu_1155_p2 == 1'd0))) begin
        icmp_ln34_1_reg_1616 <= icmp_ln34_1_fu_1259_p2;
        icmp_ln34_reg_1426 <= icmp_ln34_fu_1161_p2;
        trunc_ln32_2_reg_1441 <= trunc_ln32_2_fu_1225_p1;
        trunc_ln36_reg_1606 <= trunc_ln36_fu_1249_p1;
        zext_ln32_reg_1431[3 : 0] <= zext_ln32_fu_1197_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln42_reg_1655 <= icmp_ln42_fu_1359_p2;
        icmp_ln42_reg_1655_pp1_iter1_reg <= icmp_ln42_reg_1655;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln32_reg_1422 == 1'd0))) begin
        mul_reg_1635 <= grp_fu_1011_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln32_reg_1422 == 1'd0))) begin
        tmp_1_reg_1625 <= tmp_1_fu_1302_p18;
        tmp_reg_1620 <= tmp_fu_1265_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln17_fu_1025_p2 == 1'd0))) begin
        trunc_ln21_reg_1389 <= trunc_ln21_fu_1031_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln24_fu_1093_p2 == 1'd0))) begin
        trunc_ln28_reg_1410 <= trunc_ln28_fu_1099_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln42_fu_1359_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        valOut_last_V_reg_1664 <= valOut_last_V_fu_1370_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        A_0_address0 = zext_ln34_fu_1229_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        A_0_address0 = zext_ln18_fu_1041_p1;
    end else begin
        A_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state3)))) begin
        A_0_ce0 = 1'b1;
    end else begin
        A_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln18_fu_1061_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln21_reg_1389 == 4'd0))) begin
        A_0_we0 = 1'b1;
    end else begin
        A_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        A_10_address0 = zext_ln34_fu_1229_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        A_10_address0 = zext_ln18_fu_1041_p1;
    end else begin
        A_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state3)))) begin
        A_10_ce0 = 1'b1;
    end else begin
        A_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln18_fu_1061_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln21_reg_1389 == 4'd10))) begin
        A_10_we0 = 1'b1;
    end else begin
        A_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        A_11_address0 = zext_ln34_fu_1229_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        A_11_address0 = zext_ln18_fu_1041_p1;
    end else begin
        A_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state3)))) begin
        A_11_ce0 = 1'b1;
    end else begin
        A_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln18_fu_1061_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln21_reg_1389 == 4'd11))) begin
        A_11_we0 = 1'b1;
    end else begin
        A_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        A_12_address0 = zext_ln34_fu_1229_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        A_12_address0 = zext_ln18_fu_1041_p1;
    end else begin
        A_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state3)))) begin
        A_12_ce0 = 1'b1;
    end else begin
        A_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln18_fu_1061_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln21_reg_1389 == 4'd12))) begin
        A_12_we0 = 1'b1;
    end else begin
        A_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        A_13_address0 = zext_ln34_fu_1229_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        A_13_address0 = zext_ln18_fu_1041_p1;
    end else begin
        A_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state3)))) begin
        A_13_ce0 = 1'b1;
    end else begin
        A_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln18_fu_1061_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln21_reg_1389 == 4'd13))) begin
        A_13_we0 = 1'b1;
    end else begin
        A_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        A_14_address0 = zext_ln34_fu_1229_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        A_14_address0 = zext_ln18_fu_1041_p1;
    end else begin
        A_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state3)))) begin
        A_14_ce0 = 1'b1;
    end else begin
        A_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln18_fu_1061_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln21_reg_1389 == 4'd14))) begin
        A_14_we0 = 1'b1;
    end else begin
        A_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        A_15_address0 = zext_ln34_fu_1229_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        A_15_address0 = zext_ln18_fu_1041_p1;
    end else begin
        A_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state3)))) begin
        A_15_ce0 = 1'b1;
    end else begin
        A_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln18_fu_1061_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln21_reg_1389 == 4'd15))) begin
        A_15_we0 = 1'b1;
    end else begin
        A_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        A_1_address0 = zext_ln34_fu_1229_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        A_1_address0 = zext_ln18_fu_1041_p1;
    end else begin
        A_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state3)))) begin
        A_1_ce0 = 1'b1;
    end else begin
        A_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln18_fu_1061_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln21_reg_1389 == 4'd1))) begin
        A_1_we0 = 1'b1;
    end else begin
        A_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        A_2_address0 = zext_ln34_fu_1229_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        A_2_address0 = zext_ln18_fu_1041_p1;
    end else begin
        A_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state3)))) begin
        A_2_ce0 = 1'b1;
    end else begin
        A_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln18_fu_1061_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln21_reg_1389 == 4'd2))) begin
        A_2_we0 = 1'b1;
    end else begin
        A_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        A_3_address0 = zext_ln34_fu_1229_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        A_3_address0 = zext_ln18_fu_1041_p1;
    end else begin
        A_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state3)))) begin
        A_3_ce0 = 1'b1;
    end else begin
        A_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln18_fu_1061_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln21_reg_1389 == 4'd3))) begin
        A_3_we0 = 1'b1;
    end else begin
        A_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        A_4_address0 = zext_ln34_fu_1229_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        A_4_address0 = zext_ln18_fu_1041_p1;
    end else begin
        A_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state3)))) begin
        A_4_ce0 = 1'b1;
    end else begin
        A_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln18_fu_1061_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln21_reg_1389 == 4'd4))) begin
        A_4_we0 = 1'b1;
    end else begin
        A_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        A_5_address0 = zext_ln34_fu_1229_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        A_5_address0 = zext_ln18_fu_1041_p1;
    end else begin
        A_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state3)))) begin
        A_5_ce0 = 1'b1;
    end else begin
        A_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln18_fu_1061_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln21_reg_1389 == 4'd5))) begin
        A_5_we0 = 1'b1;
    end else begin
        A_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        A_6_address0 = zext_ln34_fu_1229_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        A_6_address0 = zext_ln18_fu_1041_p1;
    end else begin
        A_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state3)))) begin
        A_6_ce0 = 1'b1;
    end else begin
        A_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln18_fu_1061_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln21_reg_1389 == 4'd6))) begin
        A_6_we0 = 1'b1;
    end else begin
        A_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        A_7_address0 = zext_ln34_fu_1229_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        A_7_address0 = zext_ln18_fu_1041_p1;
    end else begin
        A_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state3)))) begin
        A_7_ce0 = 1'b1;
    end else begin
        A_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln18_fu_1061_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln21_reg_1389 == 4'd7))) begin
        A_7_we0 = 1'b1;
    end else begin
        A_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        A_8_address0 = zext_ln34_fu_1229_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        A_8_address0 = zext_ln18_fu_1041_p1;
    end else begin
        A_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state3)))) begin
        A_8_ce0 = 1'b1;
    end else begin
        A_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln18_fu_1061_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln21_reg_1389 == 4'd8))) begin
        A_8_we0 = 1'b1;
    end else begin
        A_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        A_9_address0 = zext_ln34_fu_1229_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        A_9_address0 = zext_ln18_fu_1041_p1;
    end else begin
        A_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state3)))) begin
        A_9_ce0 = 1'b1;
    end else begin
        A_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln18_fu_1061_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln21_reg_1389 == 4'd9))) begin
        A_9_we0 = 1'b1;
    end else begin
        A_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        B_0_address0 = zext_ln32_fu_1197_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        B_0_address0 = zext_ln25_fu_1109_p1;
    end else begin
        B_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state6)))) begin
        B_0_ce0 = 1'b1;
    end else begin
        B_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln25_fu_1129_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln28_reg_1410 == 4'd0))) begin
        B_0_we0 = 1'b1;
    end else begin
        B_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        B_10_address0 = zext_ln32_fu_1197_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        B_10_address0 = zext_ln25_fu_1109_p1;
    end else begin
        B_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state6)))) begin
        B_10_ce0 = 1'b1;
    end else begin
        B_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln25_fu_1129_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln28_reg_1410 == 4'd10))) begin
        B_10_we0 = 1'b1;
    end else begin
        B_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        B_11_address0 = zext_ln32_fu_1197_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        B_11_address0 = zext_ln25_fu_1109_p1;
    end else begin
        B_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state6)))) begin
        B_11_ce0 = 1'b1;
    end else begin
        B_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln25_fu_1129_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln28_reg_1410 == 4'd11))) begin
        B_11_we0 = 1'b1;
    end else begin
        B_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        B_12_address0 = zext_ln32_fu_1197_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        B_12_address0 = zext_ln25_fu_1109_p1;
    end else begin
        B_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state6)))) begin
        B_12_ce0 = 1'b1;
    end else begin
        B_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln25_fu_1129_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln28_reg_1410 == 4'd12))) begin
        B_12_we0 = 1'b1;
    end else begin
        B_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        B_13_address0 = zext_ln32_fu_1197_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        B_13_address0 = zext_ln25_fu_1109_p1;
    end else begin
        B_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state6)))) begin
        B_13_ce0 = 1'b1;
    end else begin
        B_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln25_fu_1129_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln28_reg_1410 == 4'd13))) begin
        B_13_we0 = 1'b1;
    end else begin
        B_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        B_14_address0 = zext_ln32_fu_1197_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        B_14_address0 = zext_ln25_fu_1109_p1;
    end else begin
        B_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state6)))) begin
        B_14_ce0 = 1'b1;
    end else begin
        B_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln25_fu_1129_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln28_reg_1410 == 4'd14))) begin
        B_14_we0 = 1'b1;
    end else begin
        B_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        B_15_address0 = zext_ln32_fu_1197_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        B_15_address0 = zext_ln25_fu_1109_p1;
    end else begin
        B_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state6)))) begin
        B_15_ce0 = 1'b1;
    end else begin
        B_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln25_fu_1129_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln28_reg_1410 == 4'd15))) begin
        B_15_we0 = 1'b1;
    end else begin
        B_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        B_1_address0 = zext_ln32_fu_1197_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        B_1_address0 = zext_ln25_fu_1109_p1;
    end else begin
        B_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state6)))) begin
        B_1_ce0 = 1'b1;
    end else begin
        B_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln25_fu_1129_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln28_reg_1410 == 4'd1))) begin
        B_1_we0 = 1'b1;
    end else begin
        B_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        B_2_address0 = zext_ln32_fu_1197_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        B_2_address0 = zext_ln25_fu_1109_p1;
    end else begin
        B_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state6)))) begin
        B_2_ce0 = 1'b1;
    end else begin
        B_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln25_fu_1129_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln28_reg_1410 == 4'd2))) begin
        B_2_we0 = 1'b1;
    end else begin
        B_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        B_3_address0 = zext_ln32_fu_1197_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        B_3_address0 = zext_ln25_fu_1109_p1;
    end else begin
        B_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state6)))) begin
        B_3_ce0 = 1'b1;
    end else begin
        B_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln25_fu_1129_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln28_reg_1410 == 4'd3))) begin
        B_3_we0 = 1'b1;
    end else begin
        B_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        B_4_address0 = zext_ln32_fu_1197_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        B_4_address0 = zext_ln25_fu_1109_p1;
    end else begin
        B_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state6)))) begin
        B_4_ce0 = 1'b1;
    end else begin
        B_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln25_fu_1129_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln28_reg_1410 == 4'd4))) begin
        B_4_we0 = 1'b1;
    end else begin
        B_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        B_5_address0 = zext_ln32_fu_1197_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        B_5_address0 = zext_ln25_fu_1109_p1;
    end else begin
        B_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state6)))) begin
        B_5_ce0 = 1'b1;
    end else begin
        B_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln25_fu_1129_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln28_reg_1410 == 4'd5))) begin
        B_5_we0 = 1'b1;
    end else begin
        B_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        B_6_address0 = zext_ln32_fu_1197_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        B_6_address0 = zext_ln25_fu_1109_p1;
    end else begin
        B_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state6)))) begin
        B_6_ce0 = 1'b1;
    end else begin
        B_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln25_fu_1129_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln28_reg_1410 == 4'd6))) begin
        B_6_we0 = 1'b1;
    end else begin
        B_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        B_7_address0 = zext_ln32_fu_1197_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        B_7_address0 = zext_ln25_fu_1109_p1;
    end else begin
        B_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state6)))) begin
        B_7_ce0 = 1'b1;
    end else begin
        B_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln25_fu_1129_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln28_reg_1410 == 4'd7))) begin
        B_7_we0 = 1'b1;
    end else begin
        B_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        B_8_address0 = zext_ln32_fu_1197_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        B_8_address0 = zext_ln25_fu_1109_p1;
    end else begin
        B_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state6)))) begin
        B_8_ce0 = 1'b1;
    end else begin
        B_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln25_fu_1129_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln28_reg_1410 == 4'd8))) begin
        B_8_we0 = 1'b1;
    end else begin
        B_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        B_9_address0 = zext_ln32_fu_1197_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        B_9_address0 = zext_ln25_fu_1109_p1;
    end else begin
        B_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | (~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state6)))) begin
        B_9_ce0 = 1'b1;
    end else begin
        B_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln25_fu_1129_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln28_reg_1410 == 4'd9))) begin
        B_9_we0 = 1'b1;
    end else begin
        B_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state12 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state12 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln32_reg_1422 == 1'd1))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln42_fu_1359_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state18 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state18 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) & (regslice_both_out_stream_V_data_V_U_apdone_blk == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln32_reg_1422 == 1'd0))) begin
        ap_phi_mux_i_2_phi_fu_965_p4 = select_ln32_3_reg_1436;
    end else begin
        ap_phi_mux_i_2_phi_fu_965_p4 = i_2_reg_961;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln32_reg_1422 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_953_p4 = add_ln32_reg_1630;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_953_p4 = indvar_flatten_reg_949;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln32_reg_1422 == 1'd0))) begin
        ap_phi_mux_k_phi_fu_976_p4 = add_ln34_reg_1611;
    end else begin
        ap_phi_mux_k_phi_fu_976_p4 = k_reg_972;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) & (regslice_both_out_stream_V_data_V_U_apdone_blk == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln25_fu_1129_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((icmp_ln18_fu_1061_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        in_stream_TDATA_blk_n = in_stream_TVALID_int_regslice;
    end else begin
        in_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln25_fu_1129_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | (~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln18_fu_1061_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        in_stream_TREADY_int_regslice = 1'b1;
    end else begin
        in_stream_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        mulOut_address0 = zext_ln42_fu_1365_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mulOut_address0 = zext_ln32_reg_1431_pp0_iter1_reg;
    end else begin
        mulOut_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        mulOut_ce0 = 1'b1;
    end else begin
        mulOut_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln34_1_reg_1616_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mulOut_we0 = 1'b1;
    end else begin
        mulOut_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln42_reg_1655_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0)) | ((icmp_ln42_reg_1655 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        out_stream_TDATA_blk_n = out_stream_TREADY_int_regslice;
    end else begin
        out_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln42_reg_1655 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        out_stream_TVALID_int_regslice = 1'b1;
    end else begin
        out_stream_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln17_fu_1025_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln18_fu_1061_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln18_fu_1061_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln24_fu_1093_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln25_fu_1129_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if ((~((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0)) & (icmp_ln25_fu_1129_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln42_fu_1359_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln42_fu_1359_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (regslice_both_out_stream_V_data_V_U_apdone_blk == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln17_fu_1019_p2 = (i_reg_905 + 5'd1);

assign add_ln18_fu_1035_p2 = (j_reg_916 + 5'd1);

assign add_ln24_fu_1087_p2 = (i_1_reg_927 + 5'd1);

assign add_ln25_fu_1103_p2 = (j_1_reg_938 + 5'd1);

assign add_ln32_1_fu_1175_p2 = (ap_phi_mux_i_2_phi_fu_965_p4 + 5'd1);

assign add_ln32_fu_1339_p2 = (indvar_flatten_reg_949 + 9'd1);

assign add_ln34_fu_1253_p2 = (select_ln32_fu_1167_p3 + 5'd1);

assign add_ln42_fu_1353_p2 = (i_3_reg_995 + 5'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((icmp_ln42_reg_1655_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (out_stream_TREADY_int_regslice == 1'b0)) | ((icmp_ln42_reg_1655 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (out_stream_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((ap_enable_reg_pp1_iter2 == 1'b1) & ((1'b1 == ap_block_state20_io) | ((icmp_ln42_reg_1655_pp1_iter1_reg == 1'd0) & (out_stream_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp1_iter1 == 1'b1) & ((1'b1 == ap_block_state19_io) | ((icmp_ln42_reg_1655 == 1'd0) & (out_stream_TREADY_int_regslice == 1'b0)))));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((ap_enable_reg_pp1_iter2 == 1'b1) & ((1'b1 == ap_block_state20_io) | ((icmp_ln42_reg_1655_pp1_iter1_reg == 1'd0) & (out_stream_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp1_iter1 == 1'b1) & ((1'b1 == ap_block_state19_io) | ((icmp_ln42_reg_1655 == 1'd0) & (out_stream_TREADY_int_regslice == 1'b0)))));
end

assign ap_block_state10_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_io = ((icmp_ln42_reg_1655 == 1'd0) & (out_stream_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state19_pp1_stage0_iter1 = ((icmp_ln42_reg_1655 == 1'd0) & (out_stream_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state20_io = ((icmp_ln42_reg_1655_pp1_iter1_reg == 1'd0) & (out_stream_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state20_pp1_stage0_iter2 = ((icmp_ln42_reg_1655_pp1_iter1_reg == 1'd0) & (out_stream_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state3 = ((icmp_ln18_fu_1061_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state6 = ((icmp_ln25_fu_1129_p2 == 1'd0) & (in_stream_TVALID_int_regslice == 1'b0));
end

assign ap_block_state8_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bitcast_ln21_fu_1067_p1 = in_stream_TDATA_int_regslice;

assign bitcast_ln28_fu_1135_p1 = in_stream_TDATA_int_regslice;

assign grp_fu_1006_p0 = ((icmp_ln34_reg_1426_pp0_iter1_reg[0:0] == 1'b1) ? 32'd0 : res_reg_983);

assign icmp_ln17_fu_1025_p2 = ((i_reg_905 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_1061_p2 = ((j_reg_916 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_1093_p2 = ((i_1_reg_927 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_1129_p2 = ((j_1_reg_938 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_1155_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_953_p4 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln34_1_fu_1259_p2 = ((add_ln34_fu_1253_p2 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln34_fu_1161_p2 = ((ap_phi_mux_k_phi_fu_976_p4 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_1359_p2 = ((i_3_reg_995 == 5'd16) ? 1'b1 : 1'b0);

assign in_stream_TREADY = regslice_both_in_stream_V_data_V_U_ack_in;

assign out_stream_TDATA_int_regslice = mulOut_q0;

assign out_stream_TVALID = regslice_both_out_stream_V_data_V_U_vld_out;

assign select_ln32_3_fu_1217_p3 = ((icmp_ln34_fu_1161_p2[0:0] == 1'b1) ? add_ln32_1_fu_1175_p2 : ap_phi_mux_i_2_phi_fu_965_p4);

assign select_ln32_4_fu_1189_p3 = ((icmp_ln34_fu_1161_p2[0:0] == 1'b1) ? trunc_ln32_fu_1181_p1 : trunc_ln32_1_fu_1185_p1);

assign select_ln32_fu_1167_p3 = ((icmp_ln34_fu_1161_p2[0:0] == 1'b1) ? 5'd0 : ap_phi_mux_k_phi_fu_976_p4);

assign trunc_ln21_fu_1031_p1 = i_reg_905[3:0];

assign trunc_ln28_fu_1099_p1 = i_1_reg_927[3:0];

assign trunc_ln32_1_fu_1185_p1 = ap_phi_mux_i_2_phi_fu_965_p4[3:0];

assign trunc_ln32_2_fu_1225_p1 = select_ln32_3_fu_1217_p3[3:0];

assign trunc_ln32_fu_1181_p1 = add_ln32_1_fu_1175_p2[3:0];

assign trunc_ln36_fu_1249_p1 = select_ln32_fu_1167_p3[3:0];

assign valOut_last_V_fu_1370_p2 = ((i_3_reg_995 == 5'd15) ? 1'b1 : 1'b0);

assign zext_ln18_fu_1041_p1 = j_reg_916;

assign zext_ln25_fu_1109_p1 = j_1_reg_938;

assign zext_ln32_fu_1197_p1 = select_ln32_4_fu_1189_p3;

assign zext_ln34_fu_1229_p1 = select_ln32_fu_1167_p3;

assign zext_ln42_fu_1365_p1 = i_3_reg_995;

always @ (posedge ap_clk) begin
    zext_ln32_reg_1431[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln32_reg_1431_pp0_iter1_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //matMul
