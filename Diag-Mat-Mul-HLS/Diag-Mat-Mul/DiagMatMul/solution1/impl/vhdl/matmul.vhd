-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matmul is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 4;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_stream_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    in_stream_TVALID : IN STD_LOGIC;
    in_stream_TREADY : OUT STD_LOGIC;
    in_stream_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    in_stream_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
    in_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    out_stream_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_stream_TVALID : OUT STD_LOGIC;
    out_stream_TREADY : IN STD_LOGIC;
    out_stream_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_stream_TSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of matmul is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "matmul,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.419000,HLS_SYN_LAT=703,HLS_SYN_TPT=none,HLS_SYN_MEM=32,HLS_SYN_DSP=160,HLS_SYN_FF=23344,HLS_SYN_LUT=16046,HLS_VERSION=2019_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv8_F : STD_LOGIC_VECTOR (7 downto 0) := "00001111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal mulOut_M_real_0_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_real_0_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_real_0_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_real_0_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_real_1_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_real_1_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_real_1_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_real_1_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_real_2_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_real_2_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_real_2_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_real_2_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_real_3_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_real_3_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_real_3_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_real_3_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_imag_0_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_imag_0_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_imag_0_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_imag_0_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_imag_1_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_imag_1_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_imag_1_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_imag_1_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_imag_2_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_imag_2_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_imag_2_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_imag_2_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_imag_3_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_imag_3_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_imag_3_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mulOut_M_imag_3_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal A_M_real_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal A_M_real_0_ce0 : STD_LOGIC;
    signal A_M_real_0_we0 : STD_LOGIC;
    signal A_M_real_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_M_real_0_ce1 : STD_LOGIC;
    signal A_M_real_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_M_real_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal A_M_real_1_ce0 : STD_LOGIC;
    signal A_M_real_1_we0 : STD_LOGIC;
    signal A_M_real_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_M_real_1_ce1 : STD_LOGIC;
    signal A_M_real_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_M_real_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal A_M_real_2_ce0 : STD_LOGIC;
    signal A_M_real_2_we0 : STD_LOGIC;
    signal A_M_real_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_M_real_2_ce1 : STD_LOGIC;
    signal A_M_real_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_M_real_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal A_M_real_3_ce0 : STD_LOGIC;
    signal A_M_real_3_we0 : STD_LOGIC;
    signal A_M_real_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_M_real_3_ce1 : STD_LOGIC;
    signal A_M_real_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_M_imag_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal A_M_imag_0_ce0 : STD_LOGIC;
    signal A_M_imag_0_we0 : STD_LOGIC;
    signal A_M_imag_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_M_imag_0_ce1 : STD_LOGIC;
    signal A_M_imag_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_M_imag_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal A_M_imag_1_ce0 : STD_LOGIC;
    signal A_M_imag_1_we0 : STD_LOGIC;
    signal A_M_imag_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_M_imag_1_ce1 : STD_LOGIC;
    signal A_M_imag_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_M_imag_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal A_M_imag_2_ce0 : STD_LOGIC;
    signal A_M_imag_2_we0 : STD_LOGIC;
    signal A_M_imag_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_M_imag_2_ce1 : STD_LOGIC;
    signal A_M_imag_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_M_imag_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal A_M_imag_3_ce0 : STD_LOGIC;
    signal A_M_imag_3_we0 : STD_LOGIC;
    signal A_M_imag_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_M_imag_3_ce1 : STD_LOGIC;
    signal A_M_imag_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_M_real_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal B_M_real_0_ce0 : STD_LOGIC;
    signal B_M_real_0_we0 : STD_LOGIC;
    signal B_M_real_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_M_real_0_ce1 : STD_LOGIC;
    signal B_M_real_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_M_real_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal B_M_real_1_ce0 : STD_LOGIC;
    signal B_M_real_1_we0 : STD_LOGIC;
    signal B_M_real_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_M_real_1_ce1 : STD_LOGIC;
    signal B_M_real_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_M_real_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal B_M_real_2_ce0 : STD_LOGIC;
    signal B_M_real_2_we0 : STD_LOGIC;
    signal B_M_real_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_M_real_2_ce1 : STD_LOGIC;
    signal B_M_real_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_M_real_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal B_M_real_3_ce0 : STD_LOGIC;
    signal B_M_real_3_we0 : STD_LOGIC;
    signal B_M_real_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_M_real_3_ce1 : STD_LOGIC;
    signal B_M_real_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_M_imag_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal B_M_imag_0_ce0 : STD_LOGIC;
    signal B_M_imag_0_we0 : STD_LOGIC;
    signal B_M_imag_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_M_imag_0_ce1 : STD_LOGIC;
    signal B_M_imag_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_M_imag_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal B_M_imag_1_ce0 : STD_LOGIC;
    signal B_M_imag_1_we0 : STD_LOGIC;
    signal B_M_imag_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_M_imag_1_ce1 : STD_LOGIC;
    signal B_M_imag_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_M_imag_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal B_M_imag_2_ce0 : STD_LOGIC;
    signal B_M_imag_2_we0 : STD_LOGIC;
    signal B_M_imag_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_M_imag_2_ce1 : STD_LOGIC;
    signal B_M_imag_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_M_imag_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal B_M_imag_3_ce0 : STD_LOGIC;
    signal B_M_imag_3_we0 : STD_LOGIC;
    signal B_M_imag_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_M_imag_3_ce1 : STD_LOGIC;
    signal B_M_imag_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln35_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln47_fu_864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln62_reg_1686 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal icmp_ln62_reg_1686_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_2_reg_495 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_fu_594_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_reg_1325 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal j_fu_606_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal i_4_fu_672_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_4_reg_1344 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal trunc_ln50_fu_678_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln50_reg_1349 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln46_fu_666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln47_fu_700_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln47_reg_1353 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_2_fu_870_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state5 : BOOLEAN;
    signal mulOut_M_real_0_0_r_reg_1526 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_DiagMatMul_fu_506_ap_ready : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_ap_done : STD_LOGIC;
    signal mulOut_M_real_0_1_r_reg_1531 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_real_0_2_r_reg_1536 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_real_0_3_r_reg_1541 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_real_1_0_r_reg_1546 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_real_1_1_r_reg_1551 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_real_1_2_r_reg_1556 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_real_1_3_r_reg_1561 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_real_2_0_r_reg_1566 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_real_2_1_r_reg_1571 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_real_2_2_r_reg_1576 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_real_2_3_r_reg_1581 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_real_3_0_r_reg_1586 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_real_3_1_r_reg_1591 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_real_3_2_r_reg_1596 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_real_3_3_r_reg_1601 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_imag_0_0_r_reg_1606 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_imag_0_1_r_reg_1611 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_imag_0_2_r_reg_1616 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_imag_0_3_r_reg_1621 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_imag_1_0_r_reg_1626 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_imag_1_1_r_reg_1631 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_imag_1_2_r_reg_1636 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_imag_1_3_r_reg_1641 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_imag_2_0_r_reg_1646 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_imag_2_1_r_reg_1651 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_imag_2_2_r_reg_1656 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_imag_2_3_r_reg_1661 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_imag_3_0_r_reg_1666 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_imag_3_1_r_reg_1671 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_imag_3_2_r_reg_1676 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_imag_3_3_r_reg_1681 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln62_fu_1237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state7_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state8_io : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state9_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_3_fu_1243_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_5_fu_1257_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_1695 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_1279_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_1700 : STD_LOGIC_VECTOR (31 downto 0);
    signal valOut_last_V_fu_1301_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_V_reg_1705 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state7 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_ap_start : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_ap_idle : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_A_M_real_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_A_M_real_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_A_M_real_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_A_M_real_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_A_M_real1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_A_M_real1_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_A_M_real1_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_A_M_real1_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_A_M_real2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_A_M_real2_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_A_M_real2_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_A_M_real2_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_A_M_real3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_A_M_real3_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_A_M_real3_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_A_M_real3_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_A_M_imag_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_A_M_imag_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_A_M_imag_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_A_M_imag_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_A_M_imag4_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_A_M_imag4_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_A_M_imag4_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_A_M_imag4_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_A_M_imag5_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_A_M_imag5_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_A_M_imag5_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_A_M_imag5_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_A_M_imag6_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_A_M_imag6_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_A_M_imag6_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_A_M_imag6_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_B_M_real_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_B_M_real_0_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_B_M_real_0_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_B_M_real_0_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_B_M_real_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_B_M_real_1_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_B_M_real_1_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_B_M_real_1_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_B_M_real_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_B_M_real_2_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_B_M_real_2_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_B_M_real_2_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_B_M_real_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_B_M_real_3_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_B_M_real_3_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_B_M_real_3_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_B_M_imag_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_B_M_imag_0_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_B_M_imag_0_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_B_M_imag_0_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_B_M_imag_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_B_M_imag_1_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_B_M_imag_1_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_B_M_imag_1_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_B_M_imag_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_B_M_imag_2_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_B_M_imag_2_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_B_M_imag_2_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_B_M_imag_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_B_M_imag_3_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_B_M_imag_3_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_506_B_M_imag_3_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_506_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_8 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_9 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_10 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_11 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_12 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_13 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_14 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_15 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_16 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_17 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_18 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_19 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_20 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_21 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_22 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_23 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_24 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_25 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_26 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_27 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_28 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_29 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_30 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_506_ap_return_31 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_0_reg_450 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_0_reg_462 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln34_fu_588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_reg_473 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_1_reg_484 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_DiagMatMul_fu_506_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln38_fu_634_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln50_1_fu_885_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal trunc_ln38_1_fu_612_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal bitcast_ln38_fu_646_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln41_fu_658_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln50_fu_897_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln53_fu_909_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln38_fu_622_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_7_fu_626_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_578_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln681_fu_654_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln_fu_682_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_fu_692_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln50_fu_876_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln50_fu_880_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln681_1_fu_905_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln64_fu_1249_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln64_fu_1253_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal bitcast_ln64_fu_1307_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln67_fu_1310_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal regslice_both_out_stream_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_in_stream_V_data_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TDATA_int : STD_LOGIC_VECTOR (63 downto 0);
    signal in_stream_TVALID_int : STD_LOGIC;
    signal in_stream_TREADY_int : STD_LOGIC;
    signal regslice_both_in_stream_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_stream_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TKEEP_int : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_in_stream_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_stream_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_stream_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TSTRB_int : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_in_stream_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_stream_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_stream_V_last_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TLAST_int : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in_stream_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_stream_V_last_V_U_ack_in : STD_LOGIC;
    signal out_stream_TDATA_int : STD_LOGIC_VECTOR (63 downto 0);
    signal out_stream_TVALID_int : STD_LOGIC;
    signal out_stream_TREADY_int : STD_LOGIC;
    signal regslice_both_out_stream_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_stream_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_stream_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_stream_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_stream_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_stream_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_stream_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_stream_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_stream_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_stream_V_last_V_U_vld_out : STD_LOGIC;

    component DiagMatMul IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        A_M_real_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_M_real_ce0 : OUT STD_LOGIC;
        A_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_real_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_M_real_ce1 : OUT STD_LOGIC;
        A_M_real_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_real1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_M_real1_ce0 : OUT STD_LOGIC;
        A_M_real1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_real1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_M_real1_ce1 : OUT STD_LOGIC;
        A_M_real1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_real2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_M_real2_ce0 : OUT STD_LOGIC;
        A_M_real2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_real2_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_M_real2_ce1 : OUT STD_LOGIC;
        A_M_real2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_real3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_M_real3_ce0 : OUT STD_LOGIC;
        A_M_real3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_real3_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_M_real3_ce1 : OUT STD_LOGIC;
        A_M_real3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_imag_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_M_imag_ce0 : OUT STD_LOGIC;
        A_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_imag_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_M_imag_ce1 : OUT STD_LOGIC;
        A_M_imag_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_imag4_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_M_imag4_ce0 : OUT STD_LOGIC;
        A_M_imag4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_imag4_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_M_imag4_ce1 : OUT STD_LOGIC;
        A_M_imag4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_imag5_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_M_imag5_ce0 : OUT STD_LOGIC;
        A_M_imag5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_imag5_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_M_imag5_ce1 : OUT STD_LOGIC;
        A_M_imag5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_imag6_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_M_imag6_ce0 : OUT STD_LOGIC;
        A_M_imag6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_imag6_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_M_imag6_ce1 : OUT STD_LOGIC;
        A_M_imag6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_real_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        B_M_real_0_ce0 : OUT STD_LOGIC;
        B_M_real_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_real_0_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        B_M_real_0_ce1 : OUT STD_LOGIC;
        B_M_real_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_real_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        B_M_real_1_ce0 : OUT STD_LOGIC;
        B_M_real_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_real_1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        B_M_real_1_ce1 : OUT STD_LOGIC;
        B_M_real_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_real_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        B_M_real_2_ce0 : OUT STD_LOGIC;
        B_M_real_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_real_2_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        B_M_real_2_ce1 : OUT STD_LOGIC;
        B_M_real_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_real_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        B_M_real_3_ce0 : OUT STD_LOGIC;
        B_M_real_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_real_3_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        B_M_real_3_ce1 : OUT STD_LOGIC;
        B_M_real_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_imag_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        B_M_imag_0_ce0 : OUT STD_LOGIC;
        B_M_imag_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_imag_0_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        B_M_imag_0_ce1 : OUT STD_LOGIC;
        B_M_imag_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_imag_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        B_M_imag_1_ce0 : OUT STD_LOGIC;
        B_M_imag_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_imag_1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        B_M_imag_1_ce1 : OUT STD_LOGIC;
        B_M_imag_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_imag_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        B_M_imag_2_ce0 : OUT STD_LOGIC;
        B_M_imag_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_imag_2_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        B_M_imag_2_ce1 : OUT STD_LOGIC;
        B_M_imag_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_imag_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        B_M_imag_3_ce0 : OUT STD_LOGIC;
        B_M_imag_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_imag_3_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        B_M_imag_3_ce1 : OUT STD_LOGIC;
        B_M_imag_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_real_0_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_real_0_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_real_0_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_real_0_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_real_1_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_real_1_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_real_1_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_real_1_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_real_2_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_real_2_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_real_2_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_real_2_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_real_3_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_real_3_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_real_3_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_real_3_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_imag_0_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_imag_0_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_imag_0_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_imag_0_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_imag_1_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_imag_1_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_imag_1_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_imag_1_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_imag_2_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_imag_2_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_imag_2_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_imag_2_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_imag_3_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_imag_3_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_imag_3_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_imag_3_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_mux_165_32eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_A_M_real_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    A_M_real_0_U : component matmul_A_M_real_0
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => A_M_real_0_address0,
        ce0 => A_M_real_0_ce0,
        we0 => A_M_real_0_we0,
        d0 => bitcast_ln38_fu_646_p1,
        q0 => A_M_real_0_q0,
        address1 => grp_DiagMatMul_fu_506_A_M_real_address1,
        ce1 => A_M_real_0_ce1,
        q1 => A_M_real_0_q1);

    A_M_real_1_U : component matmul_A_M_real_0
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => A_M_real_1_address0,
        ce0 => A_M_real_1_ce0,
        we0 => A_M_real_1_we0,
        d0 => bitcast_ln38_fu_646_p1,
        q0 => A_M_real_1_q0,
        address1 => grp_DiagMatMul_fu_506_A_M_real1_address1,
        ce1 => A_M_real_1_ce1,
        q1 => A_M_real_1_q1);

    A_M_real_2_U : component matmul_A_M_real_0
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => A_M_real_2_address0,
        ce0 => A_M_real_2_ce0,
        we0 => A_M_real_2_we0,
        d0 => bitcast_ln38_fu_646_p1,
        q0 => A_M_real_2_q0,
        address1 => grp_DiagMatMul_fu_506_A_M_real2_address1,
        ce1 => A_M_real_2_ce1,
        q1 => A_M_real_2_q1);

    A_M_real_3_U : component matmul_A_M_real_0
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => A_M_real_3_address0,
        ce0 => A_M_real_3_ce0,
        we0 => A_M_real_3_we0,
        d0 => bitcast_ln38_fu_646_p1,
        q0 => A_M_real_3_q0,
        address1 => grp_DiagMatMul_fu_506_A_M_real3_address1,
        ce1 => A_M_real_3_ce1,
        q1 => A_M_real_3_q1);

    A_M_imag_0_U : component matmul_A_M_real_0
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => A_M_imag_0_address0,
        ce0 => A_M_imag_0_ce0,
        we0 => A_M_imag_0_we0,
        d0 => bitcast_ln41_fu_658_p1,
        q0 => A_M_imag_0_q0,
        address1 => grp_DiagMatMul_fu_506_A_M_imag_address1,
        ce1 => A_M_imag_0_ce1,
        q1 => A_M_imag_0_q1);

    A_M_imag_1_U : component matmul_A_M_real_0
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => A_M_imag_1_address0,
        ce0 => A_M_imag_1_ce0,
        we0 => A_M_imag_1_we0,
        d0 => bitcast_ln41_fu_658_p1,
        q0 => A_M_imag_1_q0,
        address1 => grp_DiagMatMul_fu_506_A_M_imag4_address1,
        ce1 => A_M_imag_1_ce1,
        q1 => A_M_imag_1_q1);

    A_M_imag_2_U : component matmul_A_M_real_0
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => A_M_imag_2_address0,
        ce0 => A_M_imag_2_ce0,
        we0 => A_M_imag_2_we0,
        d0 => bitcast_ln41_fu_658_p1,
        q0 => A_M_imag_2_q0,
        address1 => grp_DiagMatMul_fu_506_A_M_imag5_address1,
        ce1 => A_M_imag_2_ce1,
        q1 => A_M_imag_2_q1);

    A_M_imag_3_U : component matmul_A_M_real_0
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => A_M_imag_3_address0,
        ce0 => A_M_imag_3_ce0,
        we0 => A_M_imag_3_we0,
        d0 => bitcast_ln41_fu_658_p1,
        q0 => A_M_imag_3_q0,
        address1 => grp_DiagMatMul_fu_506_A_M_imag6_address1,
        ce1 => A_M_imag_3_ce1,
        q1 => A_M_imag_3_q1);

    B_M_real_0_U : component matmul_A_M_real_0
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => B_M_real_0_address0,
        ce0 => B_M_real_0_ce0,
        we0 => B_M_real_0_we0,
        d0 => bitcast_ln50_fu_897_p1,
        q0 => B_M_real_0_q0,
        address1 => grp_DiagMatMul_fu_506_B_M_real_0_address1,
        ce1 => B_M_real_0_ce1,
        q1 => B_M_real_0_q1);

    B_M_real_1_U : component matmul_A_M_real_0
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => B_M_real_1_address0,
        ce0 => B_M_real_1_ce0,
        we0 => B_M_real_1_we0,
        d0 => bitcast_ln50_fu_897_p1,
        q0 => B_M_real_1_q0,
        address1 => grp_DiagMatMul_fu_506_B_M_real_1_address1,
        ce1 => B_M_real_1_ce1,
        q1 => B_M_real_1_q1);

    B_M_real_2_U : component matmul_A_M_real_0
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => B_M_real_2_address0,
        ce0 => B_M_real_2_ce0,
        we0 => B_M_real_2_we0,
        d0 => bitcast_ln50_fu_897_p1,
        q0 => B_M_real_2_q0,
        address1 => grp_DiagMatMul_fu_506_B_M_real_2_address1,
        ce1 => B_M_real_2_ce1,
        q1 => B_M_real_2_q1);

    B_M_real_3_U : component matmul_A_M_real_0
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => B_M_real_3_address0,
        ce0 => B_M_real_3_ce0,
        we0 => B_M_real_3_we0,
        d0 => bitcast_ln50_fu_897_p1,
        q0 => B_M_real_3_q0,
        address1 => grp_DiagMatMul_fu_506_B_M_real_3_address1,
        ce1 => B_M_real_3_ce1,
        q1 => B_M_real_3_q1);

    B_M_imag_0_U : component matmul_A_M_real_0
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => B_M_imag_0_address0,
        ce0 => B_M_imag_0_ce0,
        we0 => B_M_imag_0_we0,
        d0 => bitcast_ln53_fu_909_p1,
        q0 => B_M_imag_0_q0,
        address1 => grp_DiagMatMul_fu_506_B_M_imag_0_address1,
        ce1 => B_M_imag_0_ce1,
        q1 => B_M_imag_0_q1);

    B_M_imag_1_U : component matmul_A_M_real_0
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => B_M_imag_1_address0,
        ce0 => B_M_imag_1_ce0,
        we0 => B_M_imag_1_we0,
        d0 => bitcast_ln53_fu_909_p1,
        q0 => B_M_imag_1_q0,
        address1 => grp_DiagMatMul_fu_506_B_M_imag_1_address1,
        ce1 => B_M_imag_1_ce1,
        q1 => B_M_imag_1_q1);

    B_M_imag_2_U : component matmul_A_M_real_0
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => B_M_imag_2_address0,
        ce0 => B_M_imag_2_ce0,
        we0 => B_M_imag_2_we0,
        d0 => bitcast_ln53_fu_909_p1,
        q0 => B_M_imag_2_q0,
        address1 => grp_DiagMatMul_fu_506_B_M_imag_2_address1,
        ce1 => B_M_imag_2_ce1,
        q1 => B_M_imag_2_q1);

    B_M_imag_3_U : component matmul_A_M_real_0
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => B_M_imag_3_address0,
        ce0 => B_M_imag_3_ce0,
        we0 => B_M_imag_3_we0,
        d0 => bitcast_ln53_fu_909_p1,
        q0 => B_M_imag_3_q0,
        address1 => grp_DiagMatMul_fu_506_B_M_imag_3_address1,
        ce1 => B_M_imag_3_ce1,
        q1 => B_M_imag_3_q1);

    matmul_control_s_axi_U : component matmul_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    grp_DiagMatMul_fu_506 : component DiagMatMul
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_DiagMatMul_fu_506_ap_start,
        ap_done => grp_DiagMatMul_fu_506_ap_done,
        ap_idle => grp_DiagMatMul_fu_506_ap_idle,
        ap_ready => grp_DiagMatMul_fu_506_ap_ready,
        A_M_real_address0 => grp_DiagMatMul_fu_506_A_M_real_address0,
        A_M_real_ce0 => grp_DiagMatMul_fu_506_A_M_real_ce0,
        A_M_real_q0 => A_M_real_0_q0,
        A_M_real_address1 => grp_DiagMatMul_fu_506_A_M_real_address1,
        A_M_real_ce1 => grp_DiagMatMul_fu_506_A_M_real_ce1,
        A_M_real_q1 => A_M_real_0_q1,
        A_M_real1_address0 => grp_DiagMatMul_fu_506_A_M_real1_address0,
        A_M_real1_ce0 => grp_DiagMatMul_fu_506_A_M_real1_ce0,
        A_M_real1_q0 => A_M_real_1_q0,
        A_M_real1_address1 => grp_DiagMatMul_fu_506_A_M_real1_address1,
        A_M_real1_ce1 => grp_DiagMatMul_fu_506_A_M_real1_ce1,
        A_M_real1_q1 => A_M_real_1_q1,
        A_M_real2_address0 => grp_DiagMatMul_fu_506_A_M_real2_address0,
        A_M_real2_ce0 => grp_DiagMatMul_fu_506_A_M_real2_ce0,
        A_M_real2_q0 => A_M_real_2_q0,
        A_M_real2_address1 => grp_DiagMatMul_fu_506_A_M_real2_address1,
        A_M_real2_ce1 => grp_DiagMatMul_fu_506_A_M_real2_ce1,
        A_M_real2_q1 => A_M_real_2_q1,
        A_M_real3_address0 => grp_DiagMatMul_fu_506_A_M_real3_address0,
        A_M_real3_ce0 => grp_DiagMatMul_fu_506_A_M_real3_ce0,
        A_M_real3_q0 => A_M_real_3_q0,
        A_M_real3_address1 => grp_DiagMatMul_fu_506_A_M_real3_address1,
        A_M_real3_ce1 => grp_DiagMatMul_fu_506_A_M_real3_ce1,
        A_M_real3_q1 => A_M_real_3_q1,
        A_M_imag_address0 => grp_DiagMatMul_fu_506_A_M_imag_address0,
        A_M_imag_ce0 => grp_DiagMatMul_fu_506_A_M_imag_ce0,
        A_M_imag_q0 => A_M_imag_0_q0,
        A_M_imag_address1 => grp_DiagMatMul_fu_506_A_M_imag_address1,
        A_M_imag_ce1 => grp_DiagMatMul_fu_506_A_M_imag_ce1,
        A_M_imag_q1 => A_M_imag_0_q1,
        A_M_imag4_address0 => grp_DiagMatMul_fu_506_A_M_imag4_address0,
        A_M_imag4_ce0 => grp_DiagMatMul_fu_506_A_M_imag4_ce0,
        A_M_imag4_q0 => A_M_imag_1_q0,
        A_M_imag4_address1 => grp_DiagMatMul_fu_506_A_M_imag4_address1,
        A_M_imag4_ce1 => grp_DiagMatMul_fu_506_A_M_imag4_ce1,
        A_M_imag4_q1 => A_M_imag_1_q1,
        A_M_imag5_address0 => grp_DiagMatMul_fu_506_A_M_imag5_address0,
        A_M_imag5_ce0 => grp_DiagMatMul_fu_506_A_M_imag5_ce0,
        A_M_imag5_q0 => A_M_imag_2_q0,
        A_M_imag5_address1 => grp_DiagMatMul_fu_506_A_M_imag5_address1,
        A_M_imag5_ce1 => grp_DiagMatMul_fu_506_A_M_imag5_ce1,
        A_M_imag5_q1 => A_M_imag_2_q1,
        A_M_imag6_address0 => grp_DiagMatMul_fu_506_A_M_imag6_address0,
        A_M_imag6_ce0 => grp_DiagMatMul_fu_506_A_M_imag6_ce0,
        A_M_imag6_q0 => A_M_imag_3_q0,
        A_M_imag6_address1 => grp_DiagMatMul_fu_506_A_M_imag6_address1,
        A_M_imag6_ce1 => grp_DiagMatMul_fu_506_A_M_imag6_ce1,
        A_M_imag6_q1 => A_M_imag_3_q1,
        B_M_real_0_address0 => grp_DiagMatMul_fu_506_B_M_real_0_address0,
        B_M_real_0_ce0 => grp_DiagMatMul_fu_506_B_M_real_0_ce0,
        B_M_real_0_q0 => B_M_real_0_q0,
        B_M_real_0_address1 => grp_DiagMatMul_fu_506_B_M_real_0_address1,
        B_M_real_0_ce1 => grp_DiagMatMul_fu_506_B_M_real_0_ce1,
        B_M_real_0_q1 => B_M_real_0_q1,
        B_M_real_1_address0 => grp_DiagMatMul_fu_506_B_M_real_1_address0,
        B_M_real_1_ce0 => grp_DiagMatMul_fu_506_B_M_real_1_ce0,
        B_M_real_1_q0 => B_M_real_1_q0,
        B_M_real_1_address1 => grp_DiagMatMul_fu_506_B_M_real_1_address1,
        B_M_real_1_ce1 => grp_DiagMatMul_fu_506_B_M_real_1_ce1,
        B_M_real_1_q1 => B_M_real_1_q1,
        B_M_real_2_address0 => grp_DiagMatMul_fu_506_B_M_real_2_address0,
        B_M_real_2_ce0 => grp_DiagMatMul_fu_506_B_M_real_2_ce0,
        B_M_real_2_q0 => B_M_real_2_q0,
        B_M_real_2_address1 => grp_DiagMatMul_fu_506_B_M_real_2_address1,
        B_M_real_2_ce1 => grp_DiagMatMul_fu_506_B_M_real_2_ce1,
        B_M_real_2_q1 => B_M_real_2_q1,
        B_M_real_3_address0 => grp_DiagMatMul_fu_506_B_M_real_3_address0,
        B_M_real_3_ce0 => grp_DiagMatMul_fu_506_B_M_real_3_ce0,
        B_M_real_3_q0 => B_M_real_3_q0,
        B_M_real_3_address1 => grp_DiagMatMul_fu_506_B_M_real_3_address1,
        B_M_real_3_ce1 => grp_DiagMatMul_fu_506_B_M_real_3_ce1,
        B_M_real_3_q1 => B_M_real_3_q1,
        B_M_imag_0_address0 => grp_DiagMatMul_fu_506_B_M_imag_0_address0,
        B_M_imag_0_ce0 => grp_DiagMatMul_fu_506_B_M_imag_0_ce0,
        B_M_imag_0_q0 => B_M_imag_0_q0,
        B_M_imag_0_address1 => grp_DiagMatMul_fu_506_B_M_imag_0_address1,
        B_M_imag_0_ce1 => grp_DiagMatMul_fu_506_B_M_imag_0_ce1,
        B_M_imag_0_q1 => B_M_imag_0_q1,
        B_M_imag_1_address0 => grp_DiagMatMul_fu_506_B_M_imag_1_address0,
        B_M_imag_1_ce0 => grp_DiagMatMul_fu_506_B_M_imag_1_ce0,
        B_M_imag_1_q0 => B_M_imag_1_q0,
        B_M_imag_1_address1 => grp_DiagMatMul_fu_506_B_M_imag_1_address1,
        B_M_imag_1_ce1 => grp_DiagMatMul_fu_506_B_M_imag_1_ce1,
        B_M_imag_1_q1 => B_M_imag_1_q1,
        B_M_imag_2_address0 => grp_DiagMatMul_fu_506_B_M_imag_2_address0,
        B_M_imag_2_ce0 => grp_DiagMatMul_fu_506_B_M_imag_2_ce0,
        B_M_imag_2_q0 => B_M_imag_2_q0,
        B_M_imag_2_address1 => grp_DiagMatMul_fu_506_B_M_imag_2_address1,
        B_M_imag_2_ce1 => grp_DiagMatMul_fu_506_B_M_imag_2_ce1,
        B_M_imag_2_q1 => B_M_imag_2_q1,
        B_M_imag_3_address0 => grp_DiagMatMul_fu_506_B_M_imag_3_address0,
        B_M_imag_3_ce0 => grp_DiagMatMul_fu_506_B_M_imag_3_ce0,
        B_M_imag_3_q0 => B_M_imag_3_q0,
        B_M_imag_3_address1 => grp_DiagMatMul_fu_506_B_M_imag_3_address1,
        B_M_imag_3_ce1 => grp_DiagMatMul_fu_506_B_M_imag_3_ce1,
        B_M_imag_3_q1 => B_M_imag_3_q1,
        C_M_real_0_0_read => mulOut_M_real_0_0,
        C_M_real_0_1_read => mulOut_M_real_0_1,
        C_M_real_0_2_read => mulOut_M_real_0_2,
        C_M_real_0_3_read => mulOut_M_real_0_3,
        C_M_real_1_0_read => mulOut_M_real_1_0,
        C_M_real_1_1_read => mulOut_M_real_1_1,
        C_M_real_1_2_read => mulOut_M_real_1_2,
        C_M_real_1_3_read => mulOut_M_real_1_3,
        C_M_real_2_0_read => mulOut_M_real_2_0,
        C_M_real_2_1_read => mulOut_M_real_2_1,
        C_M_real_2_2_read => mulOut_M_real_2_2,
        C_M_real_2_3_read => mulOut_M_real_2_3,
        C_M_real_3_0_read => mulOut_M_real_3_0,
        C_M_real_3_1_read => mulOut_M_real_3_1,
        C_M_real_3_2_read => mulOut_M_real_3_2,
        C_M_real_3_3_read => mulOut_M_real_3_3,
        C_M_imag_0_0_read => mulOut_M_imag_0_0,
        C_M_imag_0_1_read => mulOut_M_imag_0_1,
        C_M_imag_0_2_read => mulOut_M_imag_0_2,
        C_M_imag_0_3_read => mulOut_M_imag_0_3,
        C_M_imag_1_0_read => mulOut_M_imag_1_0,
        C_M_imag_1_1_read => mulOut_M_imag_1_1,
        C_M_imag_1_2_read => mulOut_M_imag_1_2,
        C_M_imag_1_3_read => mulOut_M_imag_1_3,
        C_M_imag_2_0_read => mulOut_M_imag_2_0,
        C_M_imag_2_1_read => mulOut_M_imag_2_1,
        C_M_imag_2_2_read => mulOut_M_imag_2_2,
        C_M_imag_2_3_read => mulOut_M_imag_2_3,
        C_M_imag_3_0_read => mulOut_M_imag_3_0,
        C_M_imag_3_1_read => mulOut_M_imag_3_1,
        C_M_imag_3_2_read => mulOut_M_imag_3_2,
        C_M_imag_3_3_read => mulOut_M_imag_3_3,
        ap_return_0 => grp_DiagMatMul_fu_506_ap_return_0,
        ap_return_1 => grp_DiagMatMul_fu_506_ap_return_1,
        ap_return_2 => grp_DiagMatMul_fu_506_ap_return_2,
        ap_return_3 => grp_DiagMatMul_fu_506_ap_return_3,
        ap_return_4 => grp_DiagMatMul_fu_506_ap_return_4,
        ap_return_5 => grp_DiagMatMul_fu_506_ap_return_5,
        ap_return_6 => grp_DiagMatMul_fu_506_ap_return_6,
        ap_return_7 => grp_DiagMatMul_fu_506_ap_return_7,
        ap_return_8 => grp_DiagMatMul_fu_506_ap_return_8,
        ap_return_9 => grp_DiagMatMul_fu_506_ap_return_9,
        ap_return_10 => grp_DiagMatMul_fu_506_ap_return_10,
        ap_return_11 => grp_DiagMatMul_fu_506_ap_return_11,
        ap_return_12 => grp_DiagMatMul_fu_506_ap_return_12,
        ap_return_13 => grp_DiagMatMul_fu_506_ap_return_13,
        ap_return_14 => grp_DiagMatMul_fu_506_ap_return_14,
        ap_return_15 => grp_DiagMatMul_fu_506_ap_return_15,
        ap_return_16 => grp_DiagMatMul_fu_506_ap_return_16,
        ap_return_17 => grp_DiagMatMul_fu_506_ap_return_17,
        ap_return_18 => grp_DiagMatMul_fu_506_ap_return_18,
        ap_return_19 => grp_DiagMatMul_fu_506_ap_return_19,
        ap_return_20 => grp_DiagMatMul_fu_506_ap_return_20,
        ap_return_21 => grp_DiagMatMul_fu_506_ap_return_21,
        ap_return_22 => grp_DiagMatMul_fu_506_ap_return_22,
        ap_return_23 => grp_DiagMatMul_fu_506_ap_return_23,
        ap_return_24 => grp_DiagMatMul_fu_506_ap_return_24,
        ap_return_25 => grp_DiagMatMul_fu_506_ap_return_25,
        ap_return_26 => grp_DiagMatMul_fu_506_ap_return_26,
        ap_return_27 => grp_DiagMatMul_fu_506_ap_return_27,
        ap_return_28 => grp_DiagMatMul_fu_506_ap_return_28,
        ap_return_29 => grp_DiagMatMul_fu_506_ap_return_29,
        ap_return_30 => grp_DiagMatMul_fu_506_ap_return_30,
        ap_return_31 => grp_DiagMatMul_fu_506_ap_return_31);

    matmul_mux_165_32eOg_U78 : component matmul_mux_165_32eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => mulOut_M_real_0_0_r_reg_1526,
        din1 => mulOut_M_real_0_1_r_reg_1531,
        din2 => mulOut_M_real_0_2_r_reg_1536,
        din3 => mulOut_M_real_0_3_r_reg_1541,
        din4 => mulOut_M_real_1_0_r_reg_1546,
        din5 => mulOut_M_real_1_1_r_reg_1551,
        din6 => mulOut_M_real_1_2_r_reg_1556,
        din7 => mulOut_M_real_1_3_r_reg_1561,
        din8 => mulOut_M_real_2_0_r_reg_1566,
        din9 => mulOut_M_real_2_1_r_reg_1571,
        din10 => mulOut_M_real_2_2_r_reg_1576,
        din11 => mulOut_M_real_2_3_r_reg_1581,
        din12 => mulOut_M_real_3_0_r_reg_1586,
        din13 => mulOut_M_real_3_1_r_reg_1591,
        din14 => mulOut_M_real_3_2_r_reg_1596,
        din15 => mulOut_M_real_3_3_r_reg_1601,
        din16 => zext_ln64_fu_1253_p1,
        dout => tmp_5_fu_1257_p18);

    matmul_mux_165_32eOg_U79 : component matmul_mux_165_32eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => mulOut_M_imag_0_0_r_reg_1606,
        din1 => mulOut_M_imag_0_1_r_reg_1611,
        din2 => mulOut_M_imag_0_2_r_reg_1616,
        din3 => mulOut_M_imag_0_3_r_reg_1621,
        din4 => mulOut_M_imag_1_0_r_reg_1626,
        din5 => mulOut_M_imag_1_1_r_reg_1631,
        din6 => mulOut_M_imag_1_2_r_reg_1636,
        din7 => mulOut_M_imag_1_3_r_reg_1641,
        din8 => mulOut_M_imag_2_0_r_reg_1646,
        din9 => mulOut_M_imag_2_1_r_reg_1651,
        din10 => mulOut_M_imag_2_2_r_reg_1656,
        din11 => mulOut_M_imag_2_3_r_reg_1661,
        din12 => mulOut_M_imag_3_0_r_reg_1666,
        din13 => mulOut_M_imag_3_1_r_reg_1671,
        din14 => mulOut_M_imag_3_2_r_reg_1676,
        din15 => mulOut_M_imag_3_3_r_reg_1681,
        din16 => zext_ln64_fu_1253_p1,
        dout => tmp_6_fu_1279_p18);

    regslice_both_in_stream_V_data_V_U : component regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TDATA,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_data_V_U_ack_in,
        data_out => in_stream_TDATA_int,
        vld_out => in_stream_TVALID_int,
        ack_out => in_stream_TREADY_int,
        apdone_blk => regslice_both_in_stream_V_data_V_U_apdone_blk);

    regslice_both_in_stream_V_keep_V_U : component regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TKEEP,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_keep_V_U_ack_in,
        data_out => in_stream_TKEEP_int,
        vld_out => regslice_both_in_stream_V_keep_V_U_vld_out,
        ack_out => in_stream_TREADY_int,
        apdone_blk => regslice_both_in_stream_V_keep_V_U_apdone_blk);

    regslice_both_in_stream_V_strb_V_U : component regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TSTRB,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_strb_V_U_ack_in,
        data_out => in_stream_TSTRB_int,
        vld_out => regslice_both_in_stream_V_strb_V_U_vld_out,
        ack_out => in_stream_TREADY_int,
        apdone_blk => regslice_both_in_stream_V_strb_V_U_apdone_blk);

    regslice_both_in_stream_V_last_V_U : component regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TLAST,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_last_V_U_ack_in,
        data_out => in_stream_TLAST_int,
        vld_out => regslice_both_in_stream_V_last_V_U_vld_out,
        ack_out => in_stream_TREADY_int,
        apdone_blk => regslice_both_in_stream_V_last_V_U_apdone_blk);

    regslice_both_out_stream_V_data_V_U : component regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => out_stream_TDATA_int,
        vld_in => out_stream_TVALID_int,
        ack_in => out_stream_TREADY_int,
        data_out => out_stream_TDATA,
        vld_out => regslice_both_out_stream_V_data_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_data_V_U_apdone_blk);

    regslice_both_out_stream_V_keep_V_U : component regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv8_F,
        vld_in => out_stream_TVALID_int,
        ack_in => regslice_both_out_stream_V_keep_V_U_ack_in_dummy,
        data_out => out_stream_TKEEP,
        vld_out => regslice_both_out_stream_V_keep_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_keep_V_U_apdone_blk);

    regslice_both_out_stream_V_strb_V_U : component regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv8_FF,
        vld_in => out_stream_TVALID_int,
        ack_in => regslice_both_out_stream_V_strb_V_U_ack_in_dummy,
        data_out => out_stream_TSTRB,
        vld_out => regslice_both_out_stream_V_strb_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_strb_V_U_apdone_blk);

    regslice_both_out_stream_V_last_V_U : component regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => valOut_last_V_reg_1705,
        vld_in => out_stream_TVALID_int,
        ack_in => regslice_both_out_stream_V_last_V_U_ack_in_dummy,
        data_out => out_stream_TLAST,
        vld_out => regslice_both_out_stream_V_last_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((grp_DiagMatMul_fu_506_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state7)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state7);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((grp_DiagMatMul_fu_506_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_DiagMatMul_fu_506_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_DiagMatMul_fu_506_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln46_fu_666_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    grp_DiagMatMul_fu_506_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_DiagMatMul_fu_506_ap_ready = ap_const_logic_1)) then 
                    grp_DiagMatMul_fu_506_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_reg_450_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_0_reg_450 <= ap_const_lv5_0;
            elsif ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0))) and (icmp_ln35_fu_600_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_0_reg_450 <= i_reg_1325;
            end if; 
        end if;
    end process;

    i_1_reg_473_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln34_fu_588_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_1_reg_473 <= ap_const_lv5_0;
            elsif ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0))) and (icmp_ln47_fu_864_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                i_1_reg_473 <= i_4_reg_1344;
            end if; 
        end if;
    end process;

    i_2_reg_495_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln62_fu_1237_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_2_reg_495 <= i_3_fu_1243_p2;
            elsif (((grp_DiagMatMul_fu_506_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                i_2_reg_495 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    j_0_reg_462_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0))) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                j_0_reg_462 <= j_fu_606_p2;
            elsif (((icmp_ln34_fu_588_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_0_reg_462 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    j_1_reg_484_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0))) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                j_1_reg_484 <= j_2_fu_870_p2;
            elsif (((icmp_ln46_fu_666_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                j_1_reg_484 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                i_4_reg_1344 <= i_4_fu_672_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_1325 <= i_fu_594_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln62_reg_1686 <= icmp_ln62_fu_1237_p2;
                icmp_ln62_reg_1686_pp0_iter1_reg <= icmp_ln62_reg_1686;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_DiagMatMul_fu_506_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                mulOut_M_imag_0_0 <= grp_DiagMatMul_fu_506_ap_return_16;
                mulOut_M_imag_0_0_r_reg_1606 <= grp_DiagMatMul_fu_506_ap_return_16;
                mulOut_M_imag_0_1 <= grp_DiagMatMul_fu_506_ap_return_17;
                mulOut_M_imag_0_1_r_reg_1611 <= grp_DiagMatMul_fu_506_ap_return_17;
                mulOut_M_imag_0_2 <= grp_DiagMatMul_fu_506_ap_return_18;
                mulOut_M_imag_0_2_r_reg_1616 <= grp_DiagMatMul_fu_506_ap_return_18;
                mulOut_M_imag_0_3 <= grp_DiagMatMul_fu_506_ap_return_19;
                mulOut_M_imag_0_3_r_reg_1621 <= grp_DiagMatMul_fu_506_ap_return_19;
                mulOut_M_imag_1_0 <= grp_DiagMatMul_fu_506_ap_return_20;
                mulOut_M_imag_1_0_r_reg_1626 <= grp_DiagMatMul_fu_506_ap_return_20;
                mulOut_M_imag_1_1 <= grp_DiagMatMul_fu_506_ap_return_21;
                mulOut_M_imag_1_1_r_reg_1631 <= grp_DiagMatMul_fu_506_ap_return_21;
                mulOut_M_imag_1_2 <= grp_DiagMatMul_fu_506_ap_return_22;
                mulOut_M_imag_1_2_r_reg_1636 <= grp_DiagMatMul_fu_506_ap_return_22;
                mulOut_M_imag_1_3 <= grp_DiagMatMul_fu_506_ap_return_23;
                mulOut_M_imag_1_3_r_reg_1641 <= grp_DiagMatMul_fu_506_ap_return_23;
                mulOut_M_imag_2_0 <= grp_DiagMatMul_fu_506_ap_return_24;
                mulOut_M_imag_2_0_r_reg_1646 <= grp_DiagMatMul_fu_506_ap_return_24;
                mulOut_M_imag_2_1 <= grp_DiagMatMul_fu_506_ap_return_25;
                mulOut_M_imag_2_1_r_reg_1651 <= grp_DiagMatMul_fu_506_ap_return_25;
                mulOut_M_imag_2_2 <= grp_DiagMatMul_fu_506_ap_return_26;
                mulOut_M_imag_2_2_r_reg_1656 <= grp_DiagMatMul_fu_506_ap_return_26;
                mulOut_M_imag_2_3 <= grp_DiagMatMul_fu_506_ap_return_27;
                mulOut_M_imag_2_3_r_reg_1661 <= grp_DiagMatMul_fu_506_ap_return_27;
                mulOut_M_imag_3_0 <= grp_DiagMatMul_fu_506_ap_return_28;
                mulOut_M_imag_3_0_r_reg_1666 <= grp_DiagMatMul_fu_506_ap_return_28;
                mulOut_M_imag_3_1 <= grp_DiagMatMul_fu_506_ap_return_29;
                mulOut_M_imag_3_1_r_reg_1671 <= grp_DiagMatMul_fu_506_ap_return_29;
                mulOut_M_imag_3_2 <= grp_DiagMatMul_fu_506_ap_return_30;
                mulOut_M_imag_3_2_r_reg_1676 <= grp_DiagMatMul_fu_506_ap_return_30;
                mulOut_M_imag_3_3 <= grp_DiagMatMul_fu_506_ap_return_31;
                mulOut_M_imag_3_3_r_reg_1681 <= grp_DiagMatMul_fu_506_ap_return_31;
                mulOut_M_real_0_0 <= grp_DiagMatMul_fu_506_ap_return_0;
                mulOut_M_real_0_0_r_reg_1526 <= grp_DiagMatMul_fu_506_ap_return_0;
                mulOut_M_real_0_1 <= grp_DiagMatMul_fu_506_ap_return_1;
                mulOut_M_real_0_1_r_reg_1531 <= grp_DiagMatMul_fu_506_ap_return_1;
                mulOut_M_real_0_2 <= grp_DiagMatMul_fu_506_ap_return_2;
                mulOut_M_real_0_2_r_reg_1536 <= grp_DiagMatMul_fu_506_ap_return_2;
                mulOut_M_real_0_3 <= grp_DiagMatMul_fu_506_ap_return_3;
                mulOut_M_real_0_3_r_reg_1541 <= grp_DiagMatMul_fu_506_ap_return_3;
                mulOut_M_real_1_0 <= grp_DiagMatMul_fu_506_ap_return_4;
                mulOut_M_real_1_0_r_reg_1546 <= grp_DiagMatMul_fu_506_ap_return_4;
                mulOut_M_real_1_1 <= grp_DiagMatMul_fu_506_ap_return_5;
                mulOut_M_real_1_1_r_reg_1551 <= grp_DiagMatMul_fu_506_ap_return_5;
                mulOut_M_real_1_2 <= grp_DiagMatMul_fu_506_ap_return_6;
                mulOut_M_real_1_2_r_reg_1556 <= grp_DiagMatMul_fu_506_ap_return_6;
                mulOut_M_real_1_3 <= grp_DiagMatMul_fu_506_ap_return_7;
                mulOut_M_real_1_3_r_reg_1561 <= grp_DiagMatMul_fu_506_ap_return_7;
                mulOut_M_real_2_0 <= grp_DiagMatMul_fu_506_ap_return_8;
                mulOut_M_real_2_0_r_reg_1566 <= grp_DiagMatMul_fu_506_ap_return_8;
                mulOut_M_real_2_1 <= grp_DiagMatMul_fu_506_ap_return_9;
                mulOut_M_real_2_1_r_reg_1571 <= grp_DiagMatMul_fu_506_ap_return_9;
                mulOut_M_real_2_2 <= grp_DiagMatMul_fu_506_ap_return_10;
                mulOut_M_real_2_2_r_reg_1576 <= grp_DiagMatMul_fu_506_ap_return_10;
                mulOut_M_real_2_3 <= grp_DiagMatMul_fu_506_ap_return_11;
                mulOut_M_real_2_3_r_reg_1581 <= grp_DiagMatMul_fu_506_ap_return_11;
                mulOut_M_real_3_0 <= grp_DiagMatMul_fu_506_ap_return_12;
                mulOut_M_real_3_0_r_reg_1586 <= grp_DiagMatMul_fu_506_ap_return_12;
                mulOut_M_real_3_1 <= grp_DiagMatMul_fu_506_ap_return_13;
                mulOut_M_real_3_1_r_reg_1591 <= grp_DiagMatMul_fu_506_ap_return_13;
                mulOut_M_real_3_2 <= grp_DiagMatMul_fu_506_ap_return_14;
                mulOut_M_real_3_2_r_reg_1596 <= grp_DiagMatMul_fu_506_ap_return_14;
                mulOut_M_real_3_3 <= grp_DiagMatMul_fu_506_ap_return_15;
                mulOut_M_real_3_3_r_reg_1601 <= grp_DiagMatMul_fu_506_ap_return_15;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln62_fu_1237_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_5_reg_1695 <= tmp_5_fu_1257_p18;
                tmp_6_reg_1700 <= tmp_6_fu_1279_p18;
                valOut_last_V_reg_1705 <= valOut_last_V_fu_1301_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln46_fu_666_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                trunc_ln50_reg_1349 <= trunc_ln50_fu_678_p1;
                    zext_ln47_reg_1353(6 downto 4) <= zext_ln47_fu_700_p1(6 downto 4);
            end if;
        end if;
    end process;
    zext_ln47_reg_1353(3 downto 0) <= "0000";
    zext_ln47_reg_1353(7) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, icmp_ln35_fu_600_p2, ap_CS_fsm_state5, icmp_ln47_fu_864_p2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_state2, ap_CS_fsm_state4, icmp_ln46_fu_666_p2, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_ap_done, icmp_ln62_fu_1237_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln34_fu_588_p2, ap_CS_fsm_state10, regslice_both_out_stream_V_data_V_U_apdone_blk, in_stream_TVALID_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln34_fu_588_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0))) and (icmp_ln35_fu_600_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0))) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((icmp_ln46_fu_666_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state5 => 
                if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0))) and (icmp_ln47_fu_864_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0))) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((grp_DiagMatMul_fu_506_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln62_fu_1237_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln62_fu_1237_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state10 => 
                if (((regslice_both_out_stream_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;

    A_M_imag_0_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_A_M_imag_address0, zext_ln38_fu_634_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_M_imag_0_address0 <= zext_ln38_fu_634_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_M_imag_0_address0 <= grp_DiagMatMul_fu_506_A_M_imag_address0;
        else 
            A_M_imag_0_address0 <= "XXXXXX";
        end if; 
    end process;


    A_M_imag_0_ce0_assign_proc : process(ap_CS_fsm_state3, icmp_ln35_fu_600_p2, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_A_M_imag_ce0, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_M_imag_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_M_imag_0_ce0 <= grp_DiagMatMul_fu_506_A_M_imag_ce0;
        else 
            A_M_imag_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_M_imag_0_ce1_assign_proc : process(ap_CS_fsm_state6, grp_DiagMatMul_fu_506_A_M_imag_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_M_imag_0_ce1 <= grp_DiagMatMul_fu_506_A_M_imag_ce1;
        else 
            A_M_imag_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_M_imag_0_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln35_fu_600_p2, trunc_ln38_1_fu_612_p4, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0))) and (trunc_ln38_1_fu_612_p4 = ap_const_lv3_0) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_M_imag_0_we0 <= ap_const_logic_1;
        else 
            A_M_imag_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    A_M_imag_1_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_A_M_imag4_address0, zext_ln38_fu_634_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_M_imag_1_address0 <= zext_ln38_fu_634_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_M_imag_1_address0 <= grp_DiagMatMul_fu_506_A_M_imag4_address0;
        else 
            A_M_imag_1_address0 <= "XXXXXX";
        end if; 
    end process;


    A_M_imag_1_ce0_assign_proc : process(ap_CS_fsm_state3, icmp_ln35_fu_600_p2, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_A_M_imag4_ce0, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_M_imag_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_M_imag_1_ce0 <= grp_DiagMatMul_fu_506_A_M_imag4_ce0;
        else 
            A_M_imag_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_M_imag_1_ce1_assign_proc : process(ap_CS_fsm_state6, grp_DiagMatMul_fu_506_A_M_imag4_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_M_imag_1_ce1 <= grp_DiagMatMul_fu_506_A_M_imag4_ce1;
        else 
            A_M_imag_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_M_imag_1_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln35_fu_600_p2, trunc_ln38_1_fu_612_p4, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0))) and (trunc_ln38_1_fu_612_p4 = ap_const_lv3_1) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_M_imag_1_we0 <= ap_const_logic_1;
        else 
            A_M_imag_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    A_M_imag_2_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_A_M_imag5_address0, zext_ln38_fu_634_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_M_imag_2_address0 <= zext_ln38_fu_634_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_M_imag_2_address0 <= grp_DiagMatMul_fu_506_A_M_imag5_address0;
        else 
            A_M_imag_2_address0 <= "XXXXXX";
        end if; 
    end process;


    A_M_imag_2_ce0_assign_proc : process(ap_CS_fsm_state3, icmp_ln35_fu_600_p2, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_A_M_imag5_ce0, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_M_imag_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_M_imag_2_ce0 <= grp_DiagMatMul_fu_506_A_M_imag5_ce0;
        else 
            A_M_imag_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_M_imag_2_ce1_assign_proc : process(ap_CS_fsm_state6, grp_DiagMatMul_fu_506_A_M_imag5_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_M_imag_2_ce1 <= grp_DiagMatMul_fu_506_A_M_imag5_ce1;
        else 
            A_M_imag_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_M_imag_2_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln35_fu_600_p2, trunc_ln38_1_fu_612_p4, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0))) and (trunc_ln38_1_fu_612_p4 = ap_const_lv3_2) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_M_imag_2_we0 <= ap_const_logic_1;
        else 
            A_M_imag_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    A_M_imag_3_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_A_M_imag6_address0, zext_ln38_fu_634_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_M_imag_3_address0 <= zext_ln38_fu_634_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_M_imag_3_address0 <= grp_DiagMatMul_fu_506_A_M_imag6_address0;
        else 
            A_M_imag_3_address0 <= "XXXXXX";
        end if; 
    end process;


    A_M_imag_3_ce0_assign_proc : process(ap_CS_fsm_state3, icmp_ln35_fu_600_p2, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_A_M_imag6_ce0, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_M_imag_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_M_imag_3_ce0 <= grp_DiagMatMul_fu_506_A_M_imag6_ce0;
        else 
            A_M_imag_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_M_imag_3_ce1_assign_proc : process(ap_CS_fsm_state6, grp_DiagMatMul_fu_506_A_M_imag6_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_M_imag_3_ce1 <= grp_DiagMatMul_fu_506_A_M_imag6_ce1;
        else 
            A_M_imag_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_M_imag_3_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln35_fu_600_p2, trunc_ln38_1_fu_612_p4, in_stream_TVALID_int)
    begin
        if ((not((trunc_ln38_1_fu_612_p4 = ap_const_lv3_0)) and not((trunc_ln38_1_fu_612_p4 = ap_const_lv3_1)) and not((trunc_ln38_1_fu_612_p4 = ap_const_lv3_2)) and not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0))) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_M_imag_3_we0 <= ap_const_logic_1;
        else 
            A_M_imag_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    A_M_real_0_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_A_M_real_address0, zext_ln38_fu_634_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_M_real_0_address0 <= zext_ln38_fu_634_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_M_real_0_address0 <= grp_DiagMatMul_fu_506_A_M_real_address0;
        else 
            A_M_real_0_address0 <= "XXXXXX";
        end if; 
    end process;


    A_M_real_0_ce0_assign_proc : process(ap_CS_fsm_state3, icmp_ln35_fu_600_p2, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_A_M_real_ce0, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_M_real_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_M_real_0_ce0 <= grp_DiagMatMul_fu_506_A_M_real_ce0;
        else 
            A_M_real_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_M_real_0_ce1_assign_proc : process(ap_CS_fsm_state6, grp_DiagMatMul_fu_506_A_M_real_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_M_real_0_ce1 <= grp_DiagMatMul_fu_506_A_M_real_ce1;
        else 
            A_M_real_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_M_real_0_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln35_fu_600_p2, trunc_ln38_1_fu_612_p4, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0))) and (trunc_ln38_1_fu_612_p4 = ap_const_lv3_0) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_M_real_0_we0 <= ap_const_logic_1;
        else 
            A_M_real_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    A_M_real_1_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_A_M_real1_address0, zext_ln38_fu_634_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_M_real_1_address0 <= zext_ln38_fu_634_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_M_real_1_address0 <= grp_DiagMatMul_fu_506_A_M_real1_address0;
        else 
            A_M_real_1_address0 <= "XXXXXX";
        end if; 
    end process;


    A_M_real_1_ce0_assign_proc : process(ap_CS_fsm_state3, icmp_ln35_fu_600_p2, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_A_M_real1_ce0, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_M_real_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_M_real_1_ce0 <= grp_DiagMatMul_fu_506_A_M_real1_ce0;
        else 
            A_M_real_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_M_real_1_ce1_assign_proc : process(ap_CS_fsm_state6, grp_DiagMatMul_fu_506_A_M_real1_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_M_real_1_ce1 <= grp_DiagMatMul_fu_506_A_M_real1_ce1;
        else 
            A_M_real_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_M_real_1_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln35_fu_600_p2, trunc_ln38_1_fu_612_p4, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0))) and (trunc_ln38_1_fu_612_p4 = ap_const_lv3_1) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_M_real_1_we0 <= ap_const_logic_1;
        else 
            A_M_real_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    A_M_real_2_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_A_M_real2_address0, zext_ln38_fu_634_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_M_real_2_address0 <= zext_ln38_fu_634_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_M_real_2_address0 <= grp_DiagMatMul_fu_506_A_M_real2_address0;
        else 
            A_M_real_2_address0 <= "XXXXXX";
        end if; 
    end process;


    A_M_real_2_ce0_assign_proc : process(ap_CS_fsm_state3, icmp_ln35_fu_600_p2, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_A_M_real2_ce0, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_M_real_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_M_real_2_ce0 <= grp_DiagMatMul_fu_506_A_M_real2_ce0;
        else 
            A_M_real_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_M_real_2_ce1_assign_proc : process(ap_CS_fsm_state6, grp_DiagMatMul_fu_506_A_M_real2_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_M_real_2_ce1 <= grp_DiagMatMul_fu_506_A_M_real2_ce1;
        else 
            A_M_real_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_M_real_2_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln35_fu_600_p2, trunc_ln38_1_fu_612_p4, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0))) and (trunc_ln38_1_fu_612_p4 = ap_const_lv3_2) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_M_real_2_we0 <= ap_const_logic_1;
        else 
            A_M_real_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    A_M_real_3_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_A_M_real3_address0, zext_ln38_fu_634_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_M_real_3_address0 <= zext_ln38_fu_634_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_M_real_3_address0 <= grp_DiagMatMul_fu_506_A_M_real3_address0;
        else 
            A_M_real_3_address0 <= "XXXXXX";
        end if; 
    end process;


    A_M_real_3_ce0_assign_proc : process(ap_CS_fsm_state3, icmp_ln35_fu_600_p2, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_A_M_real3_ce0, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_M_real_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_M_real_3_ce0 <= grp_DiagMatMul_fu_506_A_M_real3_ce0;
        else 
            A_M_real_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_M_real_3_ce1_assign_proc : process(ap_CS_fsm_state6, grp_DiagMatMul_fu_506_A_M_real3_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_M_real_3_ce1 <= grp_DiagMatMul_fu_506_A_M_real3_ce1;
        else 
            A_M_real_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_M_real_3_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln35_fu_600_p2, trunc_ln38_1_fu_612_p4, in_stream_TVALID_int)
    begin
        if ((not((trunc_ln38_1_fu_612_p4 = ap_const_lv3_0)) and not((trunc_ln38_1_fu_612_p4 = ap_const_lv3_1)) and not((trunc_ln38_1_fu_612_p4 = ap_const_lv3_2)) and not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0))) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_M_real_3_we0 <= ap_const_logic_1;
        else 
            A_M_real_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_M_imag_0_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_B_M_imag_0_address0, zext_ln50_1_fu_885_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            B_M_imag_0_address0 <= zext_ln50_1_fu_885_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_M_imag_0_address0 <= grp_DiagMatMul_fu_506_B_M_imag_0_address0;
        else 
            B_M_imag_0_address0 <= "XXXXXX";
        end if; 
    end process;


    B_M_imag_0_ce0_assign_proc : process(ap_CS_fsm_state5, icmp_ln47_fu_864_p2, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_B_M_imag_0_ce0, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            B_M_imag_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_M_imag_0_ce0 <= grp_DiagMatMul_fu_506_B_M_imag_0_ce0;
        else 
            B_M_imag_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_M_imag_0_ce1_assign_proc : process(ap_CS_fsm_state6, grp_DiagMatMul_fu_506_B_M_imag_0_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_M_imag_0_ce1 <= grp_DiagMatMul_fu_506_B_M_imag_0_ce1;
        else 
            B_M_imag_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    B_M_imag_0_we0_assign_proc : process(ap_CS_fsm_state5, icmp_ln47_fu_864_p2, trunc_ln50_reg_1349, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0))) and (trunc_ln50_reg_1349 = ap_const_lv2_0) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            B_M_imag_0_we0 <= ap_const_logic_1;
        else 
            B_M_imag_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_M_imag_1_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_B_M_imag_1_address0, zext_ln50_1_fu_885_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            B_M_imag_1_address0 <= zext_ln50_1_fu_885_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_M_imag_1_address0 <= grp_DiagMatMul_fu_506_B_M_imag_1_address0;
        else 
            B_M_imag_1_address0 <= "XXXXXX";
        end if; 
    end process;


    B_M_imag_1_ce0_assign_proc : process(ap_CS_fsm_state5, icmp_ln47_fu_864_p2, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_B_M_imag_1_ce0, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            B_M_imag_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_M_imag_1_ce0 <= grp_DiagMatMul_fu_506_B_M_imag_1_ce0;
        else 
            B_M_imag_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_M_imag_1_ce1_assign_proc : process(ap_CS_fsm_state6, grp_DiagMatMul_fu_506_B_M_imag_1_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_M_imag_1_ce1 <= grp_DiagMatMul_fu_506_B_M_imag_1_ce1;
        else 
            B_M_imag_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    B_M_imag_1_we0_assign_proc : process(ap_CS_fsm_state5, icmp_ln47_fu_864_p2, trunc_ln50_reg_1349, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0))) and (trunc_ln50_reg_1349 = ap_const_lv2_1) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            B_M_imag_1_we0 <= ap_const_logic_1;
        else 
            B_M_imag_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_M_imag_2_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_B_M_imag_2_address0, zext_ln50_1_fu_885_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            B_M_imag_2_address0 <= zext_ln50_1_fu_885_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_M_imag_2_address0 <= grp_DiagMatMul_fu_506_B_M_imag_2_address0;
        else 
            B_M_imag_2_address0 <= "XXXXXX";
        end if; 
    end process;


    B_M_imag_2_ce0_assign_proc : process(ap_CS_fsm_state5, icmp_ln47_fu_864_p2, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_B_M_imag_2_ce0, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            B_M_imag_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_M_imag_2_ce0 <= grp_DiagMatMul_fu_506_B_M_imag_2_ce0;
        else 
            B_M_imag_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_M_imag_2_ce1_assign_proc : process(ap_CS_fsm_state6, grp_DiagMatMul_fu_506_B_M_imag_2_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_M_imag_2_ce1 <= grp_DiagMatMul_fu_506_B_M_imag_2_ce1;
        else 
            B_M_imag_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    B_M_imag_2_we0_assign_proc : process(ap_CS_fsm_state5, icmp_ln47_fu_864_p2, trunc_ln50_reg_1349, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0))) and (trunc_ln50_reg_1349 = ap_const_lv2_2) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            B_M_imag_2_we0 <= ap_const_logic_1;
        else 
            B_M_imag_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_M_imag_3_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_B_M_imag_3_address0, zext_ln50_1_fu_885_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            B_M_imag_3_address0 <= zext_ln50_1_fu_885_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_M_imag_3_address0 <= grp_DiagMatMul_fu_506_B_M_imag_3_address0;
        else 
            B_M_imag_3_address0 <= "XXXXXX";
        end if; 
    end process;


    B_M_imag_3_ce0_assign_proc : process(ap_CS_fsm_state5, icmp_ln47_fu_864_p2, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_B_M_imag_3_ce0, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            B_M_imag_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_M_imag_3_ce0 <= grp_DiagMatMul_fu_506_B_M_imag_3_ce0;
        else 
            B_M_imag_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_M_imag_3_ce1_assign_proc : process(ap_CS_fsm_state6, grp_DiagMatMul_fu_506_B_M_imag_3_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_M_imag_3_ce1 <= grp_DiagMatMul_fu_506_B_M_imag_3_ce1;
        else 
            B_M_imag_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    B_M_imag_3_we0_assign_proc : process(ap_CS_fsm_state5, icmp_ln47_fu_864_p2, trunc_ln50_reg_1349, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0))) and (trunc_ln50_reg_1349 = ap_const_lv2_3) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            B_M_imag_3_we0 <= ap_const_logic_1;
        else 
            B_M_imag_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_M_real_0_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_B_M_real_0_address0, zext_ln50_1_fu_885_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            B_M_real_0_address0 <= zext_ln50_1_fu_885_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_M_real_0_address0 <= grp_DiagMatMul_fu_506_B_M_real_0_address0;
        else 
            B_M_real_0_address0 <= "XXXXXX";
        end if; 
    end process;


    B_M_real_0_ce0_assign_proc : process(ap_CS_fsm_state5, icmp_ln47_fu_864_p2, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_B_M_real_0_ce0, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            B_M_real_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_M_real_0_ce0 <= grp_DiagMatMul_fu_506_B_M_real_0_ce0;
        else 
            B_M_real_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_M_real_0_ce1_assign_proc : process(ap_CS_fsm_state6, grp_DiagMatMul_fu_506_B_M_real_0_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_M_real_0_ce1 <= grp_DiagMatMul_fu_506_B_M_real_0_ce1;
        else 
            B_M_real_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    B_M_real_0_we0_assign_proc : process(ap_CS_fsm_state5, icmp_ln47_fu_864_p2, trunc_ln50_reg_1349, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0))) and (trunc_ln50_reg_1349 = ap_const_lv2_0) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            B_M_real_0_we0 <= ap_const_logic_1;
        else 
            B_M_real_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_M_real_1_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_B_M_real_1_address0, zext_ln50_1_fu_885_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            B_M_real_1_address0 <= zext_ln50_1_fu_885_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_M_real_1_address0 <= grp_DiagMatMul_fu_506_B_M_real_1_address0;
        else 
            B_M_real_1_address0 <= "XXXXXX";
        end if; 
    end process;


    B_M_real_1_ce0_assign_proc : process(ap_CS_fsm_state5, icmp_ln47_fu_864_p2, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_B_M_real_1_ce0, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            B_M_real_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_M_real_1_ce0 <= grp_DiagMatMul_fu_506_B_M_real_1_ce0;
        else 
            B_M_real_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_M_real_1_ce1_assign_proc : process(ap_CS_fsm_state6, grp_DiagMatMul_fu_506_B_M_real_1_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_M_real_1_ce1 <= grp_DiagMatMul_fu_506_B_M_real_1_ce1;
        else 
            B_M_real_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    B_M_real_1_we0_assign_proc : process(ap_CS_fsm_state5, icmp_ln47_fu_864_p2, trunc_ln50_reg_1349, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0))) and (trunc_ln50_reg_1349 = ap_const_lv2_1) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            B_M_real_1_we0 <= ap_const_logic_1;
        else 
            B_M_real_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_M_real_2_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_B_M_real_2_address0, zext_ln50_1_fu_885_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            B_M_real_2_address0 <= zext_ln50_1_fu_885_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_M_real_2_address0 <= grp_DiagMatMul_fu_506_B_M_real_2_address0;
        else 
            B_M_real_2_address0 <= "XXXXXX";
        end if; 
    end process;


    B_M_real_2_ce0_assign_proc : process(ap_CS_fsm_state5, icmp_ln47_fu_864_p2, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_B_M_real_2_ce0, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            B_M_real_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_M_real_2_ce0 <= grp_DiagMatMul_fu_506_B_M_real_2_ce0;
        else 
            B_M_real_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_M_real_2_ce1_assign_proc : process(ap_CS_fsm_state6, grp_DiagMatMul_fu_506_B_M_real_2_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_M_real_2_ce1 <= grp_DiagMatMul_fu_506_B_M_real_2_ce1;
        else 
            B_M_real_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    B_M_real_2_we0_assign_proc : process(ap_CS_fsm_state5, icmp_ln47_fu_864_p2, trunc_ln50_reg_1349, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0))) and (trunc_ln50_reg_1349 = ap_const_lv2_2) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            B_M_real_2_we0 <= ap_const_logic_1;
        else 
            B_M_real_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_M_real_3_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_B_M_real_3_address0, zext_ln50_1_fu_885_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            B_M_real_3_address0 <= zext_ln50_1_fu_885_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_M_real_3_address0 <= grp_DiagMatMul_fu_506_B_M_real_3_address0;
        else 
            B_M_real_3_address0 <= "XXXXXX";
        end if; 
    end process;


    B_M_real_3_ce0_assign_proc : process(ap_CS_fsm_state5, icmp_ln47_fu_864_p2, ap_CS_fsm_state6, grp_DiagMatMul_fu_506_B_M_real_3_ce0, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            B_M_real_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_M_real_3_ce0 <= grp_DiagMatMul_fu_506_B_M_real_3_ce0;
        else 
            B_M_real_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_M_real_3_ce1_assign_proc : process(ap_CS_fsm_state6, grp_DiagMatMul_fu_506_B_M_real_3_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_M_real_3_ce1 <= grp_DiagMatMul_fu_506_B_M_real_3_ce1;
        else 
            B_M_real_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    B_M_real_3_we0_assign_proc : process(ap_CS_fsm_state5, icmp_ln47_fu_864_p2, trunc_ln50_reg_1349, in_stream_TVALID_int)
    begin
        if ((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0))) and (trunc_ln50_reg_1349 = ap_const_lv2_3) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            B_M_real_3_we0 <= ap_const_logic_1;
        else 
            B_M_real_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln50_fu_880_p2 <= std_logic_vector(unsigned(zext_ln50_fu_876_p1) + unsigned(zext_ln47_reg_1353));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(6);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(7);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state8_io, ap_block_state9_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state9_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state8_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state8_io, ap_block_state9_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state9_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state8_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state3_assign_proc : process(icmp_ln35_fu_600_p2, in_stream_TVALID_int)
    begin
                ap_block_state3 <= ((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0));
    end process;


    ap_block_state5_assign_proc : process(icmp_ln47_fu_864_p2, in_stream_TVALID_int)
    begin
                ap_block_state5 <= ((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0));
    end process;

        ap_block_state7_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_io_assign_proc : process(icmp_ln62_reg_1686, out_stream_TREADY_int)
    begin
                ap_block_state8_io <= ((out_stream_TREADY_int = ap_const_logic_0) and (icmp_ln62_reg_1686 = ap_const_lv1_0));
    end process;

        ap_block_state8_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_io_assign_proc : process(icmp_ln62_reg_1686_pp0_iter1_reg, out_stream_TREADY_int)
    begin
                ap_block_state9_io <= ((out_stream_TREADY_int = ap_const_logic_0) and (icmp_ln62_reg_1686_pp0_iter1_reg = ap_const_lv1_0));
    end process;

        ap_block_state9_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state7_assign_proc : process(icmp_ln62_fu_1237_p2)
    begin
        if ((icmp_ln62_fu_1237_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state7 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state10, regslice_both_out_stream_V_data_V_U_apdone_blk)
    begin
        if (((regslice_both_out_stream_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state10, regslice_both_out_stream_V_data_V_U_apdone_blk)
    begin
        if (((regslice_both_out_stream_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    bitcast_ln38_fu_646_p1 <= grp_fu_578_p4;
    bitcast_ln41_fu_658_p1 <= trunc_ln681_fu_654_p1;
    bitcast_ln50_fu_897_p1 <= grp_fu_578_p4;
    bitcast_ln53_fu_909_p1 <= trunc_ln681_1_fu_905_p1;
    bitcast_ln64_fu_1307_p1 <= tmp_5_reg_1695;
    bitcast_ln67_fu_1310_p1 <= tmp_6_reg_1700;
    grp_DiagMatMul_fu_506_ap_start <= grp_DiagMatMul_fu_506_ap_start_reg;
    grp_fu_578_p4 <= in_stream_TDATA_int(63 downto 32);
    i_3_fu_1243_p2 <= std_logic_vector(unsigned(i_2_reg_495) + unsigned(ap_const_lv5_1));
    i_4_fu_672_p2 <= std_logic_vector(unsigned(i_1_reg_473) + unsigned(ap_const_lv5_1));
    i_fu_594_p2 <= std_logic_vector(unsigned(i_0_reg_450) + unsigned(ap_const_lv5_1));
    icmp_ln34_fu_588_p2 <= "1" when (i_0_reg_450 = ap_const_lv5_10) else "0";
    icmp_ln35_fu_600_p2 <= "1" when (j_0_reg_462 = ap_const_lv5_10) else "0";
    icmp_ln46_fu_666_p2 <= "1" when (i_1_reg_473 = ap_const_lv5_10) else "0";
    icmp_ln47_fu_864_p2 <= "1" when (j_1_reg_484 = ap_const_lv5_10) else "0";
    icmp_ln62_fu_1237_p2 <= "1" when (i_2_reg_495 = ap_const_lv5_10) else "0";

    in_stream_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state3, icmp_ln35_fu_600_p2, ap_CS_fsm_state5, icmp_ln47_fu_864_p2, in_stream_TVALID_int)
    begin
        if ((((icmp_ln47_fu_864_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln35_fu_600_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            in_stream_TDATA_blk_n <= in_stream_TVALID_int;
        else 
            in_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_stream_TREADY_assign_proc : process(in_stream_TVALID, regslice_both_in_stream_V_data_V_U_ack_in)
    begin
        if (((in_stream_TVALID = ap_const_logic_1) and (regslice_both_in_stream_V_data_V_U_ack_in = ap_const_logic_1))) then 
            in_stream_TREADY <= ap_const_logic_1;
        else 
            in_stream_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    in_stream_TREADY_int_assign_proc : process(ap_CS_fsm_state3, icmp_ln35_fu_600_p2, ap_CS_fsm_state5, icmp_ln47_fu_864_p2, in_stream_TVALID_int)
    begin
        if (((not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0))) and (icmp_ln47_fu_864_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((in_stream_TVALID_int = ap_const_logic_0) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0))) and (icmp_ln35_fu_600_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            in_stream_TREADY_int <= ap_const_logic_1;
        else 
            in_stream_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;

    j_2_fu_870_p2 <= std_logic_vector(unsigned(j_1_reg_484) + unsigned(ap_const_lv5_1));
    j_fu_606_p2 <= std_logic_vector(unsigned(j_0_reg_462) + unsigned(ap_const_lv5_1));
    lshr_ln_fu_682_p4 <= i_1_reg_473(4 downto 2);

    out_stream_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln62_reg_1686, ap_enable_reg_pp0_iter2, icmp_ln62_reg_1686_pp0_iter1_reg, out_stream_TREADY_int)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln62_reg_1686_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln62_reg_1686 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_stream_TDATA_blk_n <= out_stream_TREADY_int;
        else 
            out_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_stream_TDATA_int <= (bitcast_ln64_fu_1307_p1 & bitcast_ln67_fu_1310_p1);
    out_stream_TVALID <= regslice_both_out_stream_V_data_V_U_vld_out;

    out_stream_TVALID_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln62_reg_1686, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln62_reg_1686 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_stream_TVALID_int <= ap_const_logic_1;
        else 
            out_stream_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;

    tmp_3_fu_692_p3 <= (lshr_ln_fu_682_p4 & ap_const_lv4_0);
    tmp_7_fu_626_p3 <= (i_0_reg_450 & trunc_ln38_fu_622_p1);
    trunc_ln38_1_fu_612_p4 <= j_0_reg_462(4 downto 2);
    trunc_ln38_fu_622_p1 <= j_0_reg_462(2 - 1 downto 0);
    trunc_ln50_fu_678_p1 <= i_1_reg_473(2 - 1 downto 0);
    trunc_ln64_fu_1249_p1 <= i_2_reg_495(4 - 1 downto 0);
    trunc_ln681_1_fu_905_p1 <= in_stream_TDATA_int(32 - 1 downto 0);
    trunc_ln681_fu_654_p1 <= in_stream_TDATA_int(32 - 1 downto 0);
    valOut_last_V_fu_1301_p2 <= "1" when (i_2_reg_495 = ap_const_lv5_F) else "0";
    zext_ln38_fu_634_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_626_p3),64));
    zext_ln47_fu_700_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_692_p3),8));
    zext_ln50_1_fu_885_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln50_fu_880_p2),64));
    zext_ln50_fu_876_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_1_reg_484),8));
    zext_ln64_fu_1253_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln64_fu_1249_p1),5));
end behav;
