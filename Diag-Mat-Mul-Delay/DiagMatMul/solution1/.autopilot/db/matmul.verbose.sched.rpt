

================================================================
== Vivado HLS Report for 'matmul'
================================================================
* Date:           Sat Oct 30 19:27:43 2021

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        DiagMatMul
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu28dr-ffvg1517-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.419 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-------+-------+---------+
    |  Latency (cycles) |  Latency (absolute) |    Interval   | Pipeline|
    |   min   |   max   |    min   |    max   |  min  |  max  |   Type  |
    +---------+---------+----------+----------+-------+-------+---------+
    |    36296|    36296| 0.363 ms | 0.363 ms |  36296|  36296|   none  |
    +---------+---------+----------+----------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                  |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name    |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1          |      255|      255|         1|          -|          -|   256|    no    |
        |- loop_input_A1   |    16896|    16896|        66|          -|          -|   256|    no    |
        | + loop_input_A2  |       64|       64|         1|          -|          -|    64|    no    |
        |- loop_input_B1   |    16512|    16512|       258|          -|          -|    64|    no    |
        | + loop_input_B2  |      256|      256|         1|          -|          -|   256|    no    |
        |- loop_out1       |      257|      257|         3|          1|          1|   256|    yes   |
        +------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 11
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 8 9 10 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 2 3 
3 --> 4 5 
4 --> 4 3 
5 --> 7 6 
6 --> 6 5 
7 --> 8 
8 --> 11 9 
9 --> 10 
10 --> 8 
11 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.65>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %in_stream_V_data_V), !map !77"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %in_stream_V_keep_V), !map !81"   --->   Operation 13 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %in_stream_V_strb_V), !map !85"   --->   Operation 14 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %in_stream_V_last_V), !map !89"   --->   Operation 15 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %out_stream_V_data_V), !map !93"   --->   Operation 16 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %out_stream_V_keep_V), !map !97"   --->   Operation 17 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %out_stream_V_strb_V), !map !101"   --->   Operation 18 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %out_stream_V_last_V), !map !105"   --->   Operation 19 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([7 x i8]* @matmul_str) nounwind"   --->   Operation 20 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %out_stream_V_data_V, i8* %out_stream_V_keep_V, i8* %out_stream_V_strb_V, i1* %out_stream_V_last_V, [5 x i8]* @p_str4, i32 1, i32 1, [5 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [matmul.cpp:25]   --->   Operation 21 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %in_stream_V_data_V, i8* %in_stream_V_keep_V, i8* %in_stream_V_strb_V, i1* %in_stream_V_last_V, [5 x i8]* @p_str4, i32 1, i32 1, [5 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [matmul.cpp:26]   --->   Operation 22 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str6, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [8 x i8]* @p_str7, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [matmul.cpp:27]   --->   Operation 23 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.65ns)   --->   "br label %arrayctor.loop"   --->   Operation 24 'br' <Predicate = true> <Delay = 0.65>

State 2 <SV = 1> <Delay = 1.19>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%phi_ln36 = phi i8 [ 0, %codeRepl1 ], [ %add_ln36, %arrayctor.loop ]" [matmul.cpp:36]   --->   Operation 25 'phi' 'phi_ln36' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.76ns)   --->   "%add_ln36 = add i8 %phi_ln36, 1" [matmul.cpp:36]   --->   Operation 26 'add' 'add_ln36' <Predicate = true> <Delay = 0.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.84ns)   --->   "%icmp_ln36 = icmp eq i8 %phi_ln36, -1" [matmul.cpp:36]   --->   Operation 27 'icmp' 'icmp_ln36' <Predicate = true> <Delay = 0.84> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)"   --->   Operation 28 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "br i1 %icmp_ln36, label %.preheader71.preheader, label %arrayctor.loop" [matmul.cpp:36]   --->   Operation 29 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.65ns)   --->   "br label %.preheader71" [matmul.cpp:45]   --->   Operation 30 'br' <Predicate = (icmp_ln36)> <Delay = 0.65>

State 3 <SV = 2> <Delay = 1.22>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%i_0 = phi i9 [ %i, %loop_input_A1_end ], [ 0, %.preheader71.preheader ]"   --->   Operation 31 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.88ns)   --->   "%icmp_ln45 = icmp eq i9 %i_0, -256" [matmul.cpp:45]   --->   Operation 32 'icmp' 'icmp_ln45' <Predicate = true> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)"   --->   Operation 33 'speclooptripcount' 'empty_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.77ns)   --->   "%i = add i9 %i_0, 1" [matmul.cpp:45]   --->   Operation 34 'add' 'i' <Predicate = true> <Delay = 0.77> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "br i1 %icmp_ln45, label %.preheader.preheader, label %loop_input_A1_begin" [matmul.cpp:45]   --->   Operation 35 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str10) nounwind" [matmul.cpp:45]   --->   Operation 36 'specloopname' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str10)" [matmul.cpp:45]   --->   Operation 37 'specregionbegin' 'tmp' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.65ns)   --->   "br label %0" [matmul.cpp:46]   --->   Operation 38 'br' <Predicate = (!icmp_ln45)> <Delay = 0.65>
ST_3 : Operation 39 [1/1] (0.65ns)   --->   "br label %.preheader" [matmul.cpp:56]   --->   Operation 39 'br' <Predicate = (icmp_ln45)> <Delay = 0.65>

State 4 <SV = 3> <Delay = 1.23>
ST_4 : Operation 40 [1/1] (0.00ns)   --->   "%j_0 = phi i7 [ 0, %loop_input_A1_begin ], [ %j, %2 ]"   --->   Operation 40 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 41 [1/1] (0.81ns)   --->   "%icmp_ln46 = icmp eq i7 %j_0, -64" [matmul.cpp:46]   --->   Operation 41 'icmp' 'icmp_ln46' <Predicate = true> <Delay = 0.81> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64)"   --->   Operation 42 'speclooptripcount' 'empty_9' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 43 [1/1] (0.77ns)   --->   "%j = add i7 %j_0, 1" [matmul.cpp:46]   --->   Operation 43 'add' 'j' <Predicate = true> <Delay = 0.77> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "br i1 %icmp_ln46, label %loop_input_A1_end, label %1" [matmul.cpp:46]   --->   Operation 44 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str11) nounwind" [matmul.cpp:46]   --->   Operation 45 'specloopname' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%empty_10 = call { i64, i8, i8, i1 } @_ssdm_op_Read.axis.volatile.i64P.i8P.i8P.i1P(i64* %in_stream_V_data_V, i8* %in_stream_V_keep_V, i8* %in_stream_V_strb_V, i1* %in_stream_V_last_V)" [matmul.cpp:47]   --->   Operation 46 'read' 'empty_10' <Predicate = (!icmp_ln46)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%tmp_data_V_2 = extractvalue { i64, i8, i8, i1 } %empty_10, 0" [matmul.cpp:47]   --->   Operation 47 'extractvalue' 'tmp_data_V_2' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "%p_Result_s = call i32 @_ssdm_op_PartSelect.i32.i64.i32.i32(i64 %tmp_data_V_2, i32 32, i32 63)" [matmul.cpp:48]   --->   Operation 48 'partselect' 'p_Result_s' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%trunc_ln49_1 = call i3 @_ssdm_op_PartSelect.i3.i7.i32.i32(i7 %j_0, i32 4, i32 6)" [matmul.cpp:49]   --->   Operation 49 'partselect' 'trunc_ln49_1' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%trunc_ln49 = trunc i7 %j_0 to i4" [matmul.cpp:49]   --->   Operation 50 'trunc' 'trunc_ln49' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_7 = call i13 @_ssdm_op_BitConcatenate.i13.i9.i4(i9 %i_0, i4 %trunc_ln49)" [matmul.cpp:49]   --->   Operation 51 'bitconcatenate' 'tmp_7' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln49 = zext i13 %tmp_7 to i64" [matmul.cpp:49]   --->   Operation 52 'zext' 'zext_ln49' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%rxmat_M_imag_0_addr = getelementptr [4096 x float]* @rxmat_M_imag_0, i64 0, i64 %zext_ln49" [matmul.cpp:49]   --->   Operation 53 'getelementptr' 'rxmat_M_imag_0_addr' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "%rxmat_M_imag_1_addr = getelementptr [4096 x float]* @rxmat_M_imag_1, i64 0, i64 %zext_ln49" [matmul.cpp:49]   --->   Operation 54 'getelementptr' 'rxmat_M_imag_1_addr' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%rxmat_M_imag_2_addr = getelementptr [4096 x float]* @rxmat_M_imag_2, i64 0, i64 %zext_ln49" [matmul.cpp:49]   --->   Operation 55 'getelementptr' 'rxmat_M_imag_2_addr' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "%rxmat_M_imag_3_addr = getelementptr [4096 x float]* @rxmat_M_imag_3, i64 0, i64 %zext_ln49" [matmul.cpp:49]   --->   Operation 56 'getelementptr' 'rxmat_M_imag_3_addr' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%rxmat_M_real_0_addr = getelementptr [4096 x float]* @rxmat_M_real_0, i64 0, i64 %zext_ln49" [matmul.cpp:49]   --->   Operation 57 'getelementptr' 'rxmat_M_real_0_addr' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%rxmat_M_real_1_addr = getelementptr [4096 x float]* @rxmat_M_real_1, i64 0, i64 %zext_ln49" [matmul.cpp:49]   --->   Operation 58 'getelementptr' 'rxmat_M_real_1_addr' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "%rxmat_M_real_2_addr = getelementptr [4096 x float]* @rxmat_M_real_2, i64 0, i64 %zext_ln49" [matmul.cpp:49]   --->   Operation 59 'getelementptr' 'rxmat_M_real_2_addr' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%rxmat_M_real_3_addr = getelementptr [4096 x float]* @rxmat_M_real_3, i64 0, i64 %zext_ln49" [matmul.cpp:49]   --->   Operation 60 'getelementptr' 'rxmat_M_real_3_addr' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%bitcast_ln49 = bitcast i32 %p_Result_s to float" [matmul.cpp:49]   --->   Operation 61 'bitcast' 'bitcast_ln49' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "%trunc_ln681 = trunc i64 %tmp_data_V_2 to i32" [matmul.cpp:51]   --->   Operation 62 'trunc' 'trunc_ln681' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%bitcast_ln52 = bitcast i32 %trunc_ln681 to float" [matmul.cpp:52]   --->   Operation 63 'bitcast' 'bitcast_ln52' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_4 : Operation 64 [1/1] (0.72ns)   --->   "switch i3 %trunc_ln49_1, label %branch7 [
    i3 0, label %branch4
    i3 1, label %branch5
    i3 2, label %branch6
  ]" [matmul.cpp:49]   --->   Operation 64 'switch' <Predicate = (!icmp_ln46)> <Delay = 0.72>
ST_4 : Operation 65 [1/1] (1.23ns)   --->   "store float %bitcast_ln49, float* %rxmat_M_imag_2_addr, align 4" [matmul.cpp:49]   --->   Operation 65 'store' <Predicate = (!icmp_ln46 & trunc_ln49_1 == 2)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_4 : Operation 66 [1/1] (1.23ns)   --->   "store float %bitcast_ln52, float* %rxmat_M_real_2_addr, align 4" [matmul.cpp:52]   --->   Operation 66 'store' <Predicate = (!icmp_ln46 & trunc_ln49_1 == 2)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "br label %2"   --->   Operation 67 'br' <Predicate = (!icmp_ln46 & trunc_ln49_1 == 2)> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (1.23ns)   --->   "store float %bitcast_ln49, float* %rxmat_M_imag_1_addr, align 4" [matmul.cpp:49]   --->   Operation 68 'store' <Predicate = (!icmp_ln46 & trunc_ln49_1 == 1)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_4 : Operation 69 [1/1] (1.23ns)   --->   "store float %bitcast_ln52, float* %rxmat_M_real_1_addr, align 4" [matmul.cpp:52]   --->   Operation 69 'store' <Predicate = (!icmp_ln46 & trunc_ln49_1 == 1)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_4 : Operation 70 [1/1] (0.00ns)   --->   "br label %2"   --->   Operation 70 'br' <Predicate = (!icmp_ln46 & trunc_ln49_1 == 1)> <Delay = 0.00>
ST_4 : Operation 71 [1/1] (1.23ns)   --->   "store float %bitcast_ln49, float* %rxmat_M_imag_0_addr, align 4" [matmul.cpp:49]   --->   Operation 71 'store' <Predicate = (!icmp_ln46 & trunc_ln49_1 == 0)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_4 : Operation 72 [1/1] (1.23ns)   --->   "store float %bitcast_ln52, float* %rxmat_M_real_0_addr, align 4" [matmul.cpp:52]   --->   Operation 72 'store' <Predicate = (!icmp_ln46 & trunc_ln49_1 == 0)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_4 : Operation 73 [1/1] (0.00ns)   --->   "br label %2"   --->   Operation 73 'br' <Predicate = (!icmp_ln46 & trunc_ln49_1 == 0)> <Delay = 0.00>
ST_4 : Operation 74 [1/1] (1.23ns)   --->   "store float %bitcast_ln49, float* %rxmat_M_imag_3_addr, align 4" [matmul.cpp:49]   --->   Operation 74 'store' <Predicate = (!icmp_ln46 & trunc_ln49_1 != 0 & trunc_ln49_1 != 1 & trunc_ln49_1 != 2)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_4 : Operation 75 [1/1] (1.23ns)   --->   "store float %bitcast_ln52, float* %rxmat_M_real_3_addr, align 4" [matmul.cpp:52]   --->   Operation 75 'store' <Predicate = (!icmp_ln46 & trunc_ln49_1 != 0 & trunc_ln49_1 != 1 & trunc_ln49_1 != 2)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "br label %2"   --->   Operation 76 'br' <Predicate = (!icmp_ln46 & trunc_ln49_1 != 0 & trunc_ln49_1 != 1 & trunc_ln49_1 != 2)> <Delay = 0.00>
ST_4 : Operation 77 [1/1] (0.00ns)   --->   "br label %0" [matmul.cpp:46]   --->   Operation 77 'br' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_4 : Operation 78 [1/1] (0.00ns)   --->   "%empty_11 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str10, i32 %tmp)" [matmul.cpp:54]   --->   Operation 78 'specregionend' 'empty_11' <Predicate = (icmp_ln46)> <Delay = 0.00>
ST_4 : Operation 79 [1/1] (0.00ns)   --->   "br label %.preheader71" [matmul.cpp:45]   --->   Operation 79 'br' <Predicate = (icmp_ln46)> <Delay = 0.00>

State 5 <SV = 3> <Delay = 1.16>
ST_5 : Operation 80 [1/1] (0.00ns)   --->   "%i_1 = phi i7 [ %i_4, %loop_input_B1_end ], [ 0, %.preheader.preheader ]"   --->   Operation 80 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 81 [1/1] (0.81ns)   --->   "%icmp_ln56 = icmp eq i7 %i_1, -64" [matmul.cpp:56]   --->   Operation 81 'icmp' 'icmp_ln56' <Predicate = true> <Delay = 0.81> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 82 [1/1] (0.00ns)   --->   "%empty_12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64)"   --->   Operation 82 'speclooptripcount' 'empty_12' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 83 [1/1] (0.77ns)   --->   "%i_4 = add i7 %i_1, 1" [matmul.cpp:56]   --->   Operation 83 'add' 'i_4' <Predicate = true> <Delay = 0.77> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 84 [1/1] (0.00ns)   --->   "br i1 %icmp_ln56, label %6, label %loop_input_B1_begin" [matmul.cpp:56]   --->   Operation 84 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 85 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str12) nounwind" [matmul.cpp:56]   --->   Operation 85 'specloopname' <Predicate = (!icmp_ln56)> <Delay = 0.00>
ST_5 : Operation 86 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str12)" [matmul.cpp:56]   --->   Operation 86 'specregionbegin' 'tmp_1' <Predicate = (!icmp_ln56)> <Delay = 0.00>
ST_5 : Operation 87 [1/1] (0.00ns)   --->   "%trunc_ln60 = trunc i7 %i_1 to i2" [matmul.cpp:60]   --->   Operation 87 'trunc' 'trunc_ln60' <Predicate = (!icmp_ln56)> <Delay = 0.00>
ST_5 : Operation 88 [1/1] (0.00ns)   --->   "%lshr_ln = call i5 @_ssdm_op_PartSelect.i5.i7.i32.i32(i7 %i_1, i32 2, i32 6)" [matmul.cpp:60]   --->   Operation 88 'partselect' 'lshr_ln' <Predicate = (!icmp_ln56)> <Delay = 0.00>
ST_5 : Operation 89 [1/1] (0.00ns)   --->   "%tmp_6 = call i13 @_ssdm_op_BitConcatenate.i13.i5.i8(i5 %lshr_ln, i8 0)" [matmul.cpp:60]   --->   Operation 89 'bitconcatenate' 'tmp_6' <Predicate = (!icmp_ln56)> <Delay = 0.00>
ST_5 : Operation 90 [1/1] (0.00ns)   --->   "%zext_ln57 = zext i13 %tmp_6 to i14" [matmul.cpp:57]   --->   Operation 90 'zext' 'zext_ln57' <Predicate = (!icmp_ln56)> <Delay = 0.00>
ST_5 : Operation 91 [1/1] (0.65ns)   --->   "br label %3" [matmul.cpp:57]   --->   Operation 91 'br' <Predicate = (!icmp_ln56)> <Delay = 0.65>
ST_5 : Operation 92 [2/2] (0.00ns)   --->   "call fastcc void @DiagMatMul([4096 x float]* @rxmat_M_real_0, [4096 x float]* @rxmat_M_real_1, [4096 x float]* @rxmat_M_real_2, [4096 x float]* @rxmat_M_real_3, [4096 x float]* @rxmat_M_imag_0, [4096 x float]* @rxmat_M_imag_1, [4096 x float]* @rxmat_M_imag_2, [4096 x float]* @rxmat_M_imag_3, [4096 x float]* @xmat_M_real_0, [4096 x float]* @xmat_M_real_1, [4096 x float]* @xmat_M_real_2, [4096 x float]* @xmat_M_real_3, [4096 x float]* @xmat_M_imag_0, [4096 x float]* @xmat_M_imag_1, [4096 x float]* @xmat_M_imag_2, [4096 x float]* @xmat_M_imag_3, [64 x float]* @mulOut_M_real_0, [64 x float]* @mulOut_M_real_1, [64 x float]* @mulOut_M_real_2, [64 x float]* @mulOut_M_real_3, [64 x float]* @mulOut_M_imag_0, [64 x float]* @mulOut_M_imag_1, [64 x float]* @mulOut_M_imag_2, [64 x float]* @mulOut_M_imag_3)" [matmul.cpp:69]   --->   Operation 92 'call' <Predicate = (icmp_ln56)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 4> <Delay = 2.05>
ST_6 : Operation 93 [1/1] (0.00ns)   --->   "%j_1 = phi i9 [ 0, %loop_input_B1_begin ], [ %j_2, %5 ]"   --->   Operation 93 'phi' 'j_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 94 [1/1] (0.88ns)   --->   "%icmp_ln57 = icmp eq i9 %j_1, -256" [matmul.cpp:57]   --->   Operation 94 'icmp' 'icmp_ln57' <Predicate = true> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 95 [1/1] (0.00ns)   --->   "%empty_13 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)"   --->   Operation 95 'speclooptripcount' 'empty_13' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 96 [1/1] (0.77ns)   --->   "%j_2 = add i9 %j_1, 1" [matmul.cpp:57]   --->   Operation 96 'add' 'j_2' <Predicate = true> <Delay = 0.77> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 97 [1/1] (0.00ns)   --->   "br i1 %icmp_ln57, label %loop_input_B1_end, label %4" [matmul.cpp:57]   --->   Operation 97 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 98 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str13) nounwind" [matmul.cpp:57]   --->   Operation 98 'specloopname' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_6 : Operation 99 [1/1] (0.00ns)   --->   "%empty_14 = call { i64, i8, i8, i1 } @_ssdm_op_Read.axis.volatile.i64P.i8P.i8P.i1P(i64* %in_stream_V_data_V, i8* %in_stream_V_keep_V, i8* %in_stream_V_strb_V, i1* %in_stream_V_last_V)" [matmul.cpp:58]   --->   Operation 99 'read' 'empty_14' <Predicate = (!icmp_ln57)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_6 : Operation 100 [1/1] (0.00ns)   --->   "%tmp_data_V_3 = extractvalue { i64, i8, i8, i1 } %empty_14, 0" [matmul.cpp:58]   --->   Operation 100 'extractvalue' 'tmp_data_V_3' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_6 : Operation 101 [1/1] (0.00ns)   --->   "%p_Result_4 = call i32 @_ssdm_op_PartSelect.i32.i64.i32.i32(i64 %tmp_data_V_3, i32 32, i32 63)" [matmul.cpp:59]   --->   Operation 101 'partselect' 'p_Result_4' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_6 : Operation 102 [1/1] (0.00ns)   --->   "%zext_ln60 = zext i9 %j_1 to i14" [matmul.cpp:60]   --->   Operation 102 'zext' 'zext_ln60' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_6 : Operation 103 [1/1] (0.82ns)   --->   "%add_ln60 = add i14 %zext_ln60, %zext_ln57" [matmul.cpp:60]   --->   Operation 103 'add' 'add_ln60' <Predicate = (!icmp_ln57)> <Delay = 0.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 104 [1/1] (0.00ns)   --->   "%zext_ln60_1 = zext i14 %add_ln60 to i64" [matmul.cpp:60]   --->   Operation 104 'zext' 'zext_ln60_1' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_6 : Operation 105 [1/1] (0.00ns)   --->   "%xmat_M_imag_0_addr = getelementptr [4096 x float]* @xmat_M_imag_0, i64 0, i64 %zext_ln60_1" [matmul.cpp:60]   --->   Operation 105 'getelementptr' 'xmat_M_imag_0_addr' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_6 : Operation 106 [1/1] (0.00ns)   --->   "%xmat_M_imag_1_addr = getelementptr [4096 x float]* @xmat_M_imag_1, i64 0, i64 %zext_ln60_1" [matmul.cpp:60]   --->   Operation 106 'getelementptr' 'xmat_M_imag_1_addr' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_6 : Operation 107 [1/1] (0.00ns)   --->   "%xmat_M_imag_2_addr = getelementptr [4096 x float]* @xmat_M_imag_2, i64 0, i64 %zext_ln60_1" [matmul.cpp:60]   --->   Operation 107 'getelementptr' 'xmat_M_imag_2_addr' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_6 : Operation 108 [1/1] (0.00ns)   --->   "%xmat_M_imag_3_addr = getelementptr [4096 x float]* @xmat_M_imag_3, i64 0, i64 %zext_ln60_1" [matmul.cpp:60]   --->   Operation 108 'getelementptr' 'xmat_M_imag_3_addr' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_6 : Operation 109 [1/1] (0.00ns)   --->   "%xmat_M_real_0_addr = getelementptr [4096 x float]* @xmat_M_real_0, i64 0, i64 %zext_ln60_1" [matmul.cpp:60]   --->   Operation 109 'getelementptr' 'xmat_M_real_0_addr' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_6 : Operation 110 [1/1] (0.00ns)   --->   "%xmat_M_real_1_addr = getelementptr [4096 x float]* @xmat_M_real_1, i64 0, i64 %zext_ln60_1" [matmul.cpp:60]   --->   Operation 110 'getelementptr' 'xmat_M_real_1_addr' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_6 : Operation 111 [1/1] (0.00ns)   --->   "%xmat_M_real_2_addr = getelementptr [4096 x float]* @xmat_M_real_2, i64 0, i64 %zext_ln60_1" [matmul.cpp:60]   --->   Operation 111 'getelementptr' 'xmat_M_real_2_addr' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_6 : Operation 112 [1/1] (0.00ns)   --->   "%xmat_M_real_3_addr = getelementptr [4096 x float]* @xmat_M_real_3, i64 0, i64 %zext_ln60_1" [matmul.cpp:60]   --->   Operation 112 'getelementptr' 'xmat_M_real_3_addr' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_6 : Operation 113 [1/1] (0.00ns)   --->   "%bitcast_ln60 = bitcast i32 %p_Result_4 to float" [matmul.cpp:60]   --->   Operation 113 'bitcast' 'bitcast_ln60' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_6 : Operation 114 [1/1] (0.00ns)   --->   "%trunc_ln681_1 = trunc i64 %tmp_data_V_3 to i32" [matmul.cpp:62]   --->   Operation 114 'trunc' 'trunc_ln681_1' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_6 : Operation 115 [1/1] (0.00ns)   --->   "%bitcast_ln63 = bitcast i32 %trunc_ln681_1 to float" [matmul.cpp:63]   --->   Operation 115 'bitcast' 'bitcast_ln63' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_6 : Operation 116 [1/1] (0.72ns)   --->   "switch i2 %trunc_ln60, label %branch15 [
    i2 0, label %branch12
    i2 1, label %branch13
    i2 -2, label %branch14
  ]" [matmul.cpp:60]   --->   Operation 116 'switch' <Predicate = (!icmp_ln57)> <Delay = 0.72>
ST_6 : Operation 117 [1/1] (1.23ns)   --->   "store float %bitcast_ln60, float* %xmat_M_imag_2_addr, align 4" [matmul.cpp:60]   --->   Operation 117 'store' <Predicate = (!icmp_ln57 & trunc_ln60 == 2)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_6 : Operation 118 [1/1] (1.23ns)   --->   "store float %bitcast_ln63, float* %xmat_M_real_2_addr, align 4" [matmul.cpp:63]   --->   Operation 118 'store' <Predicate = (!icmp_ln57 & trunc_ln60 == 2)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_6 : Operation 119 [1/1] (0.00ns)   --->   "br label %5"   --->   Operation 119 'br' <Predicate = (!icmp_ln57 & trunc_ln60 == 2)> <Delay = 0.00>
ST_6 : Operation 120 [1/1] (1.23ns)   --->   "store float %bitcast_ln60, float* %xmat_M_imag_1_addr, align 4" [matmul.cpp:60]   --->   Operation 120 'store' <Predicate = (!icmp_ln57 & trunc_ln60 == 1)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_6 : Operation 121 [1/1] (1.23ns)   --->   "store float %bitcast_ln63, float* %xmat_M_real_1_addr, align 4" [matmul.cpp:63]   --->   Operation 121 'store' <Predicate = (!icmp_ln57 & trunc_ln60 == 1)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_6 : Operation 122 [1/1] (0.00ns)   --->   "br label %5"   --->   Operation 122 'br' <Predicate = (!icmp_ln57 & trunc_ln60 == 1)> <Delay = 0.00>
ST_6 : Operation 123 [1/1] (1.23ns)   --->   "store float %bitcast_ln60, float* %xmat_M_imag_0_addr, align 4" [matmul.cpp:60]   --->   Operation 123 'store' <Predicate = (!icmp_ln57 & trunc_ln60 == 0)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_6 : Operation 124 [1/1] (1.23ns)   --->   "store float %bitcast_ln63, float* %xmat_M_real_0_addr, align 4" [matmul.cpp:63]   --->   Operation 124 'store' <Predicate = (!icmp_ln57 & trunc_ln60 == 0)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_6 : Operation 125 [1/1] (0.00ns)   --->   "br label %5"   --->   Operation 125 'br' <Predicate = (!icmp_ln57 & trunc_ln60 == 0)> <Delay = 0.00>
ST_6 : Operation 126 [1/1] (1.23ns)   --->   "store float %bitcast_ln60, float* %xmat_M_imag_3_addr, align 4" [matmul.cpp:60]   --->   Operation 126 'store' <Predicate = (!icmp_ln57 & trunc_ln60 == 3)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_6 : Operation 127 [1/1] (1.23ns)   --->   "store float %bitcast_ln63, float* %xmat_M_real_3_addr, align 4" [matmul.cpp:63]   --->   Operation 127 'store' <Predicate = (!icmp_ln57 & trunc_ln60 == 3)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_6 : Operation 128 [1/1] (0.00ns)   --->   "br label %5"   --->   Operation 128 'br' <Predicate = (!icmp_ln57 & trunc_ln60 == 3)> <Delay = 0.00>
ST_6 : Operation 129 [1/1] (0.00ns)   --->   "br label %3" [matmul.cpp:57]   --->   Operation 129 'br' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_6 : Operation 130 [1/1] (0.00ns)   --->   "%empty_15 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str12, i32 %tmp_1)" [matmul.cpp:65]   --->   Operation 130 'specregionend' 'empty_15' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_6 : Operation 131 [1/1] (0.00ns)   --->   "br label %.preheader" [matmul.cpp:56]   --->   Operation 131 'br' <Predicate = (icmp_ln57)> <Delay = 0.00>

State 7 <SV = 4> <Delay = 0.65>
ST_7 : Operation 132 [1/2] (0.00ns)   --->   "call fastcc void @DiagMatMul([4096 x float]* @rxmat_M_real_0, [4096 x float]* @rxmat_M_real_1, [4096 x float]* @rxmat_M_real_2, [4096 x float]* @rxmat_M_real_3, [4096 x float]* @rxmat_M_imag_0, [4096 x float]* @rxmat_M_imag_1, [4096 x float]* @rxmat_M_imag_2, [4096 x float]* @rxmat_M_imag_3, [4096 x float]* @xmat_M_real_0, [4096 x float]* @xmat_M_real_1, [4096 x float]* @xmat_M_real_2, [4096 x float]* @xmat_M_real_3, [4096 x float]* @xmat_M_imag_0, [4096 x float]* @xmat_M_imag_1, [4096 x float]* @xmat_M_imag_2, [4096 x float]* @xmat_M_imag_3, [64 x float]* @mulOut_M_real_0, [64 x float]* @mulOut_M_real_1, [64 x float]* @mulOut_M_real_2, [64 x float]* @mulOut_M_real_3, [64 x float]* @mulOut_M_imag_0, [64 x float]* @mulOut_M_imag_1, [64 x float]* @mulOut_M_imag_2, [64 x float]* @mulOut_M_imag_3)" [matmul.cpp:69]   --->   Operation 132 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 133 [1/1] (0.65ns)   --->   "br label %7" [matmul.cpp:71]   --->   Operation 133 'br' <Predicate = true> <Delay = 0.65>

State 8 <SV = 5> <Delay = 1.23>
ST_8 : Operation 134 [1/1] (0.00ns)   --->   "%i_2 = phi i9 [ 0, %6 ], [ %i_3, %loop_out1 ]"   --->   Operation 134 'phi' 'i_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 135 [1/1] (0.88ns)   --->   "%icmp_ln71 = icmp eq i9 %i_2, -256" [matmul.cpp:71]   --->   Operation 135 'icmp' 'icmp_ln71' <Predicate = true> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 136 [1/1] (0.00ns)   --->   "%empty_16 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)"   --->   Operation 136 'speclooptripcount' 'empty_16' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 137 [1/1] (0.77ns)   --->   "%i_3 = add i9 %i_2, 1" [matmul.cpp:71]   --->   Operation 137 'add' 'i_3' <Predicate = true> <Delay = 0.77> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 138 [1/1] (0.00ns)   --->   "br i1 %icmp_ln71, label %8, label %loop_out1" [matmul.cpp:71]   --->   Operation 138 'br' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 139 [1/1] (0.00ns)   --->   "%lshr_ln1 = call i3 @_ssdm_op_PartSelect.i3.i9.i32.i32(i9 %i_2, i32 6, i32 8)" [matmul.cpp:74]   --->   Operation 139 'partselect' 'lshr_ln1' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_8 : Operation 140 [1/1] (0.00ns)   --->   "%trunc_ln1079 = trunc i9 %i_2 to i6" [matmul.cpp:74]   --->   Operation 140 'trunc' 'trunc_ln1079' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_8 : Operation 141 [1/1] (0.00ns)   --->   "%zext_ln1079 = zext i6 %trunc_ln1079 to i64" [matmul.cpp:74]   --->   Operation 141 'zext' 'zext_ln1079' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_8 : Operation 142 [1/1] (0.00ns)   --->   "%mulOut_M_imag_0_add = getelementptr [64 x float]* @mulOut_M_imag_0, i64 0, i64 %zext_ln1079" [matmul.cpp:74]   --->   Operation 142 'getelementptr' 'mulOut_M_imag_0_add' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_8 : Operation 143 [2/2] (1.23ns)   --->   "%mulOut_M_imag_0_loa = load float* %mulOut_M_imag_0_add, align 4" [matmul.cpp:74]   --->   Operation 143 'load' 'mulOut_M_imag_0_loa' <Predicate = (!icmp_ln71)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_8 : Operation 144 [1/1] (0.00ns)   --->   "%mulOut_M_imag_1_add = getelementptr [64 x float]* @mulOut_M_imag_1, i64 0, i64 %zext_ln1079" [matmul.cpp:74]   --->   Operation 144 'getelementptr' 'mulOut_M_imag_1_add' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_8 : Operation 145 [2/2] (1.23ns)   --->   "%mulOut_M_imag_1_loa = load float* %mulOut_M_imag_1_add, align 4" [matmul.cpp:74]   --->   Operation 145 'load' 'mulOut_M_imag_1_loa' <Predicate = (!icmp_ln71)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_8 : Operation 146 [1/1] (0.00ns)   --->   "%mulOut_M_imag_2_add = getelementptr [64 x float]* @mulOut_M_imag_2, i64 0, i64 %zext_ln1079" [matmul.cpp:74]   --->   Operation 146 'getelementptr' 'mulOut_M_imag_2_add' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_8 : Operation 147 [2/2] (1.23ns)   --->   "%mulOut_M_imag_2_loa = load float* %mulOut_M_imag_2_add, align 4" [matmul.cpp:74]   --->   Operation 147 'load' 'mulOut_M_imag_2_loa' <Predicate = (!icmp_ln71)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_8 : Operation 148 [1/1] (0.00ns)   --->   "%mulOut_M_imag_3_add = getelementptr [64 x float]* @mulOut_M_imag_3, i64 0, i64 %zext_ln1079" [matmul.cpp:74]   --->   Operation 148 'getelementptr' 'mulOut_M_imag_3_add' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_8 : Operation 149 [2/2] (1.23ns)   --->   "%mulOut_M_imag_3_loa = load float* %mulOut_M_imag_3_add, align 4" [matmul.cpp:74]   --->   Operation 149 'load' 'mulOut_M_imag_3_loa' <Predicate = (!icmp_ln71)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_8 : Operation 150 [1/1] (0.00ns)   --->   "%mulOut_M_real_0_add = getelementptr [64 x float]* @mulOut_M_real_0, i64 0, i64 %zext_ln1079" [matmul.cpp:77]   --->   Operation 150 'getelementptr' 'mulOut_M_real_0_add' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_8 : Operation 151 [2/2] (1.23ns)   --->   "%mulOut_M_real_0_loa = load float* %mulOut_M_real_0_add, align 4" [matmul.cpp:77]   --->   Operation 151 'load' 'mulOut_M_real_0_loa' <Predicate = (!icmp_ln71)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_8 : Operation 152 [1/1] (0.00ns)   --->   "%mulOut_M_real_1_add = getelementptr [64 x float]* @mulOut_M_real_1, i64 0, i64 %zext_ln1079" [matmul.cpp:77]   --->   Operation 152 'getelementptr' 'mulOut_M_real_1_add' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_8 : Operation 153 [2/2] (1.23ns)   --->   "%mulOut_M_real_1_loa = load float* %mulOut_M_real_1_add, align 4" [matmul.cpp:77]   --->   Operation 153 'load' 'mulOut_M_real_1_loa' <Predicate = (!icmp_ln71)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_8 : Operation 154 [1/1] (0.00ns)   --->   "%mulOut_M_real_2_add = getelementptr [64 x float]* @mulOut_M_real_2, i64 0, i64 %zext_ln1079" [matmul.cpp:77]   --->   Operation 154 'getelementptr' 'mulOut_M_real_2_add' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_8 : Operation 155 [2/2] (1.23ns)   --->   "%mulOut_M_real_2_loa = load float* %mulOut_M_real_2_add, align 4" [matmul.cpp:77]   --->   Operation 155 'load' 'mulOut_M_real_2_loa' <Predicate = (!icmp_ln71)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_8 : Operation 156 [1/1] (0.00ns)   --->   "%mulOut_M_real_3_add = getelementptr [64 x float]* @mulOut_M_real_3, i64 0, i64 %zext_ln1079" [matmul.cpp:77]   --->   Operation 156 'getelementptr' 'mulOut_M_real_3_add' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_8 : Operation 157 [2/2] (1.23ns)   --->   "%mulOut_M_real_3_loa = load float* %mulOut_M_real_3_add, align 4" [matmul.cpp:77]   --->   Operation 157 'load' 'mulOut_M_real_3_loa' <Predicate = (!icmp_ln71)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_8 : Operation 158 [1/1] (0.88ns)   --->   "%valOut_last_V = icmp eq i9 %i_2, 255" [matmul.cpp:81]   --->   Operation 158 'icmp' 'valOut_last_V' <Predicate = (!icmp_ln71)> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 6> <Delay = 1.62>
ST_9 : Operation 159 [1/1] (0.00ns)   --->   "%zext_ln1079_1 = zext i3 %lshr_ln1 to i32" [matmul.cpp:74]   --->   Operation 159 'zext' 'zext_ln1079_1' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_9 : Operation 160 [1/2] (1.23ns)   --->   "%mulOut_M_imag_0_loa = load float* %mulOut_M_imag_0_add, align 4" [matmul.cpp:74]   --->   Operation 160 'load' 'mulOut_M_imag_0_loa' <Predicate = (!icmp_ln71)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_9 : Operation 161 [1/2] (1.23ns)   --->   "%mulOut_M_imag_1_loa = load float* %mulOut_M_imag_1_add, align 4" [matmul.cpp:74]   --->   Operation 161 'load' 'mulOut_M_imag_1_loa' <Predicate = (!icmp_ln71)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_9 : Operation 162 [1/2] (1.23ns)   --->   "%mulOut_M_imag_2_loa = load float* %mulOut_M_imag_2_add, align 4" [matmul.cpp:74]   --->   Operation 162 'load' 'mulOut_M_imag_2_loa' <Predicate = (!icmp_ln71)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_9 : Operation 163 [1/2] (1.23ns)   --->   "%mulOut_M_imag_3_loa = load float* %mulOut_M_imag_3_add, align 4" [matmul.cpp:74]   --->   Operation 163 'load' 'mulOut_M_imag_3_loa' <Predicate = (!icmp_ln71)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_9 : Operation 164 [1/1] (0.39ns)   --->   "%tmp_3 = call float @_ssdm_op_Mux.ap_auto.4float.i32(float %mulOut_M_imag_0_loa, float %mulOut_M_imag_1_loa, float %mulOut_M_imag_2_loa, float %mulOut_M_imag_3_loa, i32 %zext_ln1079_1)" [matmul.cpp:74]   --->   Operation 164 'mux' 'tmp_3' <Predicate = (!icmp_ln71)> <Delay = 0.39> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 165 [1/1] (0.00ns)   --->   "%bitcast_ln74 = bitcast float %tmp_3 to i32" [matmul.cpp:74]   --->   Operation 165 'bitcast' 'bitcast_ln74' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_9 : Operation 166 [1/2] (1.23ns)   --->   "%mulOut_M_real_0_loa = load float* %mulOut_M_real_0_add, align 4" [matmul.cpp:77]   --->   Operation 166 'load' 'mulOut_M_real_0_loa' <Predicate = (!icmp_ln71)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_9 : Operation 167 [1/2] (1.23ns)   --->   "%mulOut_M_real_1_loa = load float* %mulOut_M_real_1_add, align 4" [matmul.cpp:77]   --->   Operation 167 'load' 'mulOut_M_real_1_loa' <Predicate = (!icmp_ln71)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_9 : Operation 168 [1/2] (1.23ns)   --->   "%mulOut_M_real_2_loa = load float* %mulOut_M_real_2_add, align 4" [matmul.cpp:77]   --->   Operation 168 'load' 'mulOut_M_real_2_loa' <Predicate = (!icmp_ln71)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_9 : Operation 169 [1/2] (1.23ns)   --->   "%mulOut_M_real_3_loa = load float* %mulOut_M_real_3_add, align 4" [matmul.cpp:77]   --->   Operation 169 'load' 'mulOut_M_real_3_loa' <Predicate = (!icmp_ln71)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_9 : Operation 170 [1/1] (0.39ns)   --->   "%tmp_4 = call float @_ssdm_op_Mux.ap_auto.4float.i32(float %mulOut_M_real_0_loa, float %mulOut_M_real_1_loa, float %mulOut_M_real_2_loa, float %mulOut_M_real_3_loa, i32 %zext_ln1079_1)" [matmul.cpp:77]   --->   Operation 170 'mux' 'tmp_4' <Predicate = (!icmp_ln71)> <Delay = 0.39> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 171 [1/1] (0.00ns)   --->   "%bitcast_ln77 = bitcast float %tmp_4 to i32" [matmul.cpp:77]   --->   Operation 171 'bitcast' 'bitcast_ln77' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_9 : Operation 172 [1/1] (0.00ns)   --->   "%p_Result_2 = call i64 @_ssdm_op_BitConcatenate.i64.i32.i32(i32 %bitcast_ln74, i32 %bitcast_ln77)" [matmul.cpp:78]   --->   Operation 172 'bitconcatenate' 'p_Result_2' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_9 : Operation 173 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i8P.i1P(i64* %out_stream_V_data_V, i8* %out_stream_V_keep_V, i8* %out_stream_V_strb_V, i1* %out_stream_V_last_V, i64 %p_Result_2, i8 -1, i8 -1, i1 %valOut_last_V)" [matmul.cpp:84]   --->   Operation 173 'write' <Predicate = (!icmp_ln71)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 10 <SV = 7> <Delay = 0.00>
ST_10 : Operation 174 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str14) nounwind" [matmul.cpp:71]   --->   Operation 174 'specloopname' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_10 : Operation 175 [1/1] (0.00ns)   --->   "%tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str14)" [matmul.cpp:71]   --->   Operation 175 'specregionbegin' 'tmp_2' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_10 : Operation 176 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [matmul.cpp:72]   --->   Operation 176 'specpipeline' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_10 : Operation 177 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i8P.i1P(i64* %out_stream_V_data_V, i8* %out_stream_V_keep_V, i8* %out_stream_V_strb_V, i1* %out_stream_V_last_V, i64 %p_Result_2, i8 -1, i8 -1, i1 %valOut_last_V)" [matmul.cpp:84]   --->   Operation 177 'write' <Predicate = (!icmp_ln71)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_10 : Operation 178 [1/1] (0.00ns)   --->   "%empty_17 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str14, i32 %tmp_2)" [matmul.cpp:85]   --->   Operation 178 'specregionend' 'empty_17' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_10 : Operation 179 [1/1] (0.00ns)   --->   "br label %7" [matmul.cpp:71]   --->   Operation 179 'br' <Predicate = (!icmp_ln71)> <Delay = 0.00>

State 11 <SV = 6> <Delay = 0.00>
ST_11 : Operation 180 [1/1] (0.00ns)   --->   "ret void" [matmul.cpp:86]   --->   Operation 180 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.656ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('phi_ln36', matmul.cpp:36) with incoming values : ('add_ln36', matmul.cpp:36) [49]  (0.656 ns)

 <State 2>: 1.19ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln36', matmul.cpp:36) [51]  (0.849 ns)
	blocking operation 0.343 ns on control path)

 <State 3>: 1.22ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln45', matmul.cpp:45) [58]  (0.881 ns)
	blocking operation 0.343 ns on control path)

 <State 4>: 1.24ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', matmul.cpp:46) [67]  (0 ns)
	'getelementptr' operation ('rxmat_M_imag_2_addr', matmul.cpp:49) [83]  (0 ns)
	'store' operation ('store_ln49', matmul.cpp:49) of variable '__val', matmul.cpp:49 on array 'rxmat_M_imag_2' [94]  (1.24 ns)

 <State 5>: 1.16ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln56', matmul.cpp:56) [118]  (0.817 ns)
	blocking operation 0.343 ns on control path)

 <State 6>: 2.06ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', matmul.cpp:57) [131]  (0 ns)
	'add' operation ('add_ln60', matmul.cpp:60) [142]  (0.82 ns)
	'getelementptr' operation ('xmat_M_imag_2_addr', matmul.cpp:60) [146]  (0 ns)
	'store' operation ('store_ln60', matmul.cpp:60) of variable '__val', matmul.cpp:60 on array 'xmat_M_imag_2' [157]  (1.24 ns)

 <State 7>: 0.656ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', matmul.cpp:71) [181]  (0.656 ns)

 <State 8>: 1.24ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', matmul.cpp:71) [181]  (0 ns)
	'getelementptr' operation ('mulOut_M_imag_0_add', matmul.cpp:74) [194]  (0 ns)
	'load' operation ('mulOut_M_imag_0_loa', matmul.cpp:74) on array 'mulOut_M_imag_0' [195]  (1.24 ns)

 <State 9>: 1.63ns
The critical path consists of the following:
	'load' operation ('mulOut_M_imag_0_loa', matmul.cpp:74) on array 'mulOut_M_imag_0' [195]  (1.24 ns)
	'mux' operation ('tmp_3', matmul.cpp:74) [202]  (0.392 ns)

 <State 10>: 0ns
The critical path consists of the following:

 <State 11>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
