// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module DopplerDelay (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        rxmat_M_real_2_address0,
        rxmat_M_real_2_ce0,
        rxmat_M_real_2_q0,
        rxmat_M_real_2_address1,
        rxmat_M_real_2_ce1,
        rxmat_M_real_2_q1,
        rxmat_M_real_21_address0,
        rxmat_M_real_21_ce0,
        rxmat_M_real_21_q0,
        rxmat_M_real_21_address1,
        rxmat_M_real_21_ce1,
        rxmat_M_real_21_q1,
        rxmat_M_real_22_address0,
        rxmat_M_real_22_ce0,
        rxmat_M_real_22_q0,
        rxmat_M_real_22_address1,
        rxmat_M_real_22_ce1,
        rxmat_M_real_22_q1,
        rxmat_M_real_23_address0,
        rxmat_M_real_23_ce0,
        rxmat_M_real_23_q0,
        rxmat_M_real_23_address1,
        rxmat_M_real_23_ce1,
        rxmat_M_real_23_q1,
        rxmat_M_imag_2_address0,
        rxmat_M_imag_2_ce0,
        rxmat_M_imag_2_q0,
        rxmat_M_imag_2_address1,
        rxmat_M_imag_2_ce1,
        rxmat_M_imag_2_q1,
        rxmat_M_imag_24_address0,
        rxmat_M_imag_24_ce0,
        rxmat_M_imag_24_q0,
        rxmat_M_imag_24_address1,
        rxmat_M_imag_24_ce1,
        rxmat_M_imag_24_q1,
        rxmat_M_imag_25_address0,
        rxmat_M_imag_25_ce0,
        rxmat_M_imag_25_q0,
        rxmat_M_imag_25_address1,
        rxmat_M_imag_25_ce1,
        rxmat_M_imag_25_q1,
        rxmat_M_imag_26_address0,
        rxmat_M_imag_26_ce0,
        rxmat_M_imag_26_q0,
        rxmat_M_imag_26_address1,
        rxmat_M_imag_26_ce1,
        rxmat_M_imag_26_q1,
        rxmat_delay_M_real_s_address0,
        rxmat_delay_M_real_s_ce0,
        rxmat_delay_M_real_s_we0,
        rxmat_delay_M_real_s_d0,
        rxmat_delay_M_imag_s_address0,
        rxmat_delay_M_imag_s_ce0,
        rxmat_delay_M_imag_s_we0,
        rxmat_delay_M_imag_s_d0,
        rxmat_delay_M_real_1_address0,
        rxmat_delay_M_real_1_ce0,
        rxmat_delay_M_real_1_we0,
        rxmat_delay_M_real_1_d0,
        rxmat_delay_M_imag_1_address0,
        rxmat_delay_M_imag_1_ce0,
        rxmat_delay_M_imag_1_we0,
        rxmat_delay_M_imag_1_d0,
        rxmat_delay_M_real_2_address0,
        rxmat_delay_M_real_2_ce0,
        rxmat_delay_M_real_2_we0,
        rxmat_delay_M_real_2_d0,
        rxmat_delay_M_imag_2_address0,
        rxmat_delay_M_imag_2_ce0,
        rxmat_delay_M_imag_2_we0,
        rxmat_delay_M_imag_2_d0,
        rxmat_delay_M_real_3_address0,
        rxmat_delay_M_real_3_ce0,
        rxmat_delay_M_real_3_we0,
        rxmat_delay_M_real_3_d0,
        rxmat_delay_M_imag_3_address0,
        rxmat_delay_M_imag_3_ce0,
        rxmat_delay_M_imag_3_we0,
        rxmat_delay_M_imag_3_d0,
        rxmat_delay_M_real_4_address0,
        rxmat_delay_M_real_4_ce0,
        rxmat_delay_M_real_4_we0,
        rxmat_delay_M_real_4_d0,
        rxmat_delay_M_imag_4_address0,
        rxmat_delay_M_imag_4_ce0,
        rxmat_delay_M_imag_4_we0,
        rxmat_delay_M_imag_4_d0,
        rxmat_delay_M_real_5_address0,
        rxmat_delay_M_real_5_ce0,
        rxmat_delay_M_real_5_we0,
        rxmat_delay_M_real_5_d0,
        rxmat_delay_M_imag_5_address0,
        rxmat_delay_M_imag_5_ce0,
        rxmat_delay_M_imag_5_we0,
        rxmat_delay_M_imag_5_d0,
        rxmat_delay_M_real_6_address0,
        rxmat_delay_M_real_6_ce0,
        rxmat_delay_M_real_6_we0,
        rxmat_delay_M_real_6_d0,
        rxmat_delay_M_imag_6_address0,
        rxmat_delay_M_imag_6_ce0,
        rxmat_delay_M_imag_6_we0,
        rxmat_delay_M_imag_6_d0,
        rxmat_delay_M_real_7_address0,
        rxmat_delay_M_real_7_ce0,
        rxmat_delay_M_real_7_we0,
        rxmat_delay_M_real_7_d0,
        rxmat_delay_M_imag_7_address0,
        rxmat_delay_M_imag_7_ce0,
        rxmat_delay_M_imag_7_we0,
        rxmat_delay_M_imag_7_d0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state10 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] rxmat_M_real_2_address0;
output   rxmat_M_real_2_ce0;
input  [31:0] rxmat_M_real_2_q0;
output  [4:0] rxmat_M_real_2_address1;
output   rxmat_M_real_2_ce1;
input  [31:0] rxmat_M_real_2_q1;
output  [4:0] rxmat_M_real_21_address0;
output   rxmat_M_real_21_ce0;
input  [31:0] rxmat_M_real_21_q0;
output  [4:0] rxmat_M_real_21_address1;
output   rxmat_M_real_21_ce1;
input  [31:0] rxmat_M_real_21_q1;
output  [4:0] rxmat_M_real_22_address0;
output   rxmat_M_real_22_ce0;
input  [31:0] rxmat_M_real_22_q0;
output  [4:0] rxmat_M_real_22_address1;
output   rxmat_M_real_22_ce1;
input  [31:0] rxmat_M_real_22_q1;
output  [4:0] rxmat_M_real_23_address0;
output   rxmat_M_real_23_ce0;
input  [31:0] rxmat_M_real_23_q0;
output  [4:0] rxmat_M_real_23_address1;
output   rxmat_M_real_23_ce1;
input  [31:0] rxmat_M_real_23_q1;
output  [4:0] rxmat_M_imag_2_address0;
output   rxmat_M_imag_2_ce0;
input  [31:0] rxmat_M_imag_2_q0;
output  [4:0] rxmat_M_imag_2_address1;
output   rxmat_M_imag_2_ce1;
input  [31:0] rxmat_M_imag_2_q1;
output  [4:0] rxmat_M_imag_24_address0;
output   rxmat_M_imag_24_ce0;
input  [31:0] rxmat_M_imag_24_q0;
output  [4:0] rxmat_M_imag_24_address1;
output   rxmat_M_imag_24_ce1;
input  [31:0] rxmat_M_imag_24_q1;
output  [4:0] rxmat_M_imag_25_address0;
output   rxmat_M_imag_25_ce0;
input  [31:0] rxmat_M_imag_25_q0;
output  [4:0] rxmat_M_imag_25_address1;
output   rxmat_M_imag_25_ce1;
input  [31:0] rxmat_M_imag_25_q1;
output  [4:0] rxmat_M_imag_26_address0;
output   rxmat_M_imag_26_ce0;
input  [31:0] rxmat_M_imag_26_q0;
output  [4:0] rxmat_M_imag_26_address1;
output   rxmat_M_imag_26_ce1;
input  [31:0] rxmat_M_imag_26_q1;
output  [3:0] rxmat_delay_M_real_s_address0;
output   rxmat_delay_M_real_s_ce0;
output   rxmat_delay_M_real_s_we0;
output  [31:0] rxmat_delay_M_real_s_d0;
output  [3:0] rxmat_delay_M_imag_s_address0;
output   rxmat_delay_M_imag_s_ce0;
output   rxmat_delay_M_imag_s_we0;
output  [31:0] rxmat_delay_M_imag_s_d0;
output  [3:0] rxmat_delay_M_real_1_address0;
output   rxmat_delay_M_real_1_ce0;
output   rxmat_delay_M_real_1_we0;
output  [31:0] rxmat_delay_M_real_1_d0;
output  [3:0] rxmat_delay_M_imag_1_address0;
output   rxmat_delay_M_imag_1_ce0;
output   rxmat_delay_M_imag_1_we0;
output  [31:0] rxmat_delay_M_imag_1_d0;
output  [3:0] rxmat_delay_M_real_2_address0;
output   rxmat_delay_M_real_2_ce0;
output   rxmat_delay_M_real_2_we0;
output  [31:0] rxmat_delay_M_real_2_d0;
output  [3:0] rxmat_delay_M_imag_2_address0;
output   rxmat_delay_M_imag_2_ce0;
output   rxmat_delay_M_imag_2_we0;
output  [31:0] rxmat_delay_M_imag_2_d0;
output  [3:0] rxmat_delay_M_real_3_address0;
output   rxmat_delay_M_real_3_ce0;
output   rxmat_delay_M_real_3_we0;
output  [31:0] rxmat_delay_M_real_3_d0;
output  [3:0] rxmat_delay_M_imag_3_address0;
output   rxmat_delay_M_imag_3_ce0;
output   rxmat_delay_M_imag_3_we0;
output  [31:0] rxmat_delay_M_imag_3_d0;
output  [3:0] rxmat_delay_M_real_4_address0;
output   rxmat_delay_M_real_4_ce0;
output   rxmat_delay_M_real_4_we0;
output  [31:0] rxmat_delay_M_real_4_d0;
output  [3:0] rxmat_delay_M_imag_4_address0;
output   rxmat_delay_M_imag_4_ce0;
output   rxmat_delay_M_imag_4_we0;
output  [31:0] rxmat_delay_M_imag_4_d0;
output  [3:0] rxmat_delay_M_real_5_address0;
output   rxmat_delay_M_real_5_ce0;
output   rxmat_delay_M_real_5_we0;
output  [31:0] rxmat_delay_M_real_5_d0;
output  [3:0] rxmat_delay_M_imag_5_address0;
output   rxmat_delay_M_imag_5_ce0;
output   rxmat_delay_M_imag_5_we0;
output  [31:0] rxmat_delay_M_imag_5_d0;
output  [3:0] rxmat_delay_M_real_6_address0;
output   rxmat_delay_M_real_6_ce0;
output   rxmat_delay_M_real_6_we0;
output  [31:0] rxmat_delay_M_real_6_d0;
output  [3:0] rxmat_delay_M_imag_6_address0;
output   rxmat_delay_M_imag_6_ce0;
output   rxmat_delay_M_imag_6_we0;
output  [31:0] rxmat_delay_M_imag_6_d0;
output  [3:0] rxmat_delay_M_real_7_address0;
output   rxmat_delay_M_real_7_ce0;
output   rxmat_delay_M_real_7_we0;
output  [31:0] rxmat_delay_M_real_7_d0;
output  [3:0] rxmat_delay_M_imag_7_address0;
output   rxmat_delay_M_imag_7_ce0;
output   rxmat_delay_M_imag_7_we0;
output  [31:0] rxmat_delay_M_imag_7_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg rxmat_M_real_2_ce0;
reg rxmat_M_real_2_ce1;
reg rxmat_M_real_21_ce0;
reg rxmat_M_real_21_ce1;
reg rxmat_M_real_22_ce0;
reg rxmat_M_real_22_ce1;
reg rxmat_M_real_23_ce0;
reg rxmat_M_real_23_ce1;
reg rxmat_M_imag_2_ce0;
reg rxmat_M_imag_2_ce1;
reg rxmat_M_imag_24_ce0;
reg rxmat_M_imag_24_ce1;
reg rxmat_M_imag_25_ce0;
reg rxmat_M_imag_25_ce1;
reg rxmat_M_imag_26_ce0;
reg rxmat_M_imag_26_ce1;
reg rxmat_delay_M_real_s_ce0;
reg rxmat_delay_M_real_s_we0;
reg rxmat_delay_M_imag_s_ce0;
reg rxmat_delay_M_imag_s_we0;
reg rxmat_delay_M_real_1_ce0;
reg rxmat_delay_M_real_1_we0;
reg rxmat_delay_M_imag_1_ce0;
reg rxmat_delay_M_imag_1_we0;
reg rxmat_delay_M_real_2_ce0;
reg rxmat_delay_M_real_2_we0;
reg rxmat_delay_M_imag_2_ce0;
reg rxmat_delay_M_imag_2_we0;
reg rxmat_delay_M_real_3_ce0;
reg rxmat_delay_M_real_3_we0;
reg rxmat_delay_M_imag_3_ce0;
reg rxmat_delay_M_imag_3_we0;
reg rxmat_delay_M_real_4_ce0;
reg rxmat_delay_M_real_4_we0;
reg rxmat_delay_M_imag_4_ce0;
reg rxmat_delay_M_imag_4_we0;
reg rxmat_delay_M_real_5_ce0;
reg rxmat_delay_M_real_5_we0;
reg rxmat_delay_M_imag_5_ce0;
reg rxmat_delay_M_imag_5_we0;
reg rxmat_delay_M_real_6_ce0;
reg rxmat_delay_M_real_6_we0;
reg rxmat_delay_M_imag_6_ce0;
reg rxmat_delay_M_imag_6_we0;
reg rxmat_delay_M_real_7_ce0;
reg rxmat_delay_M_real_7_we0;
reg rxmat_delay_M_imag_7_ce0;
reg rxmat_delay_M_imag_7_we0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [4:0] i_0_reg_510;
reg   [4:0] i_0_reg_510_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_pp0_stage0_11001;
reg   [4:0] i_0_reg_510_pp0_iter2_reg;
reg   [4:0] i_0_reg_510_pp0_iter3_reg;
reg   [4:0] i_0_reg_510_pp0_iter4_reg;
reg   [4:0] i_0_reg_510_pp0_iter5_reg;
reg   [4:0] i_0_reg_510_pp0_iter6_reg;
wire   [0:0] icmp_ln16_fu_762_p2;
reg   [0:0] icmp_ln16_reg_836;
reg   [0:0] icmp_ln16_reg_836_pp0_iter1_reg;
reg   [0:0] icmp_ln16_reg_836_pp0_iter2_reg;
reg   [0:0] icmp_ln16_reg_836_pp0_iter3_reg;
reg   [0:0] icmp_ln16_reg_836_pp0_iter4_reg;
reg   [0:0] icmp_ln16_reg_836_pp0_iter5_reg;
reg   [0:0] icmp_ln16_reg_836_pp0_iter6_reg;
wire   [4:0] i_fu_768_p2;
reg   [4:0] i_reg_840;
reg    ap_enable_reg_pp0_iter0;
reg   [31:0] p_r_M_real_reg_925;
reg    ap_enable_reg_pp0_iter1;
reg   [31:0] p_r_M_imag_reg_931;
reg   [31:0] p_r_M_real_1_reg_937;
reg   [31:0] p_r_M_imag_1_reg_943;
reg   [31:0] p_r_M_real_2_reg_949;
reg   [31:0] p_r_M_imag_2_reg_955;
reg   [31:0] p_r_M_real_3_reg_961;
reg   [31:0] p_r_M_imag_3_reg_967;
reg   [31:0] p_r_M_real_4_reg_973;
reg   [31:0] p_r_M_imag_4_reg_979;
reg   [31:0] p_r_M_real_5_reg_985;
reg   [31:0] p_r_M_imag_5_reg_991;
reg   [31:0] p_r_M_real_6_reg_997;
reg   [31:0] p_r_M_imag_6_reg_1003;
reg   [31:0] p_r_M_real_7_reg_1009;
reg   [31:0] p_r_M_imag_7_reg_1015;
wire   [31:0] grp_fu_602_p2;
reg   [31:0] tmp_i_i_reg_1021;
wire   [31:0] grp_fu_607_p2;
reg   [31:0] tmp_7_i_i_reg_1026;
wire   [31:0] grp_fu_612_p2;
reg   [31:0] tmp_9_i_i_reg_1031;
wire   [31:0] grp_fu_617_p2;
reg   [31:0] tmp_i_i_38_reg_1036;
wire   [31:0] grp_fu_622_p2;
reg   [31:0] tmp_i_i1_reg_1041;
wire   [31:0] grp_fu_627_p2;
reg   [31:0] tmp_7_i_i2_reg_1046;
wire   [31:0] grp_fu_632_p2;
reg   [31:0] tmp_9_i_i4_reg_1051;
wire   [31:0] grp_fu_637_p2;
reg   [31:0] tmp_i_i5_reg_1056;
wire   [31:0] grp_fu_642_p2;
reg   [31:0] tmp_i_i9_reg_1061;
wire   [31:0] grp_fu_647_p2;
reg   [31:0] tmp_7_i_i1_reg_1066;
wire   [31:0] grp_fu_652_p2;
reg   [31:0] tmp_9_i_i1_reg_1071;
wire   [31:0] grp_fu_657_p2;
reg   [31:0] tmp_i_i1_39_reg_1076;
wire   [31:0] grp_fu_662_p2;
reg   [31:0] tmp_i_i2_reg_1081;
wire   [31:0] grp_fu_667_p2;
reg   [31:0] tmp_7_i_i3_reg_1086;
wire   [31:0] grp_fu_672_p2;
reg   [31:0] tmp_9_i_i2_reg_1091;
wire   [31:0] grp_fu_677_p2;
reg   [31:0] tmp_i_i2_40_reg_1096;
wire   [31:0] grp_fu_682_p2;
reg   [31:0] tmp_i_i3_reg_1101;
wire   [31:0] grp_fu_687_p2;
reg   [31:0] tmp_7_i_i4_reg_1106;
wire   [31:0] grp_fu_692_p2;
reg   [31:0] tmp_9_i_i3_reg_1111;
wire   [31:0] grp_fu_697_p2;
reg   [31:0] tmp_i_i3_41_reg_1116;
wire   [31:0] grp_fu_702_p2;
reg   [31:0] tmp_i_i4_reg_1121;
wire   [31:0] grp_fu_707_p2;
reg   [31:0] tmp_7_i_i5_reg_1126;
wire   [31:0] grp_fu_712_p2;
reg   [31:0] tmp_9_i_i5_reg_1131;
wire   [31:0] grp_fu_717_p2;
reg   [31:0] tmp_i_i4_42_reg_1136;
wire   [31:0] grp_fu_722_p2;
reg   [31:0] tmp_i_i5_43_reg_1141;
wire   [31:0] grp_fu_727_p2;
reg   [31:0] tmp_7_i_i6_reg_1146;
wire   [31:0] grp_fu_732_p2;
reg   [31:0] tmp_9_i_i6_reg_1151;
wire   [31:0] grp_fu_737_p2;
reg   [31:0] tmp_i_i6_reg_1156;
wire   [31:0] grp_fu_742_p2;
reg   [31:0] tmp_i_i6_44_reg_1161;
wire   [31:0] grp_fu_747_p2;
reg   [31:0] tmp_7_i_i7_reg_1166;
wire   [31:0] grp_fu_752_p2;
reg   [31:0] tmp_9_i_i7_reg_1171;
wire   [31:0] grp_fu_757_p2;
reg   [31:0] tmp_i_i7_reg_1176;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg   [4:0] ap_phi_mux_i_0_phi_fu_514_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln19_1_fu_782_p1;
wire   [63:0] tmp_9_fu_800_p3;
wire   [63:0] zext_ln19_fu_816_p1;
wire   [31:0] grp_fu_522_p2;
wire   [31:0] grp_fu_527_p2;
wire   [31:0] grp_fu_532_p2;
wire   [31:0] grp_fu_537_p2;
wire   [31:0] grp_fu_542_p2;
wire   [31:0] grp_fu_547_p2;
wire   [31:0] grp_fu_552_p2;
wire   [31:0] grp_fu_557_p2;
wire   [31:0] grp_fu_562_p2;
wire   [31:0] grp_fu_567_p2;
wire   [31:0] grp_fu_572_p2;
wire   [31:0] grp_fu_577_p2;
wire   [31:0] grp_fu_582_p2;
wire   [31:0] grp_fu_587_p2;
wire   [31:0] grp_fu_592_p2;
wire   [31:0] grp_fu_597_p2;
wire   [5:0] tmp_8_fu_774_p3;
wire   [5:0] or_ln19_fu_794_p2;
wire    ap_CS_fsm_state10;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
end

matmul_fsub_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fsub_32ns_bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_i_i_reg_1021),
    .din1(tmp_7_i_i_reg_1026),
    .ce(1'b1),
    .dout(grp_fu_522_p2)
);

matmul_fadd_32ns_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fadd_32ns_cud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_9_i_i_reg_1031),
    .din1(tmp_i_i_38_reg_1036),
    .ce(1'b1),
    .dout(grp_fu_527_p2)
);

matmul_fsub_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fsub_32ns_bkb_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_i_i1_reg_1041),
    .din1(tmp_7_i_i2_reg_1046),
    .ce(1'b1),
    .dout(grp_fu_532_p2)
);

matmul_fadd_32ns_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fadd_32ns_cud_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_9_i_i4_reg_1051),
    .din1(tmp_i_i5_reg_1056),
    .ce(1'b1),
    .dout(grp_fu_537_p2)
);

matmul_fsub_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fsub_32ns_bkb_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_i_i9_reg_1061),
    .din1(tmp_7_i_i1_reg_1066),
    .ce(1'b1),
    .dout(grp_fu_542_p2)
);

matmul_fadd_32ns_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fadd_32ns_cud_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_9_i_i1_reg_1071),
    .din1(tmp_i_i1_39_reg_1076),
    .ce(1'b1),
    .dout(grp_fu_547_p2)
);

matmul_fsub_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fsub_32ns_bkb_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_i_i2_reg_1081),
    .din1(tmp_7_i_i3_reg_1086),
    .ce(1'b1),
    .dout(grp_fu_552_p2)
);

matmul_fadd_32ns_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fadd_32ns_cud_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_9_i_i2_reg_1091),
    .din1(tmp_i_i2_40_reg_1096),
    .ce(1'b1),
    .dout(grp_fu_557_p2)
);

matmul_fsub_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fsub_32ns_bkb_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_i_i3_reg_1101),
    .din1(tmp_7_i_i4_reg_1106),
    .ce(1'b1),
    .dout(grp_fu_562_p2)
);

matmul_fadd_32ns_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fadd_32ns_cud_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_9_i_i3_reg_1111),
    .din1(tmp_i_i3_41_reg_1116),
    .ce(1'b1),
    .dout(grp_fu_567_p2)
);

matmul_fsub_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fsub_32ns_bkb_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_i_i4_reg_1121),
    .din1(tmp_7_i_i5_reg_1126),
    .ce(1'b1),
    .dout(grp_fu_572_p2)
);

matmul_fadd_32ns_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fadd_32ns_cud_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_9_i_i5_reg_1131),
    .din1(tmp_i_i4_42_reg_1136),
    .ce(1'b1),
    .dout(grp_fu_577_p2)
);

matmul_fsub_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fsub_32ns_bkb_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_i_i5_43_reg_1141),
    .din1(tmp_7_i_i6_reg_1146),
    .ce(1'b1),
    .dout(grp_fu_582_p2)
);

matmul_fadd_32ns_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fadd_32ns_cud_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_9_i_i6_reg_1151),
    .din1(tmp_i_i6_reg_1156),
    .ce(1'b1),
    .dout(grp_fu_587_p2)
);

matmul_fsub_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fsub_32ns_bkb_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_i_i6_44_reg_1161),
    .din1(tmp_7_i_i7_reg_1166),
    .ce(1'b1),
    .dout(grp_fu_592_p2)
);

matmul_fadd_32ns_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fadd_32ns_cud_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_9_i_i7_reg_1171),
    .din1(tmp_i_i7_reg_1176),
    .ce(1'b1),
    .dout(grp_fu_597_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_reg_925),
    .din1(32'd1078355558),
    .ce(1'b1),
    .dout(grp_fu_602_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_reg_931),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_607_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_reg_931),
    .din1(32'd1078355558),
    .ce(1'b1),
    .dout(grp_fu_612_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_reg_925),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_617_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_1_reg_937),
    .din1(32'd1084709929),
    .ce(1'b1),
    .dout(grp_fu_622_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_1_reg_943),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_627_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_1_reg_943),
    .din1(32'd1084709929),
    .ce(1'b1),
    .dout(grp_fu_632_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_1_reg_937),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_637_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_2_reg_949),
    .din1(32'd1086555423),
    .ce(1'b1),
    .dout(grp_fu_642_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_2_reg_955),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_647_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_2_reg_955),
    .din1(32'd1086555423),
    .ce(1'b1),
    .dout(grp_fu_652_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_2_reg_949),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_657_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_3_reg_961),
    .din1(32'd1092595220),
    .ce(1'b1),
    .dout(grp_fu_662_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_3_reg_967),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_667_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_3_reg_967),
    .din1(32'd1092595220),
    .ce(1'b1),
    .dout(grp_fu_672_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_3_reg_961),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_677_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_4_reg_973),
    .din1(32'd1090739241),
    .ce(1'b1),
    .dout(grp_fu_682_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_4_reg_979),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_687_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_4_reg_979),
    .din1(32'd1090739241),
    .ce(1'b1),
    .dout(grp_fu_692_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_4_reg_973),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_697_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_5_reg_985),
    .din1(32'd1040522936),
    .ce(1'b1),
    .dout(grp_fu_702_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_5_reg_991),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_707_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_5_reg_991),
    .din1(32'd1040522936),
    .ce(1'b1),
    .dout(grp_fu_712_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_5_reg_985),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_717_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_6_reg_997),
    .din1(32'd1088652575),
    .ce(1'b1),
    .dout(grp_fu_722_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_6_reg_1003),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_727_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_6_reg_1003),
    .din1(32'd1088652575),
    .ce(1'b1),
    .dout(grp_fu_732_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_6_reg_997),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_737_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_7_reg_1009),
    .din1(32'd1082046546),
    .ce(1'b1),
    .dout(grp_fu_742_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_7_reg_1015),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_747_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_7_reg_1015),
    .din1(32'd1082046546),
    .ce(1'b1),
    .dout(grp_fu_752_p2)
);

matmul_fmul_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_fmul_32ns_dEe_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_7_reg_1009),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_757_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_836 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_reg_510 <= i_reg_840;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_510 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_reg_510_pp0_iter1_reg <= i_0_reg_510;
        icmp_ln16_reg_836 <= icmp_ln16_fu_762_p2;
        icmp_ln16_reg_836_pp0_iter1_reg <= icmp_ln16_reg_836;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        i_0_reg_510_pp0_iter2_reg <= i_0_reg_510_pp0_iter1_reg;
        i_0_reg_510_pp0_iter3_reg <= i_0_reg_510_pp0_iter2_reg;
        i_0_reg_510_pp0_iter4_reg <= i_0_reg_510_pp0_iter3_reg;
        i_0_reg_510_pp0_iter5_reg <= i_0_reg_510_pp0_iter4_reg;
        i_0_reg_510_pp0_iter6_reg <= i_0_reg_510_pp0_iter5_reg;
        icmp_ln16_reg_836_pp0_iter2_reg <= icmp_ln16_reg_836_pp0_iter1_reg;
        icmp_ln16_reg_836_pp0_iter3_reg <= icmp_ln16_reg_836_pp0_iter2_reg;
        icmp_ln16_reg_836_pp0_iter4_reg <= icmp_ln16_reg_836_pp0_iter3_reg;
        icmp_ln16_reg_836_pp0_iter5_reg <= icmp_ln16_reg_836_pp0_iter4_reg;
        icmp_ln16_reg_836_pp0_iter6_reg <= icmp_ln16_reg_836_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_840 <= i_fu_768_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_836 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_r_M_imag_1_reg_943 <= rxmat_M_imag_2_q1;
        p_r_M_imag_2_reg_955 <= rxmat_M_imag_24_q0;
        p_r_M_imag_3_reg_967 <= rxmat_M_imag_24_q1;
        p_r_M_imag_4_reg_979 <= rxmat_M_imag_25_q0;
        p_r_M_imag_5_reg_991 <= rxmat_M_imag_25_q1;
        p_r_M_imag_6_reg_1003 <= rxmat_M_imag_26_q0;
        p_r_M_imag_7_reg_1015 <= rxmat_M_imag_26_q1;
        p_r_M_imag_reg_931 <= rxmat_M_imag_2_q0;
        p_r_M_real_1_reg_937 <= rxmat_M_real_2_q1;
        p_r_M_real_2_reg_949 <= rxmat_M_real_21_q0;
        p_r_M_real_3_reg_961 <= rxmat_M_real_21_q1;
        p_r_M_real_4_reg_973 <= rxmat_M_real_22_q0;
        p_r_M_real_5_reg_985 <= rxmat_M_real_22_q1;
        p_r_M_real_6_reg_997 <= rxmat_M_real_23_q0;
        p_r_M_real_7_reg_1009 <= rxmat_M_real_23_q1;
        p_r_M_real_reg_925 <= rxmat_M_real_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_836_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_7_i_i1_reg_1066 <= grp_fu_647_p2;
        tmp_7_i_i2_reg_1046 <= grp_fu_627_p2;
        tmp_7_i_i3_reg_1086 <= grp_fu_667_p2;
        tmp_7_i_i4_reg_1106 <= grp_fu_687_p2;
        tmp_7_i_i5_reg_1126 <= grp_fu_707_p2;
        tmp_7_i_i6_reg_1146 <= grp_fu_727_p2;
        tmp_7_i_i7_reg_1166 <= grp_fu_747_p2;
        tmp_7_i_i_reg_1026 <= grp_fu_607_p2;
        tmp_9_i_i1_reg_1071 <= grp_fu_652_p2;
        tmp_9_i_i2_reg_1091 <= grp_fu_672_p2;
        tmp_9_i_i3_reg_1111 <= grp_fu_692_p2;
        tmp_9_i_i4_reg_1051 <= grp_fu_632_p2;
        tmp_9_i_i5_reg_1131 <= grp_fu_712_p2;
        tmp_9_i_i6_reg_1151 <= grp_fu_732_p2;
        tmp_9_i_i7_reg_1171 <= grp_fu_752_p2;
        tmp_9_i_i_reg_1031 <= grp_fu_612_p2;
        tmp_i_i1_39_reg_1076 <= grp_fu_657_p2;
        tmp_i_i1_reg_1041 <= grp_fu_622_p2;
        tmp_i_i2_40_reg_1096 <= grp_fu_677_p2;
        tmp_i_i2_reg_1081 <= grp_fu_662_p2;
        tmp_i_i3_41_reg_1116 <= grp_fu_697_p2;
        tmp_i_i3_reg_1101 <= grp_fu_682_p2;
        tmp_i_i4_42_reg_1136 <= grp_fu_717_p2;
        tmp_i_i4_reg_1121 <= grp_fu_702_p2;
        tmp_i_i5_43_reg_1141 <= grp_fu_722_p2;
        tmp_i_i5_reg_1056 <= grp_fu_637_p2;
        tmp_i_i6_44_reg_1161 <= grp_fu_742_p2;
        tmp_i_i6_reg_1156 <= grp_fu_737_p2;
        tmp_i_i7_reg_1176 <= grp_fu_757_p2;
        tmp_i_i9_reg_1061 <= grp_fu_642_p2;
        tmp_i_i_38_reg_1036 <= grp_fu_617_p2;
        tmp_i_i_reg_1021 <= grp_fu_602_p2;
    end
end

always @ (*) begin
    if ((icmp_ln16_fu_762_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln16_reg_836 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_0_phi_fu_514_p4 = i_reg_840;
    end else begin
        ap_phi_mux_i_0_phi_fu_514_p4 = i_0_reg_510;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rxmat_M_imag_24_ce0 = 1'b1;
    end else begin
        rxmat_M_imag_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rxmat_M_imag_24_ce1 = 1'b1;
    end else begin
        rxmat_M_imag_24_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rxmat_M_imag_25_ce0 = 1'b1;
    end else begin
        rxmat_M_imag_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rxmat_M_imag_25_ce1 = 1'b1;
    end else begin
        rxmat_M_imag_25_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rxmat_M_imag_26_ce0 = 1'b1;
    end else begin
        rxmat_M_imag_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rxmat_M_imag_26_ce1 = 1'b1;
    end else begin
        rxmat_M_imag_26_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rxmat_M_imag_2_ce0 = 1'b1;
    end else begin
        rxmat_M_imag_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rxmat_M_imag_2_ce1 = 1'b1;
    end else begin
        rxmat_M_imag_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rxmat_M_real_21_ce0 = 1'b1;
    end else begin
        rxmat_M_real_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rxmat_M_real_21_ce1 = 1'b1;
    end else begin
        rxmat_M_real_21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rxmat_M_real_22_ce0 = 1'b1;
    end else begin
        rxmat_M_real_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rxmat_M_real_22_ce1 = 1'b1;
    end else begin
        rxmat_M_real_22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rxmat_M_real_23_ce0 = 1'b1;
    end else begin
        rxmat_M_real_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rxmat_M_real_23_ce1 = 1'b1;
    end else begin
        rxmat_M_real_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rxmat_M_real_2_ce0 = 1'b1;
    end else begin
        rxmat_M_real_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rxmat_M_real_2_ce1 = 1'b1;
    end else begin
        rxmat_M_real_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_imag_1_ce0 = 1'b1;
    end else begin
        rxmat_delay_M_imag_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln16_reg_836_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_imag_1_we0 = 1'b1;
    end else begin
        rxmat_delay_M_imag_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_imag_2_ce0 = 1'b1;
    end else begin
        rxmat_delay_M_imag_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln16_reg_836_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_imag_2_we0 = 1'b1;
    end else begin
        rxmat_delay_M_imag_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_imag_3_ce0 = 1'b1;
    end else begin
        rxmat_delay_M_imag_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln16_reg_836_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_imag_3_we0 = 1'b1;
    end else begin
        rxmat_delay_M_imag_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_imag_4_ce0 = 1'b1;
    end else begin
        rxmat_delay_M_imag_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln16_reg_836_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_imag_4_we0 = 1'b1;
    end else begin
        rxmat_delay_M_imag_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_imag_5_ce0 = 1'b1;
    end else begin
        rxmat_delay_M_imag_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln16_reg_836_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_imag_5_we0 = 1'b1;
    end else begin
        rxmat_delay_M_imag_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_imag_6_ce0 = 1'b1;
    end else begin
        rxmat_delay_M_imag_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln16_reg_836_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_imag_6_we0 = 1'b1;
    end else begin
        rxmat_delay_M_imag_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_imag_7_ce0 = 1'b1;
    end else begin
        rxmat_delay_M_imag_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln16_reg_836_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_imag_7_we0 = 1'b1;
    end else begin
        rxmat_delay_M_imag_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_imag_s_ce0 = 1'b1;
    end else begin
        rxmat_delay_M_imag_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln16_reg_836_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_imag_s_we0 = 1'b1;
    end else begin
        rxmat_delay_M_imag_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_real_1_ce0 = 1'b1;
    end else begin
        rxmat_delay_M_real_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln16_reg_836_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_real_1_we0 = 1'b1;
    end else begin
        rxmat_delay_M_real_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_real_2_ce0 = 1'b1;
    end else begin
        rxmat_delay_M_real_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln16_reg_836_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_real_2_we0 = 1'b1;
    end else begin
        rxmat_delay_M_real_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_real_3_ce0 = 1'b1;
    end else begin
        rxmat_delay_M_real_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln16_reg_836_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_real_3_we0 = 1'b1;
    end else begin
        rxmat_delay_M_real_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_real_4_ce0 = 1'b1;
    end else begin
        rxmat_delay_M_real_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln16_reg_836_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_real_4_we0 = 1'b1;
    end else begin
        rxmat_delay_M_real_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_real_5_ce0 = 1'b1;
    end else begin
        rxmat_delay_M_real_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln16_reg_836_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_real_5_we0 = 1'b1;
    end else begin
        rxmat_delay_M_real_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_real_6_ce0 = 1'b1;
    end else begin
        rxmat_delay_M_real_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln16_reg_836_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_real_6_we0 = 1'b1;
    end else begin
        rxmat_delay_M_real_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_real_7_ce0 = 1'b1;
    end else begin
        rxmat_delay_M_real_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln16_reg_836_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_real_7_we0 = 1'b1;
    end else begin
        rxmat_delay_M_real_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_real_s_ce0 = 1'b1;
    end else begin
        rxmat_delay_M_real_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln16_reg_836_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        rxmat_delay_M_real_s_we0 = 1'b1;
    end else begin
        rxmat_delay_M_real_s_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln16_fu_762_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter6 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter7 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter6 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln16_fu_762_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign i_fu_768_p2 = (ap_phi_mux_i_0_phi_fu_514_p4 + 5'd1);

assign icmp_ln16_fu_762_p2 = ((ap_phi_mux_i_0_phi_fu_514_p4 == 5'd16) ? 1'b1 : 1'b0);

assign or_ln19_fu_794_p2 = (tmp_8_fu_774_p3 | 6'd1);

assign rxmat_M_imag_24_address0 = zext_ln19_1_fu_782_p1;

assign rxmat_M_imag_24_address1 = tmp_9_fu_800_p3;

assign rxmat_M_imag_25_address0 = zext_ln19_1_fu_782_p1;

assign rxmat_M_imag_25_address1 = tmp_9_fu_800_p3;

assign rxmat_M_imag_26_address0 = zext_ln19_1_fu_782_p1;

assign rxmat_M_imag_26_address1 = tmp_9_fu_800_p3;

assign rxmat_M_imag_2_address0 = zext_ln19_1_fu_782_p1;

assign rxmat_M_imag_2_address1 = tmp_9_fu_800_p3;

assign rxmat_M_real_21_address0 = zext_ln19_1_fu_782_p1;

assign rxmat_M_real_21_address1 = tmp_9_fu_800_p3;

assign rxmat_M_real_22_address0 = zext_ln19_1_fu_782_p1;

assign rxmat_M_real_22_address1 = tmp_9_fu_800_p3;

assign rxmat_M_real_23_address0 = zext_ln19_1_fu_782_p1;

assign rxmat_M_real_23_address1 = tmp_9_fu_800_p3;

assign rxmat_M_real_2_address0 = zext_ln19_1_fu_782_p1;

assign rxmat_M_real_2_address1 = tmp_9_fu_800_p3;

assign rxmat_delay_M_imag_1_address0 = zext_ln19_fu_816_p1;

assign rxmat_delay_M_imag_1_d0 = grp_fu_537_p2;

assign rxmat_delay_M_imag_2_address0 = zext_ln19_fu_816_p1;

assign rxmat_delay_M_imag_2_d0 = grp_fu_547_p2;

assign rxmat_delay_M_imag_3_address0 = zext_ln19_fu_816_p1;

assign rxmat_delay_M_imag_3_d0 = grp_fu_557_p2;

assign rxmat_delay_M_imag_4_address0 = zext_ln19_fu_816_p1;

assign rxmat_delay_M_imag_4_d0 = grp_fu_567_p2;

assign rxmat_delay_M_imag_5_address0 = zext_ln19_fu_816_p1;

assign rxmat_delay_M_imag_5_d0 = grp_fu_577_p2;

assign rxmat_delay_M_imag_6_address0 = zext_ln19_fu_816_p1;

assign rxmat_delay_M_imag_6_d0 = grp_fu_587_p2;

assign rxmat_delay_M_imag_7_address0 = zext_ln19_fu_816_p1;

assign rxmat_delay_M_imag_7_d0 = grp_fu_597_p2;

assign rxmat_delay_M_imag_s_address0 = zext_ln19_fu_816_p1;

assign rxmat_delay_M_imag_s_d0 = grp_fu_527_p2;

assign rxmat_delay_M_real_1_address0 = zext_ln19_fu_816_p1;

assign rxmat_delay_M_real_1_d0 = grp_fu_532_p2;

assign rxmat_delay_M_real_2_address0 = zext_ln19_fu_816_p1;

assign rxmat_delay_M_real_2_d0 = grp_fu_542_p2;

assign rxmat_delay_M_real_3_address0 = zext_ln19_fu_816_p1;

assign rxmat_delay_M_real_3_d0 = grp_fu_552_p2;

assign rxmat_delay_M_real_4_address0 = zext_ln19_fu_816_p1;

assign rxmat_delay_M_real_4_d0 = grp_fu_562_p2;

assign rxmat_delay_M_real_5_address0 = zext_ln19_fu_816_p1;

assign rxmat_delay_M_real_5_d0 = grp_fu_572_p2;

assign rxmat_delay_M_real_6_address0 = zext_ln19_fu_816_p1;

assign rxmat_delay_M_real_6_d0 = grp_fu_582_p2;

assign rxmat_delay_M_real_7_address0 = zext_ln19_fu_816_p1;

assign rxmat_delay_M_real_7_d0 = grp_fu_592_p2;

assign rxmat_delay_M_real_s_address0 = zext_ln19_fu_816_p1;

assign rxmat_delay_M_real_s_d0 = grp_fu_522_p2;

assign tmp_8_fu_774_p3 = {{ap_phi_mux_i_0_phi_fu_514_p4}, {1'd0}};

assign tmp_9_fu_800_p3 = {{58'd0}, {or_ln19_fu_794_p2}};

assign zext_ln19_1_fu_782_p1 = tmp_8_fu_774_p3;

assign zext_ln19_fu_816_p1 = i_0_reg_510_pp0_iter6_reg;

endmodule //DopplerDelay
