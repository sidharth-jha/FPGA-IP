-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matmul is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 4;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_stream_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    in_stream_TVALID : IN STD_LOGIC;
    in_stream_TREADY : OUT STD_LOGIC;
    in_stream_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    in_stream_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
    in_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    out_stream_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_stream_TVALID : OUT STD_LOGIC;
    out_stream_TREADY : IN STD_LOGIC;
    out_stream_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_stream_TSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of matmul is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "matmul,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.419000,HLS_SYN_LAT=36296,HLS_SYN_TPT=none,HLS_SYN_MEM=136,HLS_SYN_DSP=160,HLS_SYN_FF=40055,HLS_SYN_LUT=21921,HLS_VERSION=2019_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv9_FF : STD_LOGIC_VECTOR (8 downto 0) := "011111111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal rxmat_M_real_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal rxmat_M_real_0_ce0 : STD_LOGIC;
    signal rxmat_M_real_0_we0 : STD_LOGIC;
    signal rxmat_M_real_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rxmat_M_real_0_ce1 : STD_LOGIC;
    signal rxmat_M_real_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rxmat_M_real_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal rxmat_M_real_1_ce0 : STD_LOGIC;
    signal rxmat_M_real_1_we0 : STD_LOGIC;
    signal rxmat_M_real_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rxmat_M_real_1_ce1 : STD_LOGIC;
    signal rxmat_M_real_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rxmat_M_real_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal rxmat_M_real_2_ce0 : STD_LOGIC;
    signal rxmat_M_real_2_we0 : STD_LOGIC;
    signal rxmat_M_real_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rxmat_M_real_2_ce1 : STD_LOGIC;
    signal rxmat_M_real_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rxmat_M_real_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal rxmat_M_real_3_ce0 : STD_LOGIC;
    signal rxmat_M_real_3_we0 : STD_LOGIC;
    signal rxmat_M_real_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rxmat_M_real_3_ce1 : STD_LOGIC;
    signal rxmat_M_real_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rxmat_M_imag_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal rxmat_M_imag_0_ce0 : STD_LOGIC;
    signal rxmat_M_imag_0_we0 : STD_LOGIC;
    signal rxmat_M_imag_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rxmat_M_imag_0_ce1 : STD_LOGIC;
    signal rxmat_M_imag_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rxmat_M_imag_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal rxmat_M_imag_1_ce0 : STD_LOGIC;
    signal rxmat_M_imag_1_we0 : STD_LOGIC;
    signal rxmat_M_imag_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rxmat_M_imag_1_ce1 : STD_LOGIC;
    signal rxmat_M_imag_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rxmat_M_imag_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal rxmat_M_imag_2_ce0 : STD_LOGIC;
    signal rxmat_M_imag_2_we0 : STD_LOGIC;
    signal rxmat_M_imag_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rxmat_M_imag_2_ce1 : STD_LOGIC;
    signal rxmat_M_imag_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rxmat_M_imag_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal rxmat_M_imag_3_ce0 : STD_LOGIC;
    signal rxmat_M_imag_3_we0 : STD_LOGIC;
    signal rxmat_M_imag_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rxmat_M_imag_3_ce1 : STD_LOGIC;
    signal rxmat_M_imag_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xmat_M_real_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal xmat_M_real_0_ce0 : STD_LOGIC;
    signal xmat_M_real_0_we0 : STD_LOGIC;
    signal xmat_M_real_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal xmat_M_real_0_ce1 : STD_LOGIC;
    signal xmat_M_real_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xmat_M_real_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal xmat_M_real_1_ce0 : STD_LOGIC;
    signal xmat_M_real_1_we0 : STD_LOGIC;
    signal xmat_M_real_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal xmat_M_real_1_ce1 : STD_LOGIC;
    signal xmat_M_real_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xmat_M_real_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal xmat_M_real_2_ce0 : STD_LOGIC;
    signal xmat_M_real_2_we0 : STD_LOGIC;
    signal xmat_M_real_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal xmat_M_real_2_ce1 : STD_LOGIC;
    signal xmat_M_real_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xmat_M_real_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal xmat_M_real_3_ce0 : STD_LOGIC;
    signal xmat_M_real_3_we0 : STD_LOGIC;
    signal xmat_M_real_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal xmat_M_real_3_ce1 : STD_LOGIC;
    signal xmat_M_real_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xmat_M_imag_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal xmat_M_imag_0_ce0 : STD_LOGIC;
    signal xmat_M_imag_0_we0 : STD_LOGIC;
    signal xmat_M_imag_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal xmat_M_imag_0_ce1 : STD_LOGIC;
    signal xmat_M_imag_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xmat_M_imag_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal xmat_M_imag_1_ce0 : STD_LOGIC;
    signal xmat_M_imag_1_we0 : STD_LOGIC;
    signal xmat_M_imag_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal xmat_M_imag_1_ce1 : STD_LOGIC;
    signal xmat_M_imag_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xmat_M_imag_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal xmat_M_imag_2_ce0 : STD_LOGIC;
    signal xmat_M_imag_2_we0 : STD_LOGIC;
    signal xmat_M_imag_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal xmat_M_imag_2_ce1 : STD_LOGIC;
    signal xmat_M_imag_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xmat_M_imag_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal xmat_M_imag_3_ce0 : STD_LOGIC;
    signal xmat_M_imag_3_we0 : STD_LOGIC;
    signal xmat_M_imag_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal xmat_M_imag_3_ce1 : STD_LOGIC;
    signal xmat_M_imag_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_real_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mulOut_M_real_0_ce0 : STD_LOGIC;
    signal mulOut_M_real_0_we0 : STD_LOGIC;
    signal mulOut_M_real_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_real_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mulOut_M_real_1_ce0 : STD_LOGIC;
    signal mulOut_M_real_1_we0 : STD_LOGIC;
    signal mulOut_M_real_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_real_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mulOut_M_real_2_ce0 : STD_LOGIC;
    signal mulOut_M_real_2_we0 : STD_LOGIC;
    signal mulOut_M_real_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_real_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mulOut_M_real_3_ce0 : STD_LOGIC;
    signal mulOut_M_real_3_we0 : STD_LOGIC;
    signal mulOut_M_real_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_imag_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mulOut_M_imag_0_ce0 : STD_LOGIC;
    signal mulOut_M_imag_0_we0 : STD_LOGIC;
    signal mulOut_M_imag_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_imag_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mulOut_M_imag_1_ce0 : STD_LOGIC;
    signal mulOut_M_imag_1_we0 : STD_LOGIC;
    signal mulOut_M_imag_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_imag_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mulOut_M_imag_2_ce0 : STD_LOGIC;
    signal mulOut_M_imag_2_we0 : STD_LOGIC;
    signal mulOut_M_imag_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_M_imag_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mulOut_M_imag_3_ce0 : STD_LOGIC;
    signal mulOut_M_imag_3_we0 : STD_LOGIC;
    signal mulOut_M_imag_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln46_fu_679_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln57_fu_783_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln71_reg_980 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal icmp_ln71_reg_980_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_2_reg_578 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln36_fu_655_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_fu_673_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_reg_939 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal j_fu_685_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_state4 : BOOLEAN;
    signal i_4_fu_751_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_4_reg_958 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal trunc_ln60_fu_757_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln60_reg_963 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln56_fu_745_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln57_fu_779_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln57_reg_967 : STD_LOGIC_VECTOR (13 downto 0);
    signal j_2_fu_789_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state6 : BOOLEAN;
    signal icmp_ln71_fu_836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state8_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state9_io : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state10_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_3_fu_842_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal lshr_ln1_reg_989 : STD_LOGIC_VECTOR (2 downto 0);
    signal valOut_last_V_fu_874_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_V_reg_1034 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_DiagMatMul_fu_589_ap_ready : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_ap_done : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state8 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_ap_start : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_ap_idle : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_A_M_real_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_A_M_real_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_A_M_real_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_A_M_real_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_A_M_real1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_A_M_real1_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_A_M_real1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_A_M_real1_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_A_M_real2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_A_M_real2_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_A_M_real2_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_A_M_real2_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_A_M_real3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_A_M_real3_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_A_M_real3_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_A_M_real3_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_A_M_imag_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_A_M_imag_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_A_M_imag_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_A_M_imag_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_A_M_imag4_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_A_M_imag4_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_A_M_imag4_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_A_M_imag4_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_A_M_imag5_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_A_M_imag5_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_A_M_imag5_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_A_M_imag5_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_A_M_imag6_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_A_M_imag6_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_A_M_imag6_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_A_M_imag6_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_B_M_real_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_B_M_real_0_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_B_M_real_0_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_B_M_real_0_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_B_M_real_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_B_M_real_1_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_B_M_real_1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_B_M_real_1_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_B_M_real_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_B_M_real_2_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_B_M_real_2_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_B_M_real_2_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_B_M_real_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_B_M_real_3_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_B_M_real_3_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_B_M_real_3_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_B_M_imag_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_B_M_imag_0_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_B_M_imag_0_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_B_M_imag_0_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_B_M_imag_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_B_M_imag_1_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_B_M_imag_1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_B_M_imag_1_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_B_M_imag_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_B_M_imag_2_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_B_M_imag_2_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_B_M_imag_2_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_B_M_imag_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_B_M_imag_3_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_B_M_imag_3_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DiagMatMul_fu_589_B_M_imag_3_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_C_M_real_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_589_C_M_real_0_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_C_M_real_0_we0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_C_M_real_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_589_C_M_real_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_589_C_M_real_1_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_C_M_real_1_we0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_C_M_real_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_589_C_M_real_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_589_C_M_real_2_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_C_M_real_2_we0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_C_M_real_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_589_C_M_real_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_589_C_M_real_3_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_C_M_real_3_we0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_C_M_real_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_589_C_M_imag_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_589_C_M_imag_0_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_C_M_imag_0_we0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_C_M_imag_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_589_C_M_imag_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_589_C_M_imag_1_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_C_M_imag_1_we0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_C_M_imag_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_589_C_M_imag_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_589_C_M_imag_2_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_C_M_imag_2_we0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_C_M_imag_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_589_C_M_imag_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DiagMatMul_fu_589_C_M_imag_3_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_C_M_imag_3_we0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_589_C_M_imag_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_ln36_reg_522 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln36_fu_661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_reg_533 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_0_reg_545 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln45_fu_667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_reg_556 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_1_reg_567 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_DiagMatMul_fu_589_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln49_fu_713_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln60_1_fu_804_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1079_fu_862_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal trunc_ln49_1_fu_691_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal bitcast_ln49_fu_725_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln52_fu_737_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln60_fu_816_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln63_fu_828_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln49_fu_701_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_7_fu_705_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_645_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln681_fu_733_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln_fu_761_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_6_fu_771_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln60_fu_795_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln60_fu_799_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln681_1_fu_824_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1079_fu_858_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1079_1_fu_880_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_883_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_901_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln74_fu_897_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln77_fu_915_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal regslice_both_out_stream_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_in_stream_V_data_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TDATA_int : STD_LOGIC_VECTOR (63 downto 0);
    signal in_stream_TVALID_int : STD_LOGIC;
    signal in_stream_TREADY_int : STD_LOGIC;
    signal regslice_both_in_stream_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_stream_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TKEEP_int : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_in_stream_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_stream_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_stream_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TSTRB_int : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_in_stream_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_stream_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_stream_V_last_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TLAST_int : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in_stream_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_stream_V_last_V_U_ack_in : STD_LOGIC;
    signal out_stream_TDATA_int : STD_LOGIC_VECTOR (63 downto 0);
    signal out_stream_TVALID_int : STD_LOGIC;
    signal out_stream_TREADY_int : STD_LOGIC;
    signal regslice_both_out_stream_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_stream_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_stream_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_stream_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_stream_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_stream_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_stream_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_stream_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_stream_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_stream_V_last_V_U_vld_out : STD_LOGIC;

    component DiagMatMul IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        A_M_real_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        A_M_real_ce0 : OUT STD_LOGIC;
        A_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_real_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        A_M_real_ce1 : OUT STD_LOGIC;
        A_M_real_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_real1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        A_M_real1_ce0 : OUT STD_LOGIC;
        A_M_real1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_real1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        A_M_real1_ce1 : OUT STD_LOGIC;
        A_M_real1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_real2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        A_M_real2_ce0 : OUT STD_LOGIC;
        A_M_real2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_real2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        A_M_real2_ce1 : OUT STD_LOGIC;
        A_M_real2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_real3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        A_M_real3_ce0 : OUT STD_LOGIC;
        A_M_real3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_real3_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        A_M_real3_ce1 : OUT STD_LOGIC;
        A_M_real3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_imag_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        A_M_imag_ce0 : OUT STD_LOGIC;
        A_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_imag_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        A_M_imag_ce1 : OUT STD_LOGIC;
        A_M_imag_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_imag4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        A_M_imag4_ce0 : OUT STD_LOGIC;
        A_M_imag4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_imag4_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        A_M_imag4_ce1 : OUT STD_LOGIC;
        A_M_imag4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_imag5_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        A_M_imag5_ce0 : OUT STD_LOGIC;
        A_M_imag5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_imag5_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        A_M_imag5_ce1 : OUT STD_LOGIC;
        A_M_imag5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_imag6_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        A_M_imag6_ce0 : OUT STD_LOGIC;
        A_M_imag6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_imag6_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        A_M_imag6_ce1 : OUT STD_LOGIC;
        A_M_imag6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_real_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        B_M_real_0_ce0 : OUT STD_LOGIC;
        B_M_real_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_real_0_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        B_M_real_0_ce1 : OUT STD_LOGIC;
        B_M_real_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_real_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        B_M_real_1_ce0 : OUT STD_LOGIC;
        B_M_real_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_real_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        B_M_real_1_ce1 : OUT STD_LOGIC;
        B_M_real_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_real_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        B_M_real_2_ce0 : OUT STD_LOGIC;
        B_M_real_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_real_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        B_M_real_2_ce1 : OUT STD_LOGIC;
        B_M_real_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_real_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        B_M_real_3_ce0 : OUT STD_LOGIC;
        B_M_real_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_real_3_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        B_M_real_3_ce1 : OUT STD_LOGIC;
        B_M_real_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_imag_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        B_M_imag_0_ce0 : OUT STD_LOGIC;
        B_M_imag_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_imag_0_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        B_M_imag_0_ce1 : OUT STD_LOGIC;
        B_M_imag_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_imag_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        B_M_imag_1_ce0 : OUT STD_LOGIC;
        B_M_imag_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_imag_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        B_M_imag_1_ce1 : OUT STD_LOGIC;
        B_M_imag_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_imag_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        B_M_imag_2_ce0 : OUT STD_LOGIC;
        B_M_imag_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_imag_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        B_M_imag_2_ce1 : OUT STD_LOGIC;
        B_M_imag_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_imag_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        B_M_imag_3_ce0 : OUT STD_LOGIC;
        B_M_imag_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_M_imag_3_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        B_M_imag_3_ce1 : OUT STD_LOGIC;
        B_M_imag_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_M_real_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_M_real_0_ce0 : OUT STD_LOGIC;
        C_M_real_0_we0 : OUT STD_LOGIC;
        C_M_real_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_M_real_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_M_real_1_ce0 : OUT STD_LOGIC;
        C_M_real_1_we0 : OUT STD_LOGIC;
        C_M_real_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_M_real_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_M_real_2_ce0 : OUT STD_LOGIC;
        C_M_real_2_we0 : OUT STD_LOGIC;
        C_M_real_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_M_real_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_M_real_3_ce0 : OUT STD_LOGIC;
        C_M_real_3_we0 : OUT STD_LOGIC;
        C_M_real_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_M_imag_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_M_imag_0_ce0 : OUT STD_LOGIC;
        C_M_imag_0_we0 : OUT STD_LOGIC;
        C_M_imag_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_M_imag_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_M_imag_1_ce0 : OUT STD_LOGIC;
        C_M_imag_1_we0 : OUT STD_LOGIC;
        C_M_imag_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_M_imag_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_M_imag_2_ce0 : OUT STD_LOGIC;
        C_M_imag_2_we0 : OUT STD_LOGIC;
        C_M_imag_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_M_imag_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_M_imag_3_ce0 : OUT STD_LOGIC;
        C_M_imag_3_we0 : OUT STD_LOGIC;
        C_M_imag_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_mux_432_32CeG IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_rxmat_M_reeOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_mulOut_M_rudo IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    rxmat_M_real_0_U : component matmul_rxmat_M_reeOg
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => rxmat_M_real_0_address0,
        ce0 => rxmat_M_real_0_ce0,
        we0 => rxmat_M_real_0_we0,
        d0 => bitcast_ln52_fu_737_p1,
        q0 => rxmat_M_real_0_q0,
        address1 => grp_DiagMatMul_fu_589_A_M_real_address1,
        ce1 => rxmat_M_real_0_ce1,
        q1 => rxmat_M_real_0_q1);

    rxmat_M_real_1_U : component matmul_rxmat_M_reeOg
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => rxmat_M_real_1_address0,
        ce0 => rxmat_M_real_1_ce0,
        we0 => rxmat_M_real_1_we0,
        d0 => bitcast_ln52_fu_737_p1,
        q0 => rxmat_M_real_1_q0,
        address1 => grp_DiagMatMul_fu_589_A_M_real1_address1,
        ce1 => rxmat_M_real_1_ce1,
        q1 => rxmat_M_real_1_q1);

    rxmat_M_real_2_U : component matmul_rxmat_M_reeOg
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => rxmat_M_real_2_address0,
        ce0 => rxmat_M_real_2_ce0,
        we0 => rxmat_M_real_2_we0,
        d0 => bitcast_ln52_fu_737_p1,
        q0 => rxmat_M_real_2_q0,
        address1 => grp_DiagMatMul_fu_589_A_M_real2_address1,
        ce1 => rxmat_M_real_2_ce1,
        q1 => rxmat_M_real_2_q1);

    rxmat_M_real_3_U : component matmul_rxmat_M_reeOg
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => rxmat_M_real_3_address0,
        ce0 => rxmat_M_real_3_ce0,
        we0 => rxmat_M_real_3_we0,
        d0 => bitcast_ln52_fu_737_p1,
        q0 => rxmat_M_real_3_q0,
        address1 => grp_DiagMatMul_fu_589_A_M_real3_address1,
        ce1 => rxmat_M_real_3_ce1,
        q1 => rxmat_M_real_3_q1);

    rxmat_M_imag_0_U : component matmul_rxmat_M_reeOg
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => rxmat_M_imag_0_address0,
        ce0 => rxmat_M_imag_0_ce0,
        we0 => rxmat_M_imag_0_we0,
        d0 => bitcast_ln49_fu_725_p1,
        q0 => rxmat_M_imag_0_q0,
        address1 => grp_DiagMatMul_fu_589_A_M_imag_address1,
        ce1 => rxmat_M_imag_0_ce1,
        q1 => rxmat_M_imag_0_q1);

    rxmat_M_imag_1_U : component matmul_rxmat_M_reeOg
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => rxmat_M_imag_1_address0,
        ce0 => rxmat_M_imag_1_ce0,
        we0 => rxmat_M_imag_1_we0,
        d0 => bitcast_ln49_fu_725_p1,
        q0 => rxmat_M_imag_1_q0,
        address1 => grp_DiagMatMul_fu_589_A_M_imag4_address1,
        ce1 => rxmat_M_imag_1_ce1,
        q1 => rxmat_M_imag_1_q1);

    rxmat_M_imag_2_U : component matmul_rxmat_M_reeOg
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => rxmat_M_imag_2_address0,
        ce0 => rxmat_M_imag_2_ce0,
        we0 => rxmat_M_imag_2_we0,
        d0 => bitcast_ln49_fu_725_p1,
        q0 => rxmat_M_imag_2_q0,
        address1 => grp_DiagMatMul_fu_589_A_M_imag5_address1,
        ce1 => rxmat_M_imag_2_ce1,
        q1 => rxmat_M_imag_2_q1);

    rxmat_M_imag_3_U : component matmul_rxmat_M_reeOg
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => rxmat_M_imag_3_address0,
        ce0 => rxmat_M_imag_3_ce0,
        we0 => rxmat_M_imag_3_we0,
        d0 => bitcast_ln49_fu_725_p1,
        q0 => rxmat_M_imag_3_q0,
        address1 => grp_DiagMatMul_fu_589_A_M_imag6_address1,
        ce1 => rxmat_M_imag_3_ce1,
        q1 => rxmat_M_imag_3_q1);

    xmat_M_real_0_U : component matmul_rxmat_M_reeOg
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => xmat_M_real_0_address0,
        ce0 => xmat_M_real_0_ce0,
        we0 => xmat_M_real_0_we0,
        d0 => bitcast_ln63_fu_828_p1,
        q0 => xmat_M_real_0_q0,
        address1 => grp_DiagMatMul_fu_589_B_M_real_0_address1,
        ce1 => xmat_M_real_0_ce1,
        q1 => xmat_M_real_0_q1);

    xmat_M_real_1_U : component matmul_rxmat_M_reeOg
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => xmat_M_real_1_address0,
        ce0 => xmat_M_real_1_ce0,
        we0 => xmat_M_real_1_we0,
        d0 => bitcast_ln63_fu_828_p1,
        q0 => xmat_M_real_1_q0,
        address1 => grp_DiagMatMul_fu_589_B_M_real_1_address1,
        ce1 => xmat_M_real_1_ce1,
        q1 => xmat_M_real_1_q1);

    xmat_M_real_2_U : component matmul_rxmat_M_reeOg
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => xmat_M_real_2_address0,
        ce0 => xmat_M_real_2_ce0,
        we0 => xmat_M_real_2_we0,
        d0 => bitcast_ln63_fu_828_p1,
        q0 => xmat_M_real_2_q0,
        address1 => grp_DiagMatMul_fu_589_B_M_real_2_address1,
        ce1 => xmat_M_real_2_ce1,
        q1 => xmat_M_real_2_q1);

    xmat_M_real_3_U : component matmul_rxmat_M_reeOg
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => xmat_M_real_3_address0,
        ce0 => xmat_M_real_3_ce0,
        we0 => xmat_M_real_3_we0,
        d0 => bitcast_ln63_fu_828_p1,
        q0 => xmat_M_real_3_q0,
        address1 => grp_DiagMatMul_fu_589_B_M_real_3_address1,
        ce1 => xmat_M_real_3_ce1,
        q1 => xmat_M_real_3_q1);

    xmat_M_imag_0_U : component matmul_rxmat_M_reeOg
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => xmat_M_imag_0_address0,
        ce0 => xmat_M_imag_0_ce0,
        we0 => xmat_M_imag_0_we0,
        d0 => bitcast_ln60_fu_816_p1,
        q0 => xmat_M_imag_0_q0,
        address1 => grp_DiagMatMul_fu_589_B_M_imag_0_address1,
        ce1 => xmat_M_imag_0_ce1,
        q1 => xmat_M_imag_0_q1);

    xmat_M_imag_1_U : component matmul_rxmat_M_reeOg
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => xmat_M_imag_1_address0,
        ce0 => xmat_M_imag_1_ce0,
        we0 => xmat_M_imag_1_we0,
        d0 => bitcast_ln60_fu_816_p1,
        q0 => xmat_M_imag_1_q0,
        address1 => grp_DiagMatMul_fu_589_B_M_imag_1_address1,
        ce1 => xmat_M_imag_1_ce1,
        q1 => xmat_M_imag_1_q1);

    xmat_M_imag_2_U : component matmul_rxmat_M_reeOg
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => xmat_M_imag_2_address0,
        ce0 => xmat_M_imag_2_ce0,
        we0 => xmat_M_imag_2_we0,
        d0 => bitcast_ln60_fu_816_p1,
        q0 => xmat_M_imag_2_q0,
        address1 => grp_DiagMatMul_fu_589_B_M_imag_2_address1,
        ce1 => xmat_M_imag_2_ce1,
        q1 => xmat_M_imag_2_q1);

    xmat_M_imag_3_U : component matmul_rxmat_M_reeOg
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => xmat_M_imag_3_address0,
        ce0 => xmat_M_imag_3_ce0,
        we0 => xmat_M_imag_3_we0,
        d0 => bitcast_ln60_fu_816_p1,
        q0 => xmat_M_imag_3_q0,
        address1 => grp_DiagMatMul_fu_589_B_M_imag_3_address1,
        ce1 => xmat_M_imag_3_ce1,
        q1 => xmat_M_imag_3_q1);

    mulOut_M_real_0_U : component matmul_mulOut_M_rudo
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => mulOut_M_real_0_address0,
        ce0 => mulOut_M_real_0_ce0,
        we0 => mulOut_M_real_0_we0,
        d0 => grp_DiagMatMul_fu_589_C_M_real_0_d0,
        q0 => mulOut_M_real_0_q0);

    mulOut_M_real_1_U : component matmul_mulOut_M_rudo
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => mulOut_M_real_1_address0,
        ce0 => mulOut_M_real_1_ce0,
        we0 => mulOut_M_real_1_we0,
        d0 => grp_DiagMatMul_fu_589_C_M_real_1_d0,
        q0 => mulOut_M_real_1_q0);

    mulOut_M_real_2_U : component matmul_mulOut_M_rudo
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => mulOut_M_real_2_address0,
        ce0 => mulOut_M_real_2_ce0,
        we0 => mulOut_M_real_2_we0,
        d0 => grp_DiagMatMul_fu_589_C_M_real_2_d0,
        q0 => mulOut_M_real_2_q0);

    mulOut_M_real_3_U : component matmul_mulOut_M_rudo
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => mulOut_M_real_3_address0,
        ce0 => mulOut_M_real_3_ce0,
        we0 => mulOut_M_real_3_we0,
        d0 => grp_DiagMatMul_fu_589_C_M_real_3_d0,
        q0 => mulOut_M_real_3_q0);

    mulOut_M_imag_0_U : component matmul_mulOut_M_rudo
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => mulOut_M_imag_0_address0,
        ce0 => mulOut_M_imag_0_ce0,
        we0 => mulOut_M_imag_0_we0,
        d0 => grp_DiagMatMul_fu_589_C_M_imag_0_d0,
        q0 => mulOut_M_imag_0_q0);

    mulOut_M_imag_1_U : component matmul_mulOut_M_rudo
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => mulOut_M_imag_1_address0,
        ce0 => mulOut_M_imag_1_ce0,
        we0 => mulOut_M_imag_1_we0,
        d0 => grp_DiagMatMul_fu_589_C_M_imag_1_d0,
        q0 => mulOut_M_imag_1_q0);

    mulOut_M_imag_2_U : component matmul_mulOut_M_rudo
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => mulOut_M_imag_2_address0,
        ce0 => mulOut_M_imag_2_ce0,
        we0 => mulOut_M_imag_2_we0,
        d0 => grp_DiagMatMul_fu_589_C_M_imag_2_d0,
        q0 => mulOut_M_imag_2_q0);

    mulOut_M_imag_3_U : component matmul_mulOut_M_rudo
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => mulOut_M_imag_3_address0,
        ce0 => mulOut_M_imag_3_ce0,
        we0 => mulOut_M_imag_3_we0,
        d0 => grp_DiagMatMul_fu_589_C_M_imag_3_d0,
        q0 => mulOut_M_imag_3_q0);

    matmul_control_s_axi_U : component matmul_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    grp_DiagMatMul_fu_589 : component DiagMatMul
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_DiagMatMul_fu_589_ap_start,
        ap_done => grp_DiagMatMul_fu_589_ap_done,
        ap_idle => grp_DiagMatMul_fu_589_ap_idle,
        ap_ready => grp_DiagMatMul_fu_589_ap_ready,
        A_M_real_address0 => grp_DiagMatMul_fu_589_A_M_real_address0,
        A_M_real_ce0 => grp_DiagMatMul_fu_589_A_M_real_ce0,
        A_M_real_q0 => rxmat_M_real_0_q0,
        A_M_real_address1 => grp_DiagMatMul_fu_589_A_M_real_address1,
        A_M_real_ce1 => grp_DiagMatMul_fu_589_A_M_real_ce1,
        A_M_real_q1 => rxmat_M_real_0_q1,
        A_M_real1_address0 => grp_DiagMatMul_fu_589_A_M_real1_address0,
        A_M_real1_ce0 => grp_DiagMatMul_fu_589_A_M_real1_ce0,
        A_M_real1_q0 => rxmat_M_real_1_q0,
        A_M_real1_address1 => grp_DiagMatMul_fu_589_A_M_real1_address1,
        A_M_real1_ce1 => grp_DiagMatMul_fu_589_A_M_real1_ce1,
        A_M_real1_q1 => rxmat_M_real_1_q1,
        A_M_real2_address0 => grp_DiagMatMul_fu_589_A_M_real2_address0,
        A_M_real2_ce0 => grp_DiagMatMul_fu_589_A_M_real2_ce0,
        A_M_real2_q0 => rxmat_M_real_2_q0,
        A_M_real2_address1 => grp_DiagMatMul_fu_589_A_M_real2_address1,
        A_M_real2_ce1 => grp_DiagMatMul_fu_589_A_M_real2_ce1,
        A_M_real2_q1 => rxmat_M_real_2_q1,
        A_M_real3_address0 => grp_DiagMatMul_fu_589_A_M_real3_address0,
        A_M_real3_ce0 => grp_DiagMatMul_fu_589_A_M_real3_ce0,
        A_M_real3_q0 => rxmat_M_real_3_q0,
        A_M_real3_address1 => grp_DiagMatMul_fu_589_A_M_real3_address1,
        A_M_real3_ce1 => grp_DiagMatMul_fu_589_A_M_real3_ce1,
        A_M_real3_q1 => rxmat_M_real_3_q1,
        A_M_imag_address0 => grp_DiagMatMul_fu_589_A_M_imag_address0,
        A_M_imag_ce0 => grp_DiagMatMul_fu_589_A_M_imag_ce0,
        A_M_imag_q0 => rxmat_M_imag_0_q0,
        A_M_imag_address1 => grp_DiagMatMul_fu_589_A_M_imag_address1,
        A_M_imag_ce1 => grp_DiagMatMul_fu_589_A_M_imag_ce1,
        A_M_imag_q1 => rxmat_M_imag_0_q1,
        A_M_imag4_address0 => grp_DiagMatMul_fu_589_A_M_imag4_address0,
        A_M_imag4_ce0 => grp_DiagMatMul_fu_589_A_M_imag4_ce0,
        A_M_imag4_q0 => rxmat_M_imag_1_q0,
        A_M_imag4_address1 => grp_DiagMatMul_fu_589_A_M_imag4_address1,
        A_M_imag4_ce1 => grp_DiagMatMul_fu_589_A_M_imag4_ce1,
        A_M_imag4_q1 => rxmat_M_imag_1_q1,
        A_M_imag5_address0 => grp_DiagMatMul_fu_589_A_M_imag5_address0,
        A_M_imag5_ce0 => grp_DiagMatMul_fu_589_A_M_imag5_ce0,
        A_M_imag5_q0 => rxmat_M_imag_2_q0,
        A_M_imag5_address1 => grp_DiagMatMul_fu_589_A_M_imag5_address1,
        A_M_imag5_ce1 => grp_DiagMatMul_fu_589_A_M_imag5_ce1,
        A_M_imag5_q1 => rxmat_M_imag_2_q1,
        A_M_imag6_address0 => grp_DiagMatMul_fu_589_A_M_imag6_address0,
        A_M_imag6_ce0 => grp_DiagMatMul_fu_589_A_M_imag6_ce0,
        A_M_imag6_q0 => rxmat_M_imag_3_q0,
        A_M_imag6_address1 => grp_DiagMatMul_fu_589_A_M_imag6_address1,
        A_M_imag6_ce1 => grp_DiagMatMul_fu_589_A_M_imag6_ce1,
        A_M_imag6_q1 => rxmat_M_imag_3_q1,
        B_M_real_0_address0 => grp_DiagMatMul_fu_589_B_M_real_0_address0,
        B_M_real_0_ce0 => grp_DiagMatMul_fu_589_B_M_real_0_ce0,
        B_M_real_0_q0 => xmat_M_real_0_q0,
        B_M_real_0_address1 => grp_DiagMatMul_fu_589_B_M_real_0_address1,
        B_M_real_0_ce1 => grp_DiagMatMul_fu_589_B_M_real_0_ce1,
        B_M_real_0_q1 => xmat_M_real_0_q1,
        B_M_real_1_address0 => grp_DiagMatMul_fu_589_B_M_real_1_address0,
        B_M_real_1_ce0 => grp_DiagMatMul_fu_589_B_M_real_1_ce0,
        B_M_real_1_q0 => xmat_M_real_1_q0,
        B_M_real_1_address1 => grp_DiagMatMul_fu_589_B_M_real_1_address1,
        B_M_real_1_ce1 => grp_DiagMatMul_fu_589_B_M_real_1_ce1,
        B_M_real_1_q1 => xmat_M_real_1_q1,
        B_M_real_2_address0 => grp_DiagMatMul_fu_589_B_M_real_2_address0,
        B_M_real_2_ce0 => grp_DiagMatMul_fu_589_B_M_real_2_ce0,
        B_M_real_2_q0 => xmat_M_real_2_q0,
        B_M_real_2_address1 => grp_DiagMatMul_fu_589_B_M_real_2_address1,
        B_M_real_2_ce1 => grp_DiagMatMul_fu_589_B_M_real_2_ce1,
        B_M_real_2_q1 => xmat_M_real_2_q1,
        B_M_real_3_address0 => grp_DiagMatMul_fu_589_B_M_real_3_address0,
        B_M_real_3_ce0 => grp_DiagMatMul_fu_589_B_M_real_3_ce0,
        B_M_real_3_q0 => xmat_M_real_3_q0,
        B_M_real_3_address1 => grp_DiagMatMul_fu_589_B_M_real_3_address1,
        B_M_real_3_ce1 => grp_DiagMatMul_fu_589_B_M_real_3_ce1,
        B_M_real_3_q1 => xmat_M_real_3_q1,
        B_M_imag_0_address0 => grp_DiagMatMul_fu_589_B_M_imag_0_address0,
        B_M_imag_0_ce0 => grp_DiagMatMul_fu_589_B_M_imag_0_ce0,
        B_M_imag_0_q0 => xmat_M_imag_0_q0,
        B_M_imag_0_address1 => grp_DiagMatMul_fu_589_B_M_imag_0_address1,
        B_M_imag_0_ce1 => grp_DiagMatMul_fu_589_B_M_imag_0_ce1,
        B_M_imag_0_q1 => xmat_M_imag_0_q1,
        B_M_imag_1_address0 => grp_DiagMatMul_fu_589_B_M_imag_1_address0,
        B_M_imag_1_ce0 => grp_DiagMatMul_fu_589_B_M_imag_1_ce0,
        B_M_imag_1_q0 => xmat_M_imag_1_q0,
        B_M_imag_1_address1 => grp_DiagMatMul_fu_589_B_M_imag_1_address1,
        B_M_imag_1_ce1 => grp_DiagMatMul_fu_589_B_M_imag_1_ce1,
        B_M_imag_1_q1 => xmat_M_imag_1_q1,
        B_M_imag_2_address0 => grp_DiagMatMul_fu_589_B_M_imag_2_address0,
        B_M_imag_2_ce0 => grp_DiagMatMul_fu_589_B_M_imag_2_ce0,
        B_M_imag_2_q0 => xmat_M_imag_2_q0,
        B_M_imag_2_address1 => grp_DiagMatMul_fu_589_B_M_imag_2_address1,
        B_M_imag_2_ce1 => grp_DiagMatMul_fu_589_B_M_imag_2_ce1,
        B_M_imag_2_q1 => xmat_M_imag_2_q1,
        B_M_imag_3_address0 => grp_DiagMatMul_fu_589_B_M_imag_3_address0,
        B_M_imag_3_ce0 => grp_DiagMatMul_fu_589_B_M_imag_3_ce0,
        B_M_imag_3_q0 => xmat_M_imag_3_q0,
        B_M_imag_3_address1 => grp_DiagMatMul_fu_589_B_M_imag_3_address1,
        B_M_imag_3_ce1 => grp_DiagMatMul_fu_589_B_M_imag_3_ce1,
        B_M_imag_3_q1 => xmat_M_imag_3_q1,
        C_M_real_0_address0 => grp_DiagMatMul_fu_589_C_M_real_0_address0,
        C_M_real_0_ce0 => grp_DiagMatMul_fu_589_C_M_real_0_ce0,
        C_M_real_0_we0 => grp_DiagMatMul_fu_589_C_M_real_0_we0,
        C_M_real_0_d0 => grp_DiagMatMul_fu_589_C_M_real_0_d0,
        C_M_real_1_address0 => grp_DiagMatMul_fu_589_C_M_real_1_address0,
        C_M_real_1_ce0 => grp_DiagMatMul_fu_589_C_M_real_1_ce0,
        C_M_real_1_we0 => grp_DiagMatMul_fu_589_C_M_real_1_we0,
        C_M_real_1_d0 => grp_DiagMatMul_fu_589_C_M_real_1_d0,
        C_M_real_2_address0 => grp_DiagMatMul_fu_589_C_M_real_2_address0,
        C_M_real_2_ce0 => grp_DiagMatMul_fu_589_C_M_real_2_ce0,
        C_M_real_2_we0 => grp_DiagMatMul_fu_589_C_M_real_2_we0,
        C_M_real_2_d0 => grp_DiagMatMul_fu_589_C_M_real_2_d0,
        C_M_real_3_address0 => grp_DiagMatMul_fu_589_C_M_real_3_address0,
        C_M_real_3_ce0 => grp_DiagMatMul_fu_589_C_M_real_3_ce0,
        C_M_real_3_we0 => grp_DiagMatMul_fu_589_C_M_real_3_we0,
        C_M_real_3_d0 => grp_DiagMatMul_fu_589_C_M_real_3_d0,
        C_M_imag_0_address0 => grp_DiagMatMul_fu_589_C_M_imag_0_address0,
        C_M_imag_0_ce0 => grp_DiagMatMul_fu_589_C_M_imag_0_ce0,
        C_M_imag_0_we0 => grp_DiagMatMul_fu_589_C_M_imag_0_we0,
        C_M_imag_0_d0 => grp_DiagMatMul_fu_589_C_M_imag_0_d0,
        C_M_imag_1_address0 => grp_DiagMatMul_fu_589_C_M_imag_1_address0,
        C_M_imag_1_ce0 => grp_DiagMatMul_fu_589_C_M_imag_1_ce0,
        C_M_imag_1_we0 => grp_DiagMatMul_fu_589_C_M_imag_1_we0,
        C_M_imag_1_d0 => grp_DiagMatMul_fu_589_C_M_imag_1_d0,
        C_M_imag_2_address0 => grp_DiagMatMul_fu_589_C_M_imag_2_address0,
        C_M_imag_2_ce0 => grp_DiagMatMul_fu_589_C_M_imag_2_ce0,
        C_M_imag_2_we0 => grp_DiagMatMul_fu_589_C_M_imag_2_we0,
        C_M_imag_2_d0 => grp_DiagMatMul_fu_589_C_M_imag_2_d0,
        C_M_imag_3_address0 => grp_DiagMatMul_fu_589_C_M_imag_3_address0,
        C_M_imag_3_ce0 => grp_DiagMatMul_fu_589_C_M_imag_3_ce0,
        C_M_imag_3_we0 => grp_DiagMatMul_fu_589_C_M_imag_3_we0,
        C_M_imag_3_d0 => grp_DiagMatMul_fu_589_C_M_imag_3_d0);

    matmul_mux_432_32CeG_U44 : component matmul_mux_432_32CeG
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => mulOut_M_imag_0_q0,
        din1 => mulOut_M_imag_1_q0,
        din2 => mulOut_M_imag_2_q0,
        din3 => mulOut_M_imag_3_q0,
        din4 => zext_ln1079_1_fu_880_p1,
        dout => tmp_3_fu_883_p6);

    matmul_mux_432_32CeG_U45 : component matmul_mux_432_32CeG
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => mulOut_M_real_0_q0,
        din1 => mulOut_M_real_1_q0,
        din2 => mulOut_M_real_2_q0,
        din3 => mulOut_M_real_3_q0,
        din4 => zext_ln1079_1_fu_880_p1,
        dout => tmp_4_fu_901_p6);

    regslice_both_in_stream_V_data_V_U : component regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TDATA,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_data_V_U_ack_in,
        data_out => in_stream_TDATA_int,
        vld_out => in_stream_TVALID_int,
        ack_out => in_stream_TREADY_int,
        apdone_blk => regslice_both_in_stream_V_data_V_U_apdone_blk);

    regslice_both_in_stream_V_keep_V_U : component regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TKEEP,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_keep_V_U_ack_in,
        data_out => in_stream_TKEEP_int,
        vld_out => regslice_both_in_stream_V_keep_V_U_vld_out,
        ack_out => in_stream_TREADY_int,
        apdone_blk => regslice_both_in_stream_V_keep_V_U_apdone_blk);

    regslice_both_in_stream_V_strb_V_U : component regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TSTRB,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_strb_V_U_ack_in,
        data_out => in_stream_TSTRB_int,
        vld_out => regslice_both_in_stream_V_strb_V_U_vld_out,
        ack_out => in_stream_TREADY_int,
        apdone_blk => regslice_both_in_stream_V_strb_V_U_apdone_blk);

    regslice_both_in_stream_V_last_V_U : component regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TLAST,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_last_V_U_ack_in,
        data_out => in_stream_TLAST_int,
        vld_out => regslice_both_in_stream_V_last_V_U_vld_out,
        ack_out => in_stream_TREADY_int,
        apdone_blk => regslice_both_in_stream_V_last_V_U_apdone_blk);

    regslice_both_out_stream_V_data_V_U : component regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => out_stream_TDATA_int,
        vld_in => out_stream_TVALID_int,
        ack_in => out_stream_TREADY_int,
        data_out => out_stream_TDATA,
        vld_out => regslice_both_out_stream_V_data_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_data_V_U_apdone_blk);

    regslice_both_out_stream_V_keep_V_U : component regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv8_FF,
        vld_in => out_stream_TVALID_int,
        ack_in => regslice_both_out_stream_V_keep_V_U_ack_in_dummy,
        data_out => out_stream_TKEEP,
        vld_out => regslice_both_out_stream_V_keep_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_keep_V_U_apdone_blk);

    regslice_both_out_stream_V_strb_V_U : component regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv8_FF,
        vld_in => out_stream_TVALID_int,
        ack_in => regslice_both_out_stream_V_strb_V_U_ack_in_dummy,
        data_out => out_stream_TSTRB,
        vld_out => regslice_both_out_stream_V_strb_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_strb_V_U_apdone_blk);

    regslice_both_out_stream_V_last_V_U : component regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => valOut_last_V_reg_1034,
        vld_in => out_stream_TVALID_int,
        ack_in => regslice_both_out_stream_V_last_V_U_ack_in_dummy,
        data_out => out_stream_TLAST,
        vld_out => regslice_both_out_stream_V_last_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((grp_DiagMatMul_fu_589_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state8)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state8);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((grp_DiagMatMul_fu_589_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_DiagMatMul_fu_589_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_DiagMatMul_fu_589_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln56_fu_745_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    grp_DiagMatMul_fu_589_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_DiagMatMul_fu_589_ap_ready = ap_const_logic_1)) then 
                    grp_DiagMatMul_fu_589_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_reg_533_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln36_fu_661_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_0_reg_533 <= ap_const_lv9_0;
            elsif ((not(((icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln46_fu_679_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                i_0_reg_533 <= i_reg_939;
            end if; 
        end if;
    end process;

    i_1_reg_556_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln45_fu_667_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_1_reg_556 <= ap_const_lv7_0;
            elsif ((not(((icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln57_fu_783_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                i_1_reg_556 <= i_4_reg_958;
            end if; 
        end if;
    end process;

    i_2_reg_578_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln71_fu_836_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_2_reg_578 <= i_3_fu_842_p2;
            elsif (((grp_DiagMatMul_fu_589_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                i_2_reg_578 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    j_0_reg_545_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                j_0_reg_545 <= j_fu_685_p2;
            elsif (((icmp_ln45_fu_667_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                j_0_reg_545 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    j_1_reg_567_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                j_1_reg_567 <= j_2_fu_789_p2;
            elsif (((icmp_ln56_fu_745_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                j_1_reg_567 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    phi_ln36_reg_522_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln36_fu_661_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                phi_ln36_reg_522 <= add_ln36_fu_655_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                phi_ln36_reg_522 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                i_4_reg_958 <= i_4_fu_751_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                i_reg_939 <= i_fu_673_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln71_reg_980 <= icmp_ln71_fu_836_p2;
                icmp_ln71_reg_980_pp0_iter1_reg <= icmp_ln71_reg_980;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln71_fu_836_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                lshr_ln1_reg_989 <= i_2_reg_578(8 downto 6);
                valOut_last_V_reg_1034 <= valOut_last_V_fu_874_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln56_fu_745_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                trunc_ln60_reg_963 <= trunc_ln60_fu_757_p1;
                    zext_ln57_reg_967(12 downto 8) <= zext_ln57_fu_779_p1(12 downto 8);
            end if;
        end if;
    end process;
    zext_ln57_reg_967(7 downto 0) <= "00000000";
    zext_ln57_reg_967(13) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, icmp_ln46_fu_679_p2, ap_CS_fsm_state6, icmp_ln57_fu_783_p2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state5, icmp_ln56_fu_745_p2, icmp_ln71_fu_836_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_ap_done, ap_block_pp0_stage0_subdone, icmp_ln36_fu_661_p2, icmp_ln45_fu_667_p2, ap_CS_fsm_state11, regslice_both_out_stream_V_data_V_U_apdone_blk, in_stream_TVALID_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln36_fu_661_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln45_fu_667_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not(((icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln46_fu_679_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif ((not(((icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((icmp_ln56_fu_745_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not(((icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln57_fu_783_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif ((not(((icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((grp_DiagMatMul_fu_589_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln71_fu_836_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln71_fu_836_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state11 => 
                if (((regslice_both_out_stream_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    add_ln36_fu_655_p2 <= std_logic_vector(unsigned(phi_ln36_reg_522) + unsigned(ap_const_lv8_1));
    add_ln60_fu_799_p2 <= std_logic_vector(unsigned(zext_ln60_fu_795_p1) + unsigned(zext_ln57_reg_967));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(7);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(8);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state9_io, ap_block_state10_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state10_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state9_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state9_io, ap_block_state10_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state10_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state9_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state10_io_assign_proc : process(icmp_ln71_reg_980_pp0_iter1_reg, out_stream_TREADY_int)
    begin
                ap_block_state10_io <= ((icmp_ln71_reg_980_pp0_iter1_reg = ap_const_lv1_0) and (out_stream_TREADY_int = ap_const_logic_0));
    end process;

        ap_block_state10_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_assign_proc : process(icmp_ln46_fu_679_p2, in_stream_TVALID_int)
    begin
                ap_block_state4 <= ((icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0));
    end process;


    ap_block_state6_assign_proc : process(icmp_ln57_fu_783_p2, in_stream_TVALID_int)
    begin
                ap_block_state6 <= ((icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0));
    end process;

        ap_block_state8_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_io_assign_proc : process(icmp_ln71_reg_980, out_stream_TREADY_int)
    begin
                ap_block_state9_io <= ((icmp_ln71_reg_980 = ap_const_lv1_0) and (out_stream_TREADY_int = ap_const_logic_0));
    end process;

        ap_block_state9_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state8_assign_proc : process(icmp_ln71_fu_836_p2)
    begin
        if ((icmp_ln71_fu_836_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state11, regslice_both_out_stream_V_data_V_U_apdone_blk)
    begin
        if (((regslice_both_out_stream_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state11, regslice_both_out_stream_V_data_V_U_apdone_blk)
    begin
        if (((regslice_both_out_stream_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    bitcast_ln49_fu_725_p1 <= grp_fu_645_p4;
    bitcast_ln52_fu_737_p1 <= trunc_ln681_fu_733_p1;
    bitcast_ln60_fu_816_p1 <= grp_fu_645_p4;
    bitcast_ln63_fu_828_p1 <= trunc_ln681_1_fu_824_p1;
    bitcast_ln74_fu_897_p1 <= tmp_3_fu_883_p6;
    bitcast_ln77_fu_915_p1 <= tmp_4_fu_901_p6;
    grp_DiagMatMul_fu_589_ap_start <= grp_DiagMatMul_fu_589_ap_start_reg;
    grp_fu_645_p4 <= in_stream_TDATA_int(63 downto 32);
    i_3_fu_842_p2 <= std_logic_vector(unsigned(i_2_reg_578) + unsigned(ap_const_lv9_1));
    i_4_fu_751_p2 <= std_logic_vector(unsigned(i_1_reg_556) + unsigned(ap_const_lv7_1));
    i_fu_673_p2 <= std_logic_vector(unsigned(i_0_reg_533) + unsigned(ap_const_lv9_1));
    icmp_ln36_fu_661_p2 <= "1" when (phi_ln36_reg_522 = ap_const_lv8_FF) else "0";
    icmp_ln45_fu_667_p2 <= "1" when (i_0_reg_533 = ap_const_lv9_100) else "0";
    icmp_ln46_fu_679_p2 <= "1" when (j_0_reg_545 = ap_const_lv7_40) else "0";
    icmp_ln56_fu_745_p2 <= "1" when (i_1_reg_556 = ap_const_lv7_40) else "0";
    icmp_ln57_fu_783_p2 <= "1" when (j_1_reg_567 = ap_const_lv9_100) else "0";
    icmp_ln71_fu_836_p2 <= "1" when (i_2_reg_578 = ap_const_lv9_100) else "0";

    in_stream_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state4, icmp_ln46_fu_679_p2, ap_CS_fsm_state6, icmp_ln57_fu_783_p2, in_stream_TVALID_int)
    begin
        if ((((icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            in_stream_TDATA_blk_n <= in_stream_TVALID_int;
        else 
            in_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_stream_TREADY_assign_proc : process(in_stream_TVALID, regslice_both_in_stream_V_data_V_U_ack_in)
    begin
        if (((regslice_both_in_stream_V_data_V_U_ack_in = ap_const_logic_1) and (in_stream_TVALID = ap_const_logic_1))) then 
            in_stream_TREADY <= ap_const_logic_1;
        else 
            in_stream_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    in_stream_TREADY_int_assign_proc : process(ap_CS_fsm_state4, icmp_ln46_fu_679_p2, ap_CS_fsm_state6, icmp_ln57_fu_783_p2, in_stream_TVALID_int)
    begin
        if (((not(((icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            in_stream_TREADY_int <= ap_const_logic_1;
        else 
            in_stream_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;

    j_2_fu_789_p2 <= std_logic_vector(unsigned(j_1_reg_567) + unsigned(ap_const_lv9_1));
    j_fu_685_p2 <= std_logic_vector(unsigned(j_0_reg_545) + unsigned(ap_const_lv7_1));
    lshr_ln_fu_761_p4 <= i_1_reg_556(6 downto 2);

    mulOut_M_imag_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_C_M_imag_0_address0, zext_ln1079_fu_862_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mulOut_M_imag_0_address0 <= zext_ln1079_fu_862_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            mulOut_M_imag_0_address0 <= grp_DiagMatMul_fu_589_C_M_imag_0_address0;
        else 
            mulOut_M_imag_0_address0 <= "XXXXXX";
        end if; 
    end process;


    mulOut_M_imag_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_C_M_imag_0_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mulOut_M_imag_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            mulOut_M_imag_0_ce0 <= grp_DiagMatMul_fu_589_C_M_imag_0_ce0;
        else 
            mulOut_M_imag_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mulOut_M_imag_0_we0_assign_proc : process(ap_CS_fsm_state7, grp_DiagMatMul_fu_589_C_M_imag_0_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            mulOut_M_imag_0_we0 <= grp_DiagMatMul_fu_589_C_M_imag_0_we0;
        else 
            mulOut_M_imag_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mulOut_M_imag_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_C_M_imag_1_address0, zext_ln1079_fu_862_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mulOut_M_imag_1_address0 <= zext_ln1079_fu_862_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            mulOut_M_imag_1_address0 <= grp_DiagMatMul_fu_589_C_M_imag_1_address0;
        else 
            mulOut_M_imag_1_address0 <= "XXXXXX";
        end if; 
    end process;


    mulOut_M_imag_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_C_M_imag_1_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mulOut_M_imag_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            mulOut_M_imag_1_ce0 <= grp_DiagMatMul_fu_589_C_M_imag_1_ce0;
        else 
            mulOut_M_imag_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mulOut_M_imag_1_we0_assign_proc : process(ap_CS_fsm_state7, grp_DiagMatMul_fu_589_C_M_imag_1_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            mulOut_M_imag_1_we0 <= grp_DiagMatMul_fu_589_C_M_imag_1_we0;
        else 
            mulOut_M_imag_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mulOut_M_imag_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_C_M_imag_2_address0, zext_ln1079_fu_862_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mulOut_M_imag_2_address0 <= zext_ln1079_fu_862_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            mulOut_M_imag_2_address0 <= grp_DiagMatMul_fu_589_C_M_imag_2_address0;
        else 
            mulOut_M_imag_2_address0 <= "XXXXXX";
        end if; 
    end process;


    mulOut_M_imag_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_C_M_imag_2_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mulOut_M_imag_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            mulOut_M_imag_2_ce0 <= grp_DiagMatMul_fu_589_C_M_imag_2_ce0;
        else 
            mulOut_M_imag_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mulOut_M_imag_2_we0_assign_proc : process(ap_CS_fsm_state7, grp_DiagMatMul_fu_589_C_M_imag_2_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            mulOut_M_imag_2_we0 <= grp_DiagMatMul_fu_589_C_M_imag_2_we0;
        else 
            mulOut_M_imag_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mulOut_M_imag_3_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_C_M_imag_3_address0, zext_ln1079_fu_862_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mulOut_M_imag_3_address0 <= zext_ln1079_fu_862_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            mulOut_M_imag_3_address0 <= grp_DiagMatMul_fu_589_C_M_imag_3_address0;
        else 
            mulOut_M_imag_3_address0 <= "XXXXXX";
        end if; 
    end process;


    mulOut_M_imag_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_C_M_imag_3_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mulOut_M_imag_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            mulOut_M_imag_3_ce0 <= grp_DiagMatMul_fu_589_C_M_imag_3_ce0;
        else 
            mulOut_M_imag_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mulOut_M_imag_3_we0_assign_proc : process(ap_CS_fsm_state7, grp_DiagMatMul_fu_589_C_M_imag_3_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            mulOut_M_imag_3_we0 <= grp_DiagMatMul_fu_589_C_M_imag_3_we0;
        else 
            mulOut_M_imag_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mulOut_M_real_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_C_M_real_0_address0, zext_ln1079_fu_862_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mulOut_M_real_0_address0 <= zext_ln1079_fu_862_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            mulOut_M_real_0_address0 <= grp_DiagMatMul_fu_589_C_M_real_0_address0;
        else 
            mulOut_M_real_0_address0 <= "XXXXXX";
        end if; 
    end process;


    mulOut_M_real_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_C_M_real_0_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mulOut_M_real_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            mulOut_M_real_0_ce0 <= grp_DiagMatMul_fu_589_C_M_real_0_ce0;
        else 
            mulOut_M_real_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mulOut_M_real_0_we0_assign_proc : process(ap_CS_fsm_state7, grp_DiagMatMul_fu_589_C_M_real_0_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            mulOut_M_real_0_we0 <= grp_DiagMatMul_fu_589_C_M_real_0_we0;
        else 
            mulOut_M_real_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mulOut_M_real_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_C_M_real_1_address0, zext_ln1079_fu_862_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mulOut_M_real_1_address0 <= zext_ln1079_fu_862_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            mulOut_M_real_1_address0 <= grp_DiagMatMul_fu_589_C_M_real_1_address0;
        else 
            mulOut_M_real_1_address0 <= "XXXXXX";
        end if; 
    end process;


    mulOut_M_real_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_C_M_real_1_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mulOut_M_real_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            mulOut_M_real_1_ce0 <= grp_DiagMatMul_fu_589_C_M_real_1_ce0;
        else 
            mulOut_M_real_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mulOut_M_real_1_we0_assign_proc : process(ap_CS_fsm_state7, grp_DiagMatMul_fu_589_C_M_real_1_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            mulOut_M_real_1_we0 <= grp_DiagMatMul_fu_589_C_M_real_1_we0;
        else 
            mulOut_M_real_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mulOut_M_real_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_C_M_real_2_address0, zext_ln1079_fu_862_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mulOut_M_real_2_address0 <= zext_ln1079_fu_862_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            mulOut_M_real_2_address0 <= grp_DiagMatMul_fu_589_C_M_real_2_address0;
        else 
            mulOut_M_real_2_address0 <= "XXXXXX";
        end if; 
    end process;


    mulOut_M_real_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_C_M_real_2_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mulOut_M_real_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            mulOut_M_real_2_ce0 <= grp_DiagMatMul_fu_589_C_M_real_2_ce0;
        else 
            mulOut_M_real_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mulOut_M_real_2_we0_assign_proc : process(ap_CS_fsm_state7, grp_DiagMatMul_fu_589_C_M_real_2_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            mulOut_M_real_2_we0 <= grp_DiagMatMul_fu_589_C_M_real_2_we0;
        else 
            mulOut_M_real_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mulOut_M_real_3_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_C_M_real_3_address0, zext_ln1079_fu_862_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mulOut_M_real_3_address0 <= zext_ln1079_fu_862_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            mulOut_M_real_3_address0 <= grp_DiagMatMul_fu_589_C_M_real_3_address0;
        else 
            mulOut_M_real_3_address0 <= "XXXXXX";
        end if; 
    end process;


    mulOut_M_real_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_C_M_real_3_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mulOut_M_real_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            mulOut_M_real_3_ce0 <= grp_DiagMatMul_fu_589_C_M_real_3_ce0;
        else 
            mulOut_M_real_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mulOut_M_real_3_we0_assign_proc : process(ap_CS_fsm_state7, grp_DiagMatMul_fu_589_C_M_real_3_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            mulOut_M_real_3_we0 <= grp_DiagMatMul_fu_589_C_M_real_3_we0;
        else 
            mulOut_M_real_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_stream_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln71_reg_980, ap_enable_reg_pp0_iter2, icmp_ln71_reg_980_pp0_iter1_reg, out_stream_TREADY_int)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln71_reg_980_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln71_reg_980 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_stream_TDATA_blk_n <= out_stream_TREADY_int;
        else 
            out_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_stream_TDATA_int <= (bitcast_ln74_fu_897_p1 & bitcast_ln77_fu_915_p1);
    out_stream_TVALID <= regslice_both_out_stream_V_data_V_U_vld_out;

    out_stream_TVALID_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln71_reg_980, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln71_reg_980 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_stream_TVALID_int <= ap_const_logic_1;
        else 
            out_stream_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    rxmat_M_imag_0_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_A_M_imag_address0, zext_ln49_fu_713_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rxmat_M_imag_0_address0 <= zext_ln49_fu_713_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rxmat_M_imag_0_address0 <= grp_DiagMatMul_fu_589_A_M_imag_address0;
        else 
            rxmat_M_imag_0_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    rxmat_M_imag_0_ce0_assign_proc : process(ap_CS_fsm_state4, icmp_ln46_fu_679_p2, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_A_M_imag_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            rxmat_M_imag_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rxmat_M_imag_0_ce0 <= grp_DiagMatMul_fu_589_A_M_imag_ce0;
        else 
            rxmat_M_imag_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rxmat_M_imag_0_ce1_assign_proc : process(ap_CS_fsm_state7, grp_DiagMatMul_fu_589_A_M_imag_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rxmat_M_imag_0_ce1 <= grp_DiagMatMul_fu_589_A_M_imag_ce1;
        else 
            rxmat_M_imag_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    rxmat_M_imag_0_we0_assign_proc : process(ap_CS_fsm_state4, icmp_ln46_fu_679_p2, trunc_ln49_1_fu_691_p4, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (trunc_ln49_1_fu_691_p4 = ap_const_lv3_0) and (icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            rxmat_M_imag_0_we0 <= ap_const_logic_1;
        else 
            rxmat_M_imag_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rxmat_M_imag_1_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_A_M_imag4_address0, zext_ln49_fu_713_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rxmat_M_imag_1_address0 <= zext_ln49_fu_713_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rxmat_M_imag_1_address0 <= grp_DiagMatMul_fu_589_A_M_imag4_address0;
        else 
            rxmat_M_imag_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    rxmat_M_imag_1_ce0_assign_proc : process(ap_CS_fsm_state4, icmp_ln46_fu_679_p2, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_A_M_imag4_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            rxmat_M_imag_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rxmat_M_imag_1_ce0 <= grp_DiagMatMul_fu_589_A_M_imag4_ce0;
        else 
            rxmat_M_imag_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rxmat_M_imag_1_ce1_assign_proc : process(ap_CS_fsm_state7, grp_DiagMatMul_fu_589_A_M_imag4_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rxmat_M_imag_1_ce1 <= grp_DiagMatMul_fu_589_A_M_imag4_ce1;
        else 
            rxmat_M_imag_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    rxmat_M_imag_1_we0_assign_proc : process(ap_CS_fsm_state4, icmp_ln46_fu_679_p2, trunc_ln49_1_fu_691_p4, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (trunc_ln49_1_fu_691_p4 = ap_const_lv3_1) and (icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            rxmat_M_imag_1_we0 <= ap_const_logic_1;
        else 
            rxmat_M_imag_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rxmat_M_imag_2_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_A_M_imag5_address0, zext_ln49_fu_713_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rxmat_M_imag_2_address0 <= zext_ln49_fu_713_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rxmat_M_imag_2_address0 <= grp_DiagMatMul_fu_589_A_M_imag5_address0;
        else 
            rxmat_M_imag_2_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    rxmat_M_imag_2_ce0_assign_proc : process(ap_CS_fsm_state4, icmp_ln46_fu_679_p2, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_A_M_imag5_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            rxmat_M_imag_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rxmat_M_imag_2_ce0 <= grp_DiagMatMul_fu_589_A_M_imag5_ce0;
        else 
            rxmat_M_imag_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rxmat_M_imag_2_ce1_assign_proc : process(ap_CS_fsm_state7, grp_DiagMatMul_fu_589_A_M_imag5_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rxmat_M_imag_2_ce1 <= grp_DiagMatMul_fu_589_A_M_imag5_ce1;
        else 
            rxmat_M_imag_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    rxmat_M_imag_2_we0_assign_proc : process(ap_CS_fsm_state4, icmp_ln46_fu_679_p2, trunc_ln49_1_fu_691_p4, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (trunc_ln49_1_fu_691_p4 = ap_const_lv3_2) and (icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            rxmat_M_imag_2_we0 <= ap_const_logic_1;
        else 
            rxmat_M_imag_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rxmat_M_imag_3_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_A_M_imag6_address0, zext_ln49_fu_713_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rxmat_M_imag_3_address0 <= zext_ln49_fu_713_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rxmat_M_imag_3_address0 <= grp_DiagMatMul_fu_589_A_M_imag6_address0;
        else 
            rxmat_M_imag_3_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    rxmat_M_imag_3_ce0_assign_proc : process(ap_CS_fsm_state4, icmp_ln46_fu_679_p2, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_A_M_imag6_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            rxmat_M_imag_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rxmat_M_imag_3_ce0 <= grp_DiagMatMul_fu_589_A_M_imag6_ce0;
        else 
            rxmat_M_imag_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rxmat_M_imag_3_ce1_assign_proc : process(ap_CS_fsm_state7, grp_DiagMatMul_fu_589_A_M_imag6_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rxmat_M_imag_3_ce1 <= grp_DiagMatMul_fu_589_A_M_imag6_ce1;
        else 
            rxmat_M_imag_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    rxmat_M_imag_3_we0_assign_proc : process(ap_CS_fsm_state4, icmp_ln46_fu_679_p2, trunc_ln49_1_fu_691_p4, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and not((trunc_ln49_1_fu_691_p4 = ap_const_lv3_0)) and not((trunc_ln49_1_fu_691_p4 = ap_const_lv3_1)) and not((trunc_ln49_1_fu_691_p4 = ap_const_lv3_2)) and (icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            rxmat_M_imag_3_we0 <= ap_const_logic_1;
        else 
            rxmat_M_imag_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rxmat_M_real_0_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_A_M_real_address0, zext_ln49_fu_713_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rxmat_M_real_0_address0 <= zext_ln49_fu_713_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rxmat_M_real_0_address0 <= grp_DiagMatMul_fu_589_A_M_real_address0;
        else 
            rxmat_M_real_0_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    rxmat_M_real_0_ce0_assign_proc : process(ap_CS_fsm_state4, icmp_ln46_fu_679_p2, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_A_M_real_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            rxmat_M_real_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rxmat_M_real_0_ce0 <= grp_DiagMatMul_fu_589_A_M_real_ce0;
        else 
            rxmat_M_real_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rxmat_M_real_0_ce1_assign_proc : process(ap_CS_fsm_state7, grp_DiagMatMul_fu_589_A_M_real_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rxmat_M_real_0_ce1 <= grp_DiagMatMul_fu_589_A_M_real_ce1;
        else 
            rxmat_M_real_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    rxmat_M_real_0_we0_assign_proc : process(ap_CS_fsm_state4, icmp_ln46_fu_679_p2, trunc_ln49_1_fu_691_p4, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (trunc_ln49_1_fu_691_p4 = ap_const_lv3_0) and (icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            rxmat_M_real_0_we0 <= ap_const_logic_1;
        else 
            rxmat_M_real_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rxmat_M_real_1_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_A_M_real1_address0, zext_ln49_fu_713_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rxmat_M_real_1_address0 <= zext_ln49_fu_713_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rxmat_M_real_1_address0 <= grp_DiagMatMul_fu_589_A_M_real1_address0;
        else 
            rxmat_M_real_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    rxmat_M_real_1_ce0_assign_proc : process(ap_CS_fsm_state4, icmp_ln46_fu_679_p2, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_A_M_real1_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            rxmat_M_real_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rxmat_M_real_1_ce0 <= grp_DiagMatMul_fu_589_A_M_real1_ce0;
        else 
            rxmat_M_real_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rxmat_M_real_1_ce1_assign_proc : process(ap_CS_fsm_state7, grp_DiagMatMul_fu_589_A_M_real1_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rxmat_M_real_1_ce1 <= grp_DiagMatMul_fu_589_A_M_real1_ce1;
        else 
            rxmat_M_real_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    rxmat_M_real_1_we0_assign_proc : process(ap_CS_fsm_state4, icmp_ln46_fu_679_p2, trunc_ln49_1_fu_691_p4, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (trunc_ln49_1_fu_691_p4 = ap_const_lv3_1) and (icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            rxmat_M_real_1_we0 <= ap_const_logic_1;
        else 
            rxmat_M_real_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rxmat_M_real_2_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_A_M_real2_address0, zext_ln49_fu_713_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rxmat_M_real_2_address0 <= zext_ln49_fu_713_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rxmat_M_real_2_address0 <= grp_DiagMatMul_fu_589_A_M_real2_address0;
        else 
            rxmat_M_real_2_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    rxmat_M_real_2_ce0_assign_proc : process(ap_CS_fsm_state4, icmp_ln46_fu_679_p2, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_A_M_real2_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            rxmat_M_real_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rxmat_M_real_2_ce0 <= grp_DiagMatMul_fu_589_A_M_real2_ce0;
        else 
            rxmat_M_real_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rxmat_M_real_2_ce1_assign_proc : process(ap_CS_fsm_state7, grp_DiagMatMul_fu_589_A_M_real2_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rxmat_M_real_2_ce1 <= grp_DiagMatMul_fu_589_A_M_real2_ce1;
        else 
            rxmat_M_real_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    rxmat_M_real_2_we0_assign_proc : process(ap_CS_fsm_state4, icmp_ln46_fu_679_p2, trunc_ln49_1_fu_691_p4, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (trunc_ln49_1_fu_691_p4 = ap_const_lv3_2) and (icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            rxmat_M_real_2_we0 <= ap_const_logic_1;
        else 
            rxmat_M_real_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rxmat_M_real_3_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_A_M_real3_address0, zext_ln49_fu_713_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rxmat_M_real_3_address0 <= zext_ln49_fu_713_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rxmat_M_real_3_address0 <= grp_DiagMatMul_fu_589_A_M_real3_address0;
        else 
            rxmat_M_real_3_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    rxmat_M_real_3_ce0_assign_proc : process(ap_CS_fsm_state4, icmp_ln46_fu_679_p2, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_A_M_real3_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            rxmat_M_real_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rxmat_M_real_3_ce0 <= grp_DiagMatMul_fu_589_A_M_real3_ce0;
        else 
            rxmat_M_real_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rxmat_M_real_3_ce1_assign_proc : process(ap_CS_fsm_state7, grp_DiagMatMul_fu_589_A_M_real3_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rxmat_M_real_3_ce1 <= grp_DiagMatMul_fu_589_A_M_real3_ce1;
        else 
            rxmat_M_real_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    rxmat_M_real_3_we0_assign_proc : process(ap_CS_fsm_state4, icmp_ln46_fu_679_p2, trunc_ln49_1_fu_691_p4, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and not((trunc_ln49_1_fu_691_p4 = ap_const_lv3_0)) and not((trunc_ln49_1_fu_691_p4 = ap_const_lv3_1)) and not((trunc_ln49_1_fu_691_p4 = ap_const_lv3_2)) and (icmp_ln46_fu_679_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            rxmat_M_real_3_we0 <= ap_const_logic_1;
        else 
            rxmat_M_real_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_6_fu_771_p3 <= (lshr_ln_fu_761_p4 & ap_const_lv8_0);
    tmp_7_fu_705_p3 <= (i_0_reg_533 & trunc_ln49_fu_701_p1);
    trunc_ln1079_fu_858_p1 <= i_2_reg_578(6 - 1 downto 0);
    trunc_ln49_1_fu_691_p4 <= j_0_reg_545(6 downto 4);
    trunc_ln49_fu_701_p1 <= j_0_reg_545(4 - 1 downto 0);
    trunc_ln60_fu_757_p1 <= i_1_reg_556(2 - 1 downto 0);
    trunc_ln681_1_fu_824_p1 <= in_stream_TDATA_int(32 - 1 downto 0);
    trunc_ln681_fu_733_p1 <= in_stream_TDATA_int(32 - 1 downto 0);
    valOut_last_V_fu_874_p2 <= "1" when (i_2_reg_578 = ap_const_lv9_FF) else "0";

    xmat_M_imag_0_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_B_M_imag_0_address0, zext_ln60_1_fu_804_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            xmat_M_imag_0_address0 <= zext_ln60_1_fu_804_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            xmat_M_imag_0_address0 <= grp_DiagMatMul_fu_589_B_M_imag_0_address0;
        else 
            xmat_M_imag_0_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    xmat_M_imag_0_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln57_fu_783_p2, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_B_M_imag_0_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            xmat_M_imag_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            xmat_M_imag_0_ce0 <= grp_DiagMatMul_fu_589_B_M_imag_0_ce0;
        else 
            xmat_M_imag_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    xmat_M_imag_0_ce1_assign_proc : process(ap_CS_fsm_state7, grp_DiagMatMul_fu_589_B_M_imag_0_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            xmat_M_imag_0_ce1 <= grp_DiagMatMul_fu_589_B_M_imag_0_ce1;
        else 
            xmat_M_imag_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    xmat_M_imag_0_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln57_fu_783_p2, trunc_ln60_reg_963, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (trunc_ln60_reg_963 = ap_const_lv2_0) and (icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            xmat_M_imag_0_we0 <= ap_const_logic_1;
        else 
            xmat_M_imag_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    xmat_M_imag_1_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_B_M_imag_1_address0, zext_ln60_1_fu_804_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            xmat_M_imag_1_address0 <= zext_ln60_1_fu_804_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            xmat_M_imag_1_address0 <= grp_DiagMatMul_fu_589_B_M_imag_1_address0;
        else 
            xmat_M_imag_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    xmat_M_imag_1_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln57_fu_783_p2, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_B_M_imag_1_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            xmat_M_imag_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            xmat_M_imag_1_ce0 <= grp_DiagMatMul_fu_589_B_M_imag_1_ce0;
        else 
            xmat_M_imag_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    xmat_M_imag_1_ce1_assign_proc : process(ap_CS_fsm_state7, grp_DiagMatMul_fu_589_B_M_imag_1_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            xmat_M_imag_1_ce1 <= grp_DiagMatMul_fu_589_B_M_imag_1_ce1;
        else 
            xmat_M_imag_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    xmat_M_imag_1_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln57_fu_783_p2, trunc_ln60_reg_963, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (trunc_ln60_reg_963 = ap_const_lv2_1) and (icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            xmat_M_imag_1_we0 <= ap_const_logic_1;
        else 
            xmat_M_imag_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    xmat_M_imag_2_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_B_M_imag_2_address0, zext_ln60_1_fu_804_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            xmat_M_imag_2_address0 <= zext_ln60_1_fu_804_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            xmat_M_imag_2_address0 <= grp_DiagMatMul_fu_589_B_M_imag_2_address0;
        else 
            xmat_M_imag_2_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    xmat_M_imag_2_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln57_fu_783_p2, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_B_M_imag_2_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            xmat_M_imag_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            xmat_M_imag_2_ce0 <= grp_DiagMatMul_fu_589_B_M_imag_2_ce0;
        else 
            xmat_M_imag_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    xmat_M_imag_2_ce1_assign_proc : process(ap_CS_fsm_state7, grp_DiagMatMul_fu_589_B_M_imag_2_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            xmat_M_imag_2_ce1 <= grp_DiagMatMul_fu_589_B_M_imag_2_ce1;
        else 
            xmat_M_imag_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    xmat_M_imag_2_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln57_fu_783_p2, trunc_ln60_reg_963, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (trunc_ln60_reg_963 = ap_const_lv2_2) and (icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            xmat_M_imag_2_we0 <= ap_const_logic_1;
        else 
            xmat_M_imag_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    xmat_M_imag_3_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_B_M_imag_3_address0, zext_ln60_1_fu_804_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            xmat_M_imag_3_address0 <= zext_ln60_1_fu_804_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            xmat_M_imag_3_address0 <= grp_DiagMatMul_fu_589_B_M_imag_3_address0;
        else 
            xmat_M_imag_3_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    xmat_M_imag_3_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln57_fu_783_p2, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_B_M_imag_3_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            xmat_M_imag_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            xmat_M_imag_3_ce0 <= grp_DiagMatMul_fu_589_B_M_imag_3_ce0;
        else 
            xmat_M_imag_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    xmat_M_imag_3_ce1_assign_proc : process(ap_CS_fsm_state7, grp_DiagMatMul_fu_589_B_M_imag_3_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            xmat_M_imag_3_ce1 <= grp_DiagMatMul_fu_589_B_M_imag_3_ce1;
        else 
            xmat_M_imag_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    xmat_M_imag_3_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln57_fu_783_p2, trunc_ln60_reg_963, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (trunc_ln60_reg_963 = ap_const_lv2_3) and (icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            xmat_M_imag_3_we0 <= ap_const_logic_1;
        else 
            xmat_M_imag_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    xmat_M_real_0_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_B_M_real_0_address0, zext_ln60_1_fu_804_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            xmat_M_real_0_address0 <= zext_ln60_1_fu_804_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            xmat_M_real_0_address0 <= grp_DiagMatMul_fu_589_B_M_real_0_address0;
        else 
            xmat_M_real_0_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    xmat_M_real_0_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln57_fu_783_p2, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_B_M_real_0_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            xmat_M_real_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            xmat_M_real_0_ce0 <= grp_DiagMatMul_fu_589_B_M_real_0_ce0;
        else 
            xmat_M_real_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    xmat_M_real_0_ce1_assign_proc : process(ap_CS_fsm_state7, grp_DiagMatMul_fu_589_B_M_real_0_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            xmat_M_real_0_ce1 <= grp_DiagMatMul_fu_589_B_M_real_0_ce1;
        else 
            xmat_M_real_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    xmat_M_real_0_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln57_fu_783_p2, trunc_ln60_reg_963, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (trunc_ln60_reg_963 = ap_const_lv2_0) and (icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            xmat_M_real_0_we0 <= ap_const_logic_1;
        else 
            xmat_M_real_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    xmat_M_real_1_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_B_M_real_1_address0, zext_ln60_1_fu_804_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            xmat_M_real_1_address0 <= zext_ln60_1_fu_804_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            xmat_M_real_1_address0 <= grp_DiagMatMul_fu_589_B_M_real_1_address0;
        else 
            xmat_M_real_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    xmat_M_real_1_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln57_fu_783_p2, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_B_M_real_1_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            xmat_M_real_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            xmat_M_real_1_ce0 <= grp_DiagMatMul_fu_589_B_M_real_1_ce0;
        else 
            xmat_M_real_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    xmat_M_real_1_ce1_assign_proc : process(ap_CS_fsm_state7, grp_DiagMatMul_fu_589_B_M_real_1_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            xmat_M_real_1_ce1 <= grp_DiagMatMul_fu_589_B_M_real_1_ce1;
        else 
            xmat_M_real_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    xmat_M_real_1_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln57_fu_783_p2, trunc_ln60_reg_963, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (trunc_ln60_reg_963 = ap_const_lv2_1) and (icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            xmat_M_real_1_we0 <= ap_const_logic_1;
        else 
            xmat_M_real_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    xmat_M_real_2_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_B_M_real_2_address0, zext_ln60_1_fu_804_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            xmat_M_real_2_address0 <= zext_ln60_1_fu_804_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            xmat_M_real_2_address0 <= grp_DiagMatMul_fu_589_B_M_real_2_address0;
        else 
            xmat_M_real_2_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    xmat_M_real_2_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln57_fu_783_p2, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_B_M_real_2_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            xmat_M_real_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            xmat_M_real_2_ce0 <= grp_DiagMatMul_fu_589_B_M_real_2_ce0;
        else 
            xmat_M_real_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    xmat_M_real_2_ce1_assign_proc : process(ap_CS_fsm_state7, grp_DiagMatMul_fu_589_B_M_real_2_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            xmat_M_real_2_ce1 <= grp_DiagMatMul_fu_589_B_M_real_2_ce1;
        else 
            xmat_M_real_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    xmat_M_real_2_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln57_fu_783_p2, trunc_ln60_reg_963, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (trunc_ln60_reg_963 = ap_const_lv2_2) and (icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            xmat_M_real_2_we0 <= ap_const_logic_1;
        else 
            xmat_M_real_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    xmat_M_real_3_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_B_M_real_3_address0, zext_ln60_1_fu_804_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            xmat_M_real_3_address0 <= zext_ln60_1_fu_804_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            xmat_M_real_3_address0 <= grp_DiagMatMul_fu_589_B_M_real_3_address0;
        else 
            xmat_M_real_3_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    xmat_M_real_3_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln57_fu_783_p2, ap_CS_fsm_state7, grp_DiagMatMul_fu_589_B_M_real_3_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            xmat_M_real_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            xmat_M_real_3_ce0 <= grp_DiagMatMul_fu_589_B_M_real_3_ce0;
        else 
            xmat_M_real_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    xmat_M_real_3_ce1_assign_proc : process(ap_CS_fsm_state7, grp_DiagMatMul_fu_589_B_M_real_3_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            xmat_M_real_3_ce1 <= grp_DiagMatMul_fu_589_B_M_real_3_ce1;
        else 
            xmat_M_real_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    xmat_M_real_3_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln57_fu_783_p2, trunc_ln60_reg_963, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (trunc_ln60_reg_963 = ap_const_lv2_3) and (icmp_ln57_fu_783_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            xmat_M_real_3_we0 <= ap_const_logic_1;
        else 
            xmat_M_real_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln1079_1_fu_880_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1_reg_989),32));
    zext_ln1079_fu_862_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1079_fu_858_p1),64));
    zext_ln49_fu_713_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_705_p3),64));
    zext_ln57_fu_779_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_771_p3),14));
    zext_ln60_1_fu_804_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln60_fu_799_p2),64));
    zext_ln60_fu_795_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_1_reg_567),14));
end behav;
