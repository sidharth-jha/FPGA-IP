// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _operator_mul_float_HH_
#define _operator_mul_float_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "matmul_fsub_32ns_bkb.h"
#include "matmul_fadd_32ns_cud.h"
#include "matmul_fmul_32ns_dEe.h"

namespace ap_rtl {

struct operator_mul_float : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<32> > p_x_M_real_read;
    sc_in< sc_lv<32> > p_x_M_imag_read;
    sc_in< sc_lv<32> > p_y_M_real_read;
    sc_in< sc_lv<32> > p_y_M_imag_read;
    sc_out< sc_lv<32> > ap_return_0;
    sc_out< sc_lv<32> > ap_return_1;
    sc_in< sc_logic > ap_ce;


    // Module declarations
    operator_mul_float(sc_module_name name);
    SC_HAS_PROCESS(operator_mul_float);

    ~operator_mul_float();

    sc_trace_file* mVcdFile;

    matmul_fsub_32ns_bkb<1,4,32,32,32>* matmul_fsub_32ns_bkb_U1;
    matmul_fadd_32ns_cud<1,4,32,32,32>* matmul_fadd_32ns_cud_U2;
    matmul_fmul_32ns_dEe<1,2,32,32,32>* matmul_fmul_32ns_dEe_U3;
    matmul_fmul_32ns_dEe<1,2,32,32,32>* matmul_fmul_32ns_dEe_U4;
    matmul_fmul_32ns_dEe<1,2,32,32,32>* matmul_fmul_32ns_dEe_U5;
    matmul_fmul_32ns_dEe<1,2,32,32,32>* matmul_fmul_32ns_dEe_U6;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter5;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<32> > grp_fu_44_p2;
    sc_signal< sc_lv<32> > tmp_i_reg_104;
    sc_signal< sc_lv<32> > grp_fu_50_p2;
    sc_signal< sc_lv<32> > tmp_2_i_reg_109;
    sc_signal< sc_lv<32> > grp_fu_56_p2;
    sc_signal< sc_lv<32> > tmp_4_i_reg_114;
    sc_signal< sc_lv<32> > grp_fu_62_p2;
    sc_signal< sc_lv<32> > tmp_5_i_reg_119;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<32> > grp_fu_36_p2;
    sc_signal< sc_lv<32> > grp_fu_40_p2;
    sc_signal< sc_logic > grp_fu_36_ce;
    sc_signal< sc_logic > grp_fu_40_ce;
    sc_signal< sc_logic > grp_fu_44_ce;
    sc_signal< sc_logic > grp_fu_50_ce;
    sc_signal< sc_logic > grp_fu_56_ce;
    sc_signal< sc_logic > grp_fu_62_ce;
    sc_signal< sc_logic > ap_ce_reg;
    sc_signal< sc_lv<32> > p_x_M_real_read_int_reg;
    sc_signal< sc_lv<32> > p_x_M_imag_read_int_reg;
    sc_signal< sc_lv<32> > p_y_M_real_read_int_reg;
    sc_signal< sc_lv<32> > p_y_M_imag_read_int_reg;
    sc_signal< sc_lv<32> > ap_return_0_int_reg;
    sc_signal< sc_lv<32> > ap_return_1_int_reg;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_block_state4_pp0_stage0_iter3();
    void thread_ap_block_state5_pp0_stage0_iter4();
    void thread_ap_block_state6_pp0_stage0_iter5();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_grp_fu_36_ce();
    void thread_grp_fu_40_ce();
    void thread_grp_fu_44_ce();
    void thread_grp_fu_50_ce();
    void thread_grp_fu_56_ce();
    void thread_grp_fu_62_ce();
};

}

using namespace ap_rtl;

#endif
