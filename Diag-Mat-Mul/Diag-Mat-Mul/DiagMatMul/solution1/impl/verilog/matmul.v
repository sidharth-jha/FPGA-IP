// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matmul,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.419000,HLS_SYN_LAT=1302,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=10,HLS_SYN_FF=5399,HLS_SYN_LUT=4816,HLS_VERSION=2020_1}" *)

module matmul (
        ap_clk,
        ap_rst_n,
        in_stream_TDATA,
        in_stream_TVALID,
        in_stream_TREADY,
        in_stream_TKEEP,
        in_stream_TSTRB,
        in_stream_TLAST,
        out_stream_TDATA,
        out_stream_TVALID,
        out_stream_TREADY,
        out_stream_TKEEP,
        out_stream_TSTRB,
        out_stream_TLAST,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_pp0_stage0 = 10'd256;
parameter    ap_ST_fsm_state12 = 10'd512;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] in_stream_TDATA;
input   in_stream_TVALID;
output   in_stream_TREADY;
input  [3:0] in_stream_TKEEP;
input  [3:0] in_stream_TSTRB;
input  [0:0] in_stream_TLAST;
output  [31:0] out_stream_TDATA;
output   out_stream_TVALID;
input   out_stream_TREADY;
output  [3:0] out_stream_TKEEP;
output  [3:0] out_stream_TSTRB;
output  [0:0] out_stream_TLAST;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

reg in_stream_TREADY;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg    in_stream_TDATA_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln34_fu_782_p2;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln42_fu_850_p2;
reg    out_stream_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln51_reg_970;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln51_reg_970_pp0_iter1_reg;
reg   [4:0] i_2_reg_714;
wire   [4:0] i_fu_772_p2;
reg   [4:0] i_reg_933;
wire    ap_CS_fsm_state2;
wire   [3:0] trunc_ln37_fu_778_p1;
reg   [3:0] trunc_ln37_reg_938;
wire   [0:0] icmp_ln33_fu_766_p2;
wire   [4:0] j_fu_788_p2;
reg   [4:0] j_reg_945;
reg    ap_block_state3;
wire   [4:0] i_4_fu_840_p2;
reg   [4:0] i_4_reg_953;
wire    ap_CS_fsm_state5;
wire   [3:0] trunc_ln45_fu_846_p1;
reg   [3:0] trunc_ln45_reg_958;
wire   [0:0] icmp_ln41_fu_834_p2;
wire   [4:0] j_2_fu_856_p2;
reg   [4:0] j_2_reg_965;
reg    ap_block_state6;
wire   [0:0] icmp_ln51_fu_902_p2;
wire    ap_block_state9_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
reg    ap_block_state10_io;
wire    ap_block_state11_pp0_stage0_iter2;
reg    ap_block_state11_io;
reg    ap_block_pp0_stage0_11001;
wire   [4:0] i_3_fu_908_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] valOut_last_V_fu_919_p2;
reg   [0:0] valOut_last_V_reg_984;
wire    ap_CS_fsm_state8;
wire    grp_DiagMatMul_fu_725_ap_ready;
wire    grp_DiagMatMul_fu_725_ap_done;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state9;
reg   [3:0] A_0_address0;
reg    A_0_ce0;
reg    A_0_we0;
wire   [31:0] A_0_q0;
reg    A_0_ce1;
wire   [31:0] A_0_q1;
reg   [3:0] A_1_address0;
reg    A_1_ce0;
reg    A_1_we0;
wire   [31:0] A_1_q0;
reg    A_1_ce1;
wire   [31:0] A_1_q1;
reg   [3:0] A_2_address0;
reg    A_2_ce0;
reg    A_2_we0;
wire   [31:0] A_2_q0;
reg    A_2_ce1;
wire   [31:0] A_2_q1;
reg   [3:0] A_3_address0;
reg    A_3_ce0;
reg    A_3_we0;
wire   [31:0] A_3_q0;
reg    A_3_ce1;
wire   [31:0] A_3_q1;
reg   [3:0] A_4_address0;
reg    A_4_ce0;
reg    A_4_we0;
wire   [31:0] A_4_q0;
reg    A_4_ce1;
wire   [31:0] A_4_q1;
reg   [3:0] A_5_address0;
reg    A_5_ce0;
reg    A_5_we0;
wire   [31:0] A_5_q0;
reg    A_5_ce1;
wire   [31:0] A_5_q1;
reg   [3:0] A_6_address0;
reg    A_6_ce0;
reg    A_6_we0;
wire   [31:0] A_6_q0;
reg    A_6_ce1;
wire   [31:0] A_6_q1;
reg   [3:0] A_7_address0;
reg    A_7_ce0;
reg    A_7_we0;
wire   [31:0] A_7_q0;
reg    A_7_ce1;
wire   [31:0] A_7_q1;
reg   [3:0] A_8_address0;
reg    A_8_ce0;
reg    A_8_we0;
wire   [31:0] A_8_q0;
reg    A_8_ce1;
wire   [31:0] A_8_q1;
reg   [3:0] A_9_address0;
reg    A_9_ce0;
reg    A_9_we0;
wire   [31:0] A_9_q0;
reg    A_9_ce1;
wire   [31:0] A_9_q1;
reg   [3:0] A_10_address0;
reg    A_10_ce0;
reg    A_10_we0;
wire   [31:0] A_10_q0;
reg    A_10_ce1;
wire   [31:0] A_10_q1;
reg   [3:0] A_11_address0;
reg    A_11_ce0;
reg    A_11_we0;
wire   [31:0] A_11_q0;
reg    A_11_ce1;
wire   [31:0] A_11_q1;
reg   [3:0] A_12_address0;
reg    A_12_ce0;
reg    A_12_we0;
wire   [31:0] A_12_q0;
reg    A_12_ce1;
wire   [31:0] A_12_q1;
reg   [3:0] A_13_address0;
reg    A_13_ce0;
reg    A_13_we0;
wire   [31:0] A_13_q0;
reg    A_13_ce1;
wire   [31:0] A_13_q1;
reg   [3:0] A_14_address0;
reg    A_14_ce0;
reg    A_14_we0;
wire   [31:0] A_14_q0;
reg    A_14_ce1;
wire   [31:0] A_14_q1;
reg   [3:0] A_15_address0;
reg    A_15_ce0;
reg    A_15_we0;
wire   [31:0] A_15_q0;
reg    A_15_ce1;
wire   [31:0] A_15_q1;
reg   [3:0] B_0_address0;
reg    B_0_ce0;
reg    B_0_we0;
wire   [31:0] B_0_q0;
reg   [3:0] B_1_address0;
reg    B_1_ce0;
reg    B_1_we0;
wire   [31:0] B_1_q0;
reg   [3:0] B_2_address0;
reg    B_2_ce0;
reg    B_2_we0;
wire   [31:0] B_2_q0;
reg   [3:0] B_3_address0;
reg    B_3_ce0;
reg    B_3_we0;
wire   [31:0] B_3_q0;
reg   [3:0] B_4_address0;
reg    B_4_ce0;
reg    B_4_we0;
wire   [31:0] B_4_q0;
reg   [3:0] B_5_address0;
reg    B_5_ce0;
reg    B_5_we0;
wire   [31:0] B_5_q0;
reg   [3:0] B_6_address0;
reg    B_6_ce0;
reg    B_6_we0;
wire   [31:0] B_6_q0;
reg   [3:0] B_7_address0;
reg    B_7_ce0;
reg    B_7_we0;
wire   [31:0] B_7_q0;
reg   [3:0] B_8_address0;
reg    B_8_ce0;
reg    B_8_we0;
wire   [31:0] B_8_q0;
reg   [3:0] B_9_address0;
reg    B_9_ce0;
reg    B_9_we0;
wire   [31:0] B_9_q0;
reg   [3:0] B_10_address0;
reg    B_10_ce0;
reg    B_10_we0;
wire   [31:0] B_10_q0;
reg   [3:0] B_11_address0;
reg    B_11_ce0;
reg    B_11_we0;
wire   [31:0] B_11_q0;
reg   [3:0] B_12_address0;
reg    B_12_ce0;
reg    B_12_we0;
wire   [31:0] B_12_q0;
reg   [3:0] B_13_address0;
reg    B_13_ce0;
reg    B_13_we0;
wire   [31:0] B_13_q0;
reg   [3:0] B_14_address0;
reg    B_14_ce0;
reg    B_14_we0;
wire   [31:0] B_14_q0;
reg   [3:0] B_15_address0;
reg    B_15_ce0;
reg    B_15_we0;
wire   [31:0] B_15_q0;
reg   [3:0] mulOut_address0;
reg    mulOut_ce0;
reg    mulOut_we0;
wire   [31:0] mulOut_q0;
wire    grp_DiagMatMul_fu_725_ap_start;
wire    grp_DiagMatMul_fu_725_ap_idle;
wire   [3:0] grp_DiagMatMul_fu_725_A_0_address0;
wire    grp_DiagMatMul_fu_725_A_0_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_A_0_address1;
wire    grp_DiagMatMul_fu_725_A_0_ce1;
wire   [3:0] grp_DiagMatMul_fu_725_A_1_address0;
wire    grp_DiagMatMul_fu_725_A_1_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_A_1_address1;
wire    grp_DiagMatMul_fu_725_A_1_ce1;
wire   [3:0] grp_DiagMatMul_fu_725_A_2_address0;
wire    grp_DiagMatMul_fu_725_A_2_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_A_2_address1;
wire    grp_DiagMatMul_fu_725_A_2_ce1;
wire   [3:0] grp_DiagMatMul_fu_725_A_3_address0;
wire    grp_DiagMatMul_fu_725_A_3_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_A_3_address1;
wire    grp_DiagMatMul_fu_725_A_3_ce1;
wire   [3:0] grp_DiagMatMul_fu_725_A_4_address0;
wire    grp_DiagMatMul_fu_725_A_4_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_A_4_address1;
wire    grp_DiagMatMul_fu_725_A_4_ce1;
wire   [3:0] grp_DiagMatMul_fu_725_A_5_address0;
wire    grp_DiagMatMul_fu_725_A_5_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_A_5_address1;
wire    grp_DiagMatMul_fu_725_A_5_ce1;
wire   [3:0] grp_DiagMatMul_fu_725_A_6_address0;
wire    grp_DiagMatMul_fu_725_A_6_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_A_6_address1;
wire    grp_DiagMatMul_fu_725_A_6_ce1;
wire   [3:0] grp_DiagMatMul_fu_725_A_7_address0;
wire    grp_DiagMatMul_fu_725_A_7_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_A_7_address1;
wire    grp_DiagMatMul_fu_725_A_7_ce1;
wire   [3:0] grp_DiagMatMul_fu_725_A_8_address0;
wire    grp_DiagMatMul_fu_725_A_8_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_A_8_address1;
wire    grp_DiagMatMul_fu_725_A_8_ce1;
wire   [3:0] grp_DiagMatMul_fu_725_A_9_address0;
wire    grp_DiagMatMul_fu_725_A_9_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_A_9_address1;
wire    grp_DiagMatMul_fu_725_A_9_ce1;
wire   [3:0] grp_DiagMatMul_fu_725_A_10_address0;
wire    grp_DiagMatMul_fu_725_A_10_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_A_10_address1;
wire    grp_DiagMatMul_fu_725_A_10_ce1;
wire   [3:0] grp_DiagMatMul_fu_725_A_11_address0;
wire    grp_DiagMatMul_fu_725_A_11_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_A_11_address1;
wire    grp_DiagMatMul_fu_725_A_11_ce1;
wire   [3:0] grp_DiagMatMul_fu_725_A_12_address0;
wire    grp_DiagMatMul_fu_725_A_12_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_A_12_address1;
wire    grp_DiagMatMul_fu_725_A_12_ce1;
wire   [3:0] grp_DiagMatMul_fu_725_A_13_address0;
wire    grp_DiagMatMul_fu_725_A_13_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_A_13_address1;
wire    grp_DiagMatMul_fu_725_A_13_ce1;
wire   [3:0] grp_DiagMatMul_fu_725_A_14_address0;
wire    grp_DiagMatMul_fu_725_A_14_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_A_14_address1;
wire    grp_DiagMatMul_fu_725_A_14_ce1;
wire   [3:0] grp_DiagMatMul_fu_725_A_15_address0;
wire    grp_DiagMatMul_fu_725_A_15_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_A_15_address1;
wire    grp_DiagMatMul_fu_725_A_15_ce1;
wire   [3:0] grp_DiagMatMul_fu_725_B_0_address0;
wire    grp_DiagMatMul_fu_725_B_0_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_B_1_address0;
wire    grp_DiagMatMul_fu_725_B_1_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_B_2_address0;
wire    grp_DiagMatMul_fu_725_B_2_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_B_3_address0;
wire    grp_DiagMatMul_fu_725_B_3_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_B_4_address0;
wire    grp_DiagMatMul_fu_725_B_4_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_B_5_address0;
wire    grp_DiagMatMul_fu_725_B_5_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_B_6_address0;
wire    grp_DiagMatMul_fu_725_B_6_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_B_7_address0;
wire    grp_DiagMatMul_fu_725_B_7_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_B_8_address0;
wire    grp_DiagMatMul_fu_725_B_8_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_B_9_address0;
wire    grp_DiagMatMul_fu_725_B_9_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_B_10_address0;
wire    grp_DiagMatMul_fu_725_B_10_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_B_11_address0;
wire    grp_DiagMatMul_fu_725_B_11_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_B_12_address0;
wire    grp_DiagMatMul_fu_725_B_12_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_B_13_address0;
wire    grp_DiagMatMul_fu_725_B_13_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_B_14_address0;
wire    grp_DiagMatMul_fu_725_B_14_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_B_15_address0;
wire    grp_DiagMatMul_fu_725_B_15_ce0;
wire   [3:0] grp_DiagMatMul_fu_725_C_address0;
wire    grp_DiagMatMul_fu_725_C_ce0;
wire    grp_DiagMatMul_fu_725_C_we0;
wire   [31:0] grp_DiagMatMul_fu_725_C_d0;
reg   [4:0] i_0_reg_670;
reg   [4:0] j_0_reg_681;
wire    ap_CS_fsm_state4;
reg   [4:0] i_1_reg_692;
reg   [4:0] j_1_reg_703;
wire    ap_CS_fsm_state7;
reg    grp_DiagMatMul_fu_725_ap_start_reg;
wire   [63:0] zext_ln37_fu_814_p1;
wire   [63:0] zext_ln45_fu_882_p1;
wire   [63:0] zext_ln54_fu_914_p1;
wire    ap_block_pp0_stage0_01001;
wire   [31:0] bitcast_ln37_fu_794_p1;
wire   [31:0] bitcast_ln45_fu_862_p1;
wire    ap_CS_fsm_state12;
wire    regslice_both_out_stream_V_data_V_U_apdone_blk;
reg   [9:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_in_stream_V_data_V_U_apdone_blk;
wire   [31:0] in_stream_TDATA_int;
wire    in_stream_TVALID_int;
reg    in_stream_TREADY_int;
wire    regslice_both_in_stream_V_data_V_U_ack_in;
wire    regslice_both_in_stream_V_keep_V_U_apdone_blk;
wire   [3:0] in_stream_TKEEP_int;
wire    regslice_both_in_stream_V_keep_V_U_vld_out;
wire    regslice_both_in_stream_V_keep_V_U_ack_in;
wire    regslice_both_in_stream_V_strb_V_U_apdone_blk;
wire   [3:0] in_stream_TSTRB_int;
wire    regslice_both_in_stream_V_strb_V_U_vld_out;
wire    regslice_both_in_stream_V_strb_V_U_ack_in;
wire    regslice_both_in_stream_V_last_V_U_apdone_blk;
wire   [0:0] in_stream_TLAST_int;
wire    regslice_both_in_stream_V_last_V_U_vld_out;
wire    regslice_both_in_stream_V_last_V_U_ack_in;
wire   [31:0] out_stream_TDATA_int;
reg    out_stream_TVALID_int;
wire    out_stream_TREADY_int;
wire    regslice_both_out_stream_V_data_V_U_vld_out;
wire    regslice_both_out_stream_V_keep_V_U_apdone_blk;
wire    regslice_both_out_stream_V_keep_V_U_ack_in_dummy;
wire    regslice_both_out_stream_V_keep_V_U_vld_out;
wire    regslice_both_out_stream_V_strb_V_U_apdone_blk;
wire    regslice_both_out_stream_V_strb_V_U_ack_in_dummy;
wire    regslice_both_out_stream_V_strb_V_U_vld_out;
wire    regslice_both_out_stream_V_last_V_U_apdone_blk;
wire    regslice_both_out_stream_V_last_V_U_ack_in_dummy;
wire    regslice_both_out_stream_V_last_V_U_vld_out;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 grp_DiagMatMul_fu_725_ap_start_reg = 1'b0;
end

matmul_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
matmul_control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

matmul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_0_address0),
    .ce0(A_0_ce0),
    .we0(A_0_we0),
    .d0(bitcast_ln37_fu_794_p1),
    .q0(A_0_q0),
    .address1(grp_DiagMatMul_fu_725_A_0_address1),
    .ce1(A_0_ce1),
    .q1(A_0_q1)
);

matmul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_1_address0),
    .ce0(A_1_ce0),
    .we0(A_1_we0),
    .d0(bitcast_ln37_fu_794_p1),
    .q0(A_1_q0),
    .address1(grp_DiagMatMul_fu_725_A_1_address1),
    .ce1(A_1_ce1),
    .q1(A_1_q1)
);

matmul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_2_address0),
    .ce0(A_2_ce0),
    .we0(A_2_we0),
    .d0(bitcast_ln37_fu_794_p1),
    .q0(A_2_q0),
    .address1(grp_DiagMatMul_fu_725_A_2_address1),
    .ce1(A_2_ce1),
    .q1(A_2_q1)
);

matmul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_3_address0),
    .ce0(A_3_ce0),
    .we0(A_3_we0),
    .d0(bitcast_ln37_fu_794_p1),
    .q0(A_3_q0),
    .address1(grp_DiagMatMul_fu_725_A_3_address1),
    .ce1(A_3_ce1),
    .q1(A_3_q1)
);

matmul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_4_address0),
    .ce0(A_4_ce0),
    .we0(A_4_we0),
    .d0(bitcast_ln37_fu_794_p1),
    .q0(A_4_q0),
    .address1(grp_DiagMatMul_fu_725_A_4_address1),
    .ce1(A_4_ce1),
    .q1(A_4_q1)
);

matmul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_5_address0),
    .ce0(A_5_ce0),
    .we0(A_5_we0),
    .d0(bitcast_ln37_fu_794_p1),
    .q0(A_5_q0),
    .address1(grp_DiagMatMul_fu_725_A_5_address1),
    .ce1(A_5_ce1),
    .q1(A_5_q1)
);

matmul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_6_address0),
    .ce0(A_6_ce0),
    .we0(A_6_we0),
    .d0(bitcast_ln37_fu_794_p1),
    .q0(A_6_q0),
    .address1(grp_DiagMatMul_fu_725_A_6_address1),
    .ce1(A_6_ce1),
    .q1(A_6_q1)
);

matmul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_7_address0),
    .ce0(A_7_ce0),
    .we0(A_7_we0),
    .d0(bitcast_ln37_fu_794_p1),
    .q0(A_7_q0),
    .address1(grp_DiagMatMul_fu_725_A_7_address1),
    .ce1(A_7_ce1),
    .q1(A_7_q1)
);

matmul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_8_address0),
    .ce0(A_8_ce0),
    .we0(A_8_we0),
    .d0(bitcast_ln37_fu_794_p1),
    .q0(A_8_q0),
    .address1(grp_DiagMatMul_fu_725_A_8_address1),
    .ce1(A_8_ce1),
    .q1(A_8_q1)
);

matmul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_9_address0),
    .ce0(A_9_ce0),
    .we0(A_9_we0),
    .d0(bitcast_ln37_fu_794_p1),
    .q0(A_9_q0),
    .address1(grp_DiagMatMul_fu_725_A_9_address1),
    .ce1(A_9_ce1),
    .q1(A_9_q1)
);

matmul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_10_address0),
    .ce0(A_10_ce0),
    .we0(A_10_we0),
    .d0(bitcast_ln37_fu_794_p1),
    .q0(A_10_q0),
    .address1(grp_DiagMatMul_fu_725_A_10_address1),
    .ce1(A_10_ce1),
    .q1(A_10_q1)
);

matmul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_11_address0),
    .ce0(A_11_ce0),
    .we0(A_11_we0),
    .d0(bitcast_ln37_fu_794_p1),
    .q0(A_11_q0),
    .address1(grp_DiagMatMul_fu_725_A_11_address1),
    .ce1(A_11_ce1),
    .q1(A_11_q1)
);

matmul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_12_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_12_address0),
    .ce0(A_12_ce0),
    .we0(A_12_we0),
    .d0(bitcast_ln37_fu_794_p1),
    .q0(A_12_q0),
    .address1(grp_DiagMatMul_fu_725_A_12_address1),
    .ce1(A_12_ce1),
    .q1(A_12_q1)
);

matmul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_13_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_13_address0),
    .ce0(A_13_ce0),
    .we0(A_13_we0),
    .d0(bitcast_ln37_fu_794_p1),
    .q0(A_13_q0),
    .address1(grp_DiagMatMul_fu_725_A_13_address1),
    .ce1(A_13_ce1),
    .q1(A_13_q1)
);

matmul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_14_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_14_address0),
    .ce0(A_14_ce0),
    .we0(A_14_we0),
    .d0(bitcast_ln37_fu_794_p1),
    .q0(A_14_q0),
    .address1(grp_DiagMatMul_fu_725_A_14_address1),
    .ce1(A_14_ce1),
    .q1(A_14_q1)
);

matmul_A_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_15_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_15_address0),
    .ce0(A_15_ce0),
    .we0(A_15_we0),
    .d0(bitcast_ln37_fu_794_p1),
    .q0(A_15_q0),
    .address1(grp_DiagMatMul_fu_725_A_15_address1),
    .ce1(A_15_ce1),
    .q1(A_15_q1)
);

matmul_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_0_address0),
    .ce0(B_0_ce0),
    .we0(B_0_we0),
    .d0(bitcast_ln45_fu_862_p1),
    .q0(B_0_q0)
);

matmul_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_1_address0),
    .ce0(B_1_ce0),
    .we0(B_1_we0),
    .d0(bitcast_ln45_fu_862_p1),
    .q0(B_1_q0)
);

matmul_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_2_address0),
    .ce0(B_2_ce0),
    .we0(B_2_we0),
    .d0(bitcast_ln45_fu_862_p1),
    .q0(B_2_q0)
);

matmul_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_3_address0),
    .ce0(B_3_ce0),
    .we0(B_3_we0),
    .d0(bitcast_ln45_fu_862_p1),
    .q0(B_3_q0)
);

matmul_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_4_address0),
    .ce0(B_4_ce0),
    .we0(B_4_we0),
    .d0(bitcast_ln45_fu_862_p1),
    .q0(B_4_q0)
);

matmul_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_5_address0),
    .ce0(B_5_ce0),
    .we0(B_5_we0),
    .d0(bitcast_ln45_fu_862_p1),
    .q0(B_5_q0)
);

matmul_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_6_address0),
    .ce0(B_6_ce0),
    .we0(B_6_we0),
    .d0(bitcast_ln45_fu_862_p1),
    .q0(B_6_q0)
);

matmul_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_7_address0),
    .ce0(B_7_ce0),
    .we0(B_7_we0),
    .d0(bitcast_ln45_fu_862_p1),
    .q0(B_7_q0)
);

matmul_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_8_address0),
    .ce0(B_8_ce0),
    .we0(B_8_we0),
    .d0(bitcast_ln45_fu_862_p1),
    .q0(B_8_q0)
);

matmul_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_9_address0),
    .ce0(B_9_ce0),
    .we0(B_9_we0),
    .d0(bitcast_ln45_fu_862_p1),
    .q0(B_9_q0)
);

matmul_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_10_address0),
    .ce0(B_10_ce0),
    .we0(B_10_we0),
    .d0(bitcast_ln45_fu_862_p1),
    .q0(B_10_q0)
);

matmul_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_11_address0),
    .ce0(B_11_ce0),
    .we0(B_11_we0),
    .d0(bitcast_ln45_fu_862_p1),
    .q0(B_11_q0)
);

matmul_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_12_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_12_address0),
    .ce0(B_12_ce0),
    .we0(B_12_we0),
    .d0(bitcast_ln45_fu_862_p1),
    .q0(B_12_q0)
);

matmul_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_13_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_13_address0),
    .ce0(B_13_ce0),
    .we0(B_13_we0),
    .d0(bitcast_ln45_fu_862_p1),
    .q0(B_13_q0)
);

matmul_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_14_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_14_address0),
    .ce0(B_14_ce0),
    .we0(B_14_we0),
    .d0(bitcast_ln45_fu_862_p1),
    .q0(B_14_q0)
);

matmul_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_15_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_15_address0),
    .ce0(B_15_ce0),
    .we0(B_15_we0),
    .d0(bitcast_ln45_fu_862_p1),
    .q0(B_15_q0)
);

matmul_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
mulOut_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(mulOut_address0),
    .ce0(mulOut_ce0),
    .we0(mulOut_we0),
    .d0(grp_DiagMatMul_fu_725_C_d0),
    .q0(mulOut_q0)
);

DiagMatMul grp_DiagMatMul_fu_725(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_DiagMatMul_fu_725_ap_start),
    .ap_done(grp_DiagMatMul_fu_725_ap_done),
    .ap_idle(grp_DiagMatMul_fu_725_ap_idle),
    .ap_ready(grp_DiagMatMul_fu_725_ap_ready),
    .A_0_address0(grp_DiagMatMul_fu_725_A_0_address0),
    .A_0_ce0(grp_DiagMatMul_fu_725_A_0_ce0),
    .A_0_q0(A_0_q0),
    .A_0_address1(grp_DiagMatMul_fu_725_A_0_address1),
    .A_0_ce1(grp_DiagMatMul_fu_725_A_0_ce1),
    .A_0_q1(A_0_q1),
    .A_1_address0(grp_DiagMatMul_fu_725_A_1_address0),
    .A_1_ce0(grp_DiagMatMul_fu_725_A_1_ce0),
    .A_1_q0(A_1_q0),
    .A_1_address1(grp_DiagMatMul_fu_725_A_1_address1),
    .A_1_ce1(grp_DiagMatMul_fu_725_A_1_ce1),
    .A_1_q1(A_1_q1),
    .A_2_address0(grp_DiagMatMul_fu_725_A_2_address0),
    .A_2_ce0(grp_DiagMatMul_fu_725_A_2_ce0),
    .A_2_q0(A_2_q0),
    .A_2_address1(grp_DiagMatMul_fu_725_A_2_address1),
    .A_2_ce1(grp_DiagMatMul_fu_725_A_2_ce1),
    .A_2_q1(A_2_q1),
    .A_3_address0(grp_DiagMatMul_fu_725_A_3_address0),
    .A_3_ce0(grp_DiagMatMul_fu_725_A_3_ce0),
    .A_3_q0(A_3_q0),
    .A_3_address1(grp_DiagMatMul_fu_725_A_3_address1),
    .A_3_ce1(grp_DiagMatMul_fu_725_A_3_ce1),
    .A_3_q1(A_3_q1),
    .A_4_address0(grp_DiagMatMul_fu_725_A_4_address0),
    .A_4_ce0(grp_DiagMatMul_fu_725_A_4_ce0),
    .A_4_q0(A_4_q0),
    .A_4_address1(grp_DiagMatMul_fu_725_A_4_address1),
    .A_4_ce1(grp_DiagMatMul_fu_725_A_4_ce1),
    .A_4_q1(A_4_q1),
    .A_5_address0(grp_DiagMatMul_fu_725_A_5_address0),
    .A_5_ce0(grp_DiagMatMul_fu_725_A_5_ce0),
    .A_5_q0(A_5_q0),
    .A_5_address1(grp_DiagMatMul_fu_725_A_5_address1),
    .A_5_ce1(grp_DiagMatMul_fu_725_A_5_ce1),
    .A_5_q1(A_5_q1),
    .A_6_address0(grp_DiagMatMul_fu_725_A_6_address0),
    .A_6_ce0(grp_DiagMatMul_fu_725_A_6_ce0),
    .A_6_q0(A_6_q0),
    .A_6_address1(grp_DiagMatMul_fu_725_A_6_address1),
    .A_6_ce1(grp_DiagMatMul_fu_725_A_6_ce1),
    .A_6_q1(A_6_q1),
    .A_7_address0(grp_DiagMatMul_fu_725_A_7_address0),
    .A_7_ce0(grp_DiagMatMul_fu_725_A_7_ce0),
    .A_7_q0(A_7_q0),
    .A_7_address1(grp_DiagMatMul_fu_725_A_7_address1),
    .A_7_ce1(grp_DiagMatMul_fu_725_A_7_ce1),
    .A_7_q1(A_7_q1),
    .A_8_address0(grp_DiagMatMul_fu_725_A_8_address0),
    .A_8_ce0(grp_DiagMatMul_fu_725_A_8_ce0),
    .A_8_q0(A_8_q0),
    .A_8_address1(grp_DiagMatMul_fu_725_A_8_address1),
    .A_8_ce1(grp_DiagMatMul_fu_725_A_8_ce1),
    .A_8_q1(A_8_q1),
    .A_9_address0(grp_DiagMatMul_fu_725_A_9_address0),
    .A_9_ce0(grp_DiagMatMul_fu_725_A_9_ce0),
    .A_9_q0(A_9_q0),
    .A_9_address1(grp_DiagMatMul_fu_725_A_9_address1),
    .A_9_ce1(grp_DiagMatMul_fu_725_A_9_ce1),
    .A_9_q1(A_9_q1),
    .A_10_address0(grp_DiagMatMul_fu_725_A_10_address0),
    .A_10_ce0(grp_DiagMatMul_fu_725_A_10_ce0),
    .A_10_q0(A_10_q0),
    .A_10_address1(grp_DiagMatMul_fu_725_A_10_address1),
    .A_10_ce1(grp_DiagMatMul_fu_725_A_10_ce1),
    .A_10_q1(A_10_q1),
    .A_11_address0(grp_DiagMatMul_fu_725_A_11_address0),
    .A_11_ce0(grp_DiagMatMul_fu_725_A_11_ce0),
    .A_11_q0(A_11_q0),
    .A_11_address1(grp_DiagMatMul_fu_725_A_11_address1),
    .A_11_ce1(grp_DiagMatMul_fu_725_A_11_ce1),
    .A_11_q1(A_11_q1),
    .A_12_address0(grp_DiagMatMul_fu_725_A_12_address0),
    .A_12_ce0(grp_DiagMatMul_fu_725_A_12_ce0),
    .A_12_q0(A_12_q0),
    .A_12_address1(grp_DiagMatMul_fu_725_A_12_address1),
    .A_12_ce1(grp_DiagMatMul_fu_725_A_12_ce1),
    .A_12_q1(A_12_q1),
    .A_13_address0(grp_DiagMatMul_fu_725_A_13_address0),
    .A_13_ce0(grp_DiagMatMul_fu_725_A_13_ce0),
    .A_13_q0(A_13_q0),
    .A_13_address1(grp_DiagMatMul_fu_725_A_13_address1),
    .A_13_ce1(grp_DiagMatMul_fu_725_A_13_ce1),
    .A_13_q1(A_13_q1),
    .A_14_address0(grp_DiagMatMul_fu_725_A_14_address0),
    .A_14_ce0(grp_DiagMatMul_fu_725_A_14_ce0),
    .A_14_q0(A_14_q0),
    .A_14_address1(grp_DiagMatMul_fu_725_A_14_address1),
    .A_14_ce1(grp_DiagMatMul_fu_725_A_14_ce1),
    .A_14_q1(A_14_q1),
    .A_15_address0(grp_DiagMatMul_fu_725_A_15_address0),
    .A_15_ce0(grp_DiagMatMul_fu_725_A_15_ce0),
    .A_15_q0(A_15_q0),
    .A_15_address1(grp_DiagMatMul_fu_725_A_15_address1),
    .A_15_ce1(grp_DiagMatMul_fu_725_A_15_ce1),
    .A_15_q1(A_15_q1),
    .B_0_address0(grp_DiagMatMul_fu_725_B_0_address0),
    .B_0_ce0(grp_DiagMatMul_fu_725_B_0_ce0),
    .B_0_q0(B_0_q0),
    .B_1_address0(grp_DiagMatMul_fu_725_B_1_address0),
    .B_1_ce0(grp_DiagMatMul_fu_725_B_1_ce0),
    .B_1_q0(B_1_q0),
    .B_2_address0(grp_DiagMatMul_fu_725_B_2_address0),
    .B_2_ce0(grp_DiagMatMul_fu_725_B_2_ce0),
    .B_2_q0(B_2_q0),
    .B_3_address0(grp_DiagMatMul_fu_725_B_3_address0),
    .B_3_ce0(grp_DiagMatMul_fu_725_B_3_ce0),
    .B_3_q0(B_3_q0),
    .B_4_address0(grp_DiagMatMul_fu_725_B_4_address0),
    .B_4_ce0(grp_DiagMatMul_fu_725_B_4_ce0),
    .B_4_q0(B_4_q0),
    .B_5_address0(grp_DiagMatMul_fu_725_B_5_address0),
    .B_5_ce0(grp_DiagMatMul_fu_725_B_5_ce0),
    .B_5_q0(B_5_q0),
    .B_6_address0(grp_DiagMatMul_fu_725_B_6_address0),
    .B_6_ce0(grp_DiagMatMul_fu_725_B_6_ce0),
    .B_6_q0(B_6_q0),
    .B_7_address0(grp_DiagMatMul_fu_725_B_7_address0),
    .B_7_ce0(grp_DiagMatMul_fu_725_B_7_ce0),
    .B_7_q0(B_7_q0),
    .B_8_address0(grp_DiagMatMul_fu_725_B_8_address0),
    .B_8_ce0(grp_DiagMatMul_fu_725_B_8_ce0),
    .B_8_q0(B_8_q0),
    .B_9_address0(grp_DiagMatMul_fu_725_B_9_address0),
    .B_9_ce0(grp_DiagMatMul_fu_725_B_9_ce0),
    .B_9_q0(B_9_q0),
    .B_10_address0(grp_DiagMatMul_fu_725_B_10_address0),
    .B_10_ce0(grp_DiagMatMul_fu_725_B_10_ce0),
    .B_10_q0(B_10_q0),
    .B_11_address0(grp_DiagMatMul_fu_725_B_11_address0),
    .B_11_ce0(grp_DiagMatMul_fu_725_B_11_ce0),
    .B_11_q0(B_11_q0),
    .B_12_address0(grp_DiagMatMul_fu_725_B_12_address0),
    .B_12_ce0(grp_DiagMatMul_fu_725_B_12_ce0),
    .B_12_q0(B_12_q0),
    .B_13_address0(grp_DiagMatMul_fu_725_B_13_address0),
    .B_13_ce0(grp_DiagMatMul_fu_725_B_13_ce0),
    .B_13_q0(B_13_q0),
    .B_14_address0(grp_DiagMatMul_fu_725_B_14_address0),
    .B_14_ce0(grp_DiagMatMul_fu_725_B_14_ce0),
    .B_14_q0(B_14_q0),
    .B_15_address0(grp_DiagMatMul_fu_725_B_15_address0),
    .B_15_ce0(grp_DiagMatMul_fu_725_B_15_ce0),
    .B_15_q0(B_15_q0),
    .C_address0(grp_DiagMatMul_fu_725_C_address0),
    .C_ce0(grp_DiagMatMul_fu_725_C_ce0),
    .C_we0(grp_DiagMatMul_fu_725_C_we0),
    .C_d0(grp_DiagMatMul_fu_725_C_d0)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_in_stream_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_stream_TDATA),
    .vld_in(in_stream_TVALID),
    .ack_in(regslice_both_in_stream_V_data_V_U_ack_in),
    .data_out(in_stream_TDATA_int),
    .vld_out(in_stream_TVALID_int),
    .ack_out(in_stream_TREADY_int),
    .apdone_blk(regslice_both_in_stream_V_data_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 4 ))
regslice_both_in_stream_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_stream_TKEEP),
    .vld_in(in_stream_TVALID),
    .ack_in(regslice_both_in_stream_V_keep_V_U_ack_in),
    .data_out(in_stream_TKEEP_int),
    .vld_out(regslice_both_in_stream_V_keep_V_U_vld_out),
    .ack_out(in_stream_TREADY_int),
    .apdone_blk(regslice_both_in_stream_V_keep_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 4 ))
regslice_both_in_stream_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_stream_TSTRB),
    .vld_in(in_stream_TVALID),
    .ack_in(regslice_both_in_stream_V_strb_V_U_ack_in),
    .data_out(in_stream_TSTRB_int),
    .vld_out(regslice_both_in_stream_V_strb_V_U_vld_out),
    .ack_out(in_stream_TREADY_int),
    .apdone_blk(regslice_both_in_stream_V_strb_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_stream_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_stream_TLAST),
    .vld_in(in_stream_TVALID),
    .ack_in(regslice_both_in_stream_V_last_V_U_ack_in),
    .data_out(in_stream_TLAST_int),
    .vld_out(regslice_both_in_stream_V_last_V_U_vld_out),
    .ack_out(in_stream_TREADY_int),
    .apdone_blk(regslice_both_in_stream_V_last_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_out_stream_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_stream_TDATA_int),
    .vld_in(out_stream_TVALID_int),
    .ack_in(out_stream_TREADY_int),
    .data_out(out_stream_TDATA),
    .vld_out(regslice_both_out_stream_V_data_V_U_vld_out),
    .ack_out(out_stream_TREADY),
    .apdone_blk(regslice_both_out_stream_V_data_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_stream_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd15),
    .vld_in(out_stream_TVALID_int),
    .ack_in(regslice_both_out_stream_V_keep_V_U_ack_in_dummy),
    .data_out(out_stream_TKEEP),
    .vld_out(regslice_both_out_stream_V_keep_V_U_vld_out),
    .ack_out(out_stream_TREADY),
    .apdone_blk(regslice_both_out_stream_V_keep_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_stream_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd15),
    .vld_in(out_stream_TVALID_int),
    .ack_in(regslice_both_out_stream_V_strb_V_U_ack_in_dummy),
    .data_out(out_stream_TSTRB),
    .vld_out(regslice_both_out_stream_V_strb_V_U_vld_out),
    .ack_out(out_stream_TREADY),
    .apdone_blk(regslice_both_out_stream_V_strb_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_stream_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(valOut_last_V_reg_984),
    .vld_in(out_stream_TVALID_int),
    .ack_in(regslice_both_out_stream_V_last_V_U_ack_in_dummy),
    .data_out(out_stream_TLAST),
    .vld_out(regslice_both_out_stream_V_last_V_U_vld_out),
    .ack_out(out_stream_TREADY),
    .apdone_blk(regslice_both_out_stream_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state9))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((grp_DiagMatMul_fu_725_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state9)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state9);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((grp_DiagMatMul_fu_725_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_DiagMatMul_fu_725_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln41_fu_834_p2 == 1'd1))) begin
            grp_DiagMatMul_fu_725_ap_start_reg <= 1'b1;
        end else if ((grp_DiagMatMul_fu_725_ap_ready == 1'b1)) begin
            grp_DiagMatMul_fu_725_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln34_fu_782_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_0_reg_670 <= i_reg_933;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_670 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln33_fu_766_p2 == 1'd1))) begin
        i_1_reg_692 <= 5'd0;
    end else if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln42_fu_850_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        i_1_reg_692 <= i_4_reg_953;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_902_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_2_reg_714 <= i_3_fu_908_p2;
    end else if (((grp_DiagMatMul_fu_725_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        i_2_reg_714 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        j_0_reg_681 <= j_reg_945;
    end else if (((icmp_ln33_fu_766_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_0_reg_681 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        j_1_reg_703 <= j_2_reg_965;
    end else if (((icmp_ln41_fu_834_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        j_1_reg_703 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_4_reg_953 <= i_4_fu_840_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_933 <= i_fu_772_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln51_reg_970 <= icmp_ln51_fu_902_p2;
        icmp_ln51_reg_970_pp0_iter1_reg <= icmp_ln51_reg_970;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        j_2_reg_965 <= j_2_fu_856_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        j_reg_945 <= j_fu_788_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln33_fu_766_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        trunc_ln37_reg_938 <= trunc_ln37_fu_778_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_fu_834_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        trunc_ln45_reg_958 <= trunc_ln45_fu_846_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_902_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        valOut_last_V_reg_984 <= valOut_last_V_fu_919_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        A_0_address0 = zext_ln37_fu_814_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_0_address0 = grp_DiagMatMul_fu_725_A_0_address0;
    end else begin
        A_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        A_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_0_ce0 = grp_DiagMatMul_fu_725_A_0_ce0;
    end else begin
        A_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        A_0_ce1 = grp_DiagMatMul_fu_725_A_0_ce1;
    end else begin
        A_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln34_fu_782_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln37_reg_938 == 4'd0))) begin
        A_0_we0 = 1'b1;
    end else begin
        A_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        A_10_address0 = zext_ln37_fu_814_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_10_address0 = grp_DiagMatMul_fu_725_A_10_address0;
    end else begin
        A_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        A_10_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_10_ce0 = grp_DiagMatMul_fu_725_A_10_ce0;
    end else begin
        A_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        A_10_ce1 = grp_DiagMatMul_fu_725_A_10_ce1;
    end else begin
        A_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln34_fu_782_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln37_reg_938 == 4'd10))) begin
        A_10_we0 = 1'b1;
    end else begin
        A_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        A_11_address0 = zext_ln37_fu_814_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_11_address0 = grp_DiagMatMul_fu_725_A_11_address0;
    end else begin
        A_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        A_11_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_11_ce0 = grp_DiagMatMul_fu_725_A_11_ce0;
    end else begin
        A_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        A_11_ce1 = grp_DiagMatMul_fu_725_A_11_ce1;
    end else begin
        A_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln34_fu_782_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln37_reg_938 == 4'd11))) begin
        A_11_we0 = 1'b1;
    end else begin
        A_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        A_12_address0 = zext_ln37_fu_814_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_12_address0 = grp_DiagMatMul_fu_725_A_12_address0;
    end else begin
        A_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        A_12_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_12_ce0 = grp_DiagMatMul_fu_725_A_12_ce0;
    end else begin
        A_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        A_12_ce1 = grp_DiagMatMul_fu_725_A_12_ce1;
    end else begin
        A_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln34_fu_782_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln37_reg_938 == 4'd12))) begin
        A_12_we0 = 1'b1;
    end else begin
        A_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        A_13_address0 = zext_ln37_fu_814_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_13_address0 = grp_DiagMatMul_fu_725_A_13_address0;
    end else begin
        A_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        A_13_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_13_ce0 = grp_DiagMatMul_fu_725_A_13_ce0;
    end else begin
        A_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        A_13_ce1 = grp_DiagMatMul_fu_725_A_13_ce1;
    end else begin
        A_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln34_fu_782_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln37_reg_938 == 4'd13))) begin
        A_13_we0 = 1'b1;
    end else begin
        A_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        A_14_address0 = zext_ln37_fu_814_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_14_address0 = grp_DiagMatMul_fu_725_A_14_address0;
    end else begin
        A_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        A_14_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_14_ce0 = grp_DiagMatMul_fu_725_A_14_ce0;
    end else begin
        A_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        A_14_ce1 = grp_DiagMatMul_fu_725_A_14_ce1;
    end else begin
        A_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln34_fu_782_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln37_reg_938 == 4'd14))) begin
        A_14_we0 = 1'b1;
    end else begin
        A_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        A_15_address0 = zext_ln37_fu_814_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_15_address0 = grp_DiagMatMul_fu_725_A_15_address0;
    end else begin
        A_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        A_15_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_15_ce0 = grp_DiagMatMul_fu_725_A_15_ce0;
    end else begin
        A_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        A_15_ce1 = grp_DiagMatMul_fu_725_A_15_ce1;
    end else begin
        A_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln34_fu_782_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln37_reg_938 == 4'd15))) begin
        A_15_we0 = 1'b1;
    end else begin
        A_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        A_1_address0 = zext_ln37_fu_814_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_1_address0 = grp_DiagMatMul_fu_725_A_1_address0;
    end else begin
        A_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        A_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_1_ce0 = grp_DiagMatMul_fu_725_A_1_ce0;
    end else begin
        A_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        A_1_ce1 = grp_DiagMatMul_fu_725_A_1_ce1;
    end else begin
        A_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln34_fu_782_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln37_reg_938 == 4'd1))) begin
        A_1_we0 = 1'b1;
    end else begin
        A_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        A_2_address0 = zext_ln37_fu_814_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_2_address0 = grp_DiagMatMul_fu_725_A_2_address0;
    end else begin
        A_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        A_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_2_ce0 = grp_DiagMatMul_fu_725_A_2_ce0;
    end else begin
        A_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        A_2_ce1 = grp_DiagMatMul_fu_725_A_2_ce1;
    end else begin
        A_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln34_fu_782_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln37_reg_938 == 4'd2))) begin
        A_2_we0 = 1'b1;
    end else begin
        A_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        A_3_address0 = zext_ln37_fu_814_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_3_address0 = grp_DiagMatMul_fu_725_A_3_address0;
    end else begin
        A_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        A_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_3_ce0 = grp_DiagMatMul_fu_725_A_3_ce0;
    end else begin
        A_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        A_3_ce1 = grp_DiagMatMul_fu_725_A_3_ce1;
    end else begin
        A_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln34_fu_782_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln37_reg_938 == 4'd3))) begin
        A_3_we0 = 1'b1;
    end else begin
        A_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        A_4_address0 = zext_ln37_fu_814_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_4_address0 = grp_DiagMatMul_fu_725_A_4_address0;
    end else begin
        A_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        A_4_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_4_ce0 = grp_DiagMatMul_fu_725_A_4_ce0;
    end else begin
        A_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        A_4_ce1 = grp_DiagMatMul_fu_725_A_4_ce1;
    end else begin
        A_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln34_fu_782_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln37_reg_938 == 4'd4))) begin
        A_4_we0 = 1'b1;
    end else begin
        A_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        A_5_address0 = zext_ln37_fu_814_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_5_address0 = grp_DiagMatMul_fu_725_A_5_address0;
    end else begin
        A_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        A_5_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_5_ce0 = grp_DiagMatMul_fu_725_A_5_ce0;
    end else begin
        A_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        A_5_ce1 = grp_DiagMatMul_fu_725_A_5_ce1;
    end else begin
        A_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln34_fu_782_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln37_reg_938 == 4'd5))) begin
        A_5_we0 = 1'b1;
    end else begin
        A_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        A_6_address0 = zext_ln37_fu_814_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_6_address0 = grp_DiagMatMul_fu_725_A_6_address0;
    end else begin
        A_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        A_6_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_6_ce0 = grp_DiagMatMul_fu_725_A_6_ce0;
    end else begin
        A_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        A_6_ce1 = grp_DiagMatMul_fu_725_A_6_ce1;
    end else begin
        A_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln34_fu_782_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln37_reg_938 == 4'd6))) begin
        A_6_we0 = 1'b1;
    end else begin
        A_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        A_7_address0 = zext_ln37_fu_814_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_7_address0 = grp_DiagMatMul_fu_725_A_7_address0;
    end else begin
        A_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        A_7_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_7_ce0 = grp_DiagMatMul_fu_725_A_7_ce0;
    end else begin
        A_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        A_7_ce1 = grp_DiagMatMul_fu_725_A_7_ce1;
    end else begin
        A_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln34_fu_782_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln37_reg_938 == 4'd7))) begin
        A_7_we0 = 1'b1;
    end else begin
        A_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        A_8_address0 = zext_ln37_fu_814_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_8_address0 = grp_DiagMatMul_fu_725_A_8_address0;
    end else begin
        A_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        A_8_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_8_ce0 = grp_DiagMatMul_fu_725_A_8_ce0;
    end else begin
        A_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        A_8_ce1 = grp_DiagMatMul_fu_725_A_8_ce1;
    end else begin
        A_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln34_fu_782_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln37_reg_938 == 4'd8))) begin
        A_8_we0 = 1'b1;
    end else begin
        A_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        A_9_address0 = zext_ln37_fu_814_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_9_address0 = grp_DiagMatMul_fu_725_A_9_address0;
    end else begin
        A_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        A_9_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_9_ce0 = grp_DiagMatMul_fu_725_A_9_ce0;
    end else begin
        A_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        A_9_ce1 = grp_DiagMatMul_fu_725_A_9_ce1;
    end else begin
        A_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln34_fu_782_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln37_reg_938 == 4'd9))) begin
        A_9_we0 = 1'b1;
    end else begin
        A_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        B_0_address0 = zext_ln45_fu_882_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_0_address0 = grp_DiagMatMul_fu_725_B_0_address0;
    end else begin
        B_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        B_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_0_ce0 = grp_DiagMatMul_fu_725_B_0_ce0;
    end else begin
        B_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln42_fu_850_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln45_reg_958 == 4'd0))) begin
        B_0_we0 = 1'b1;
    end else begin
        B_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        B_10_address0 = zext_ln45_fu_882_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_10_address0 = grp_DiagMatMul_fu_725_B_10_address0;
    end else begin
        B_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        B_10_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_10_ce0 = grp_DiagMatMul_fu_725_B_10_ce0;
    end else begin
        B_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln42_fu_850_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln45_reg_958 == 4'd10))) begin
        B_10_we0 = 1'b1;
    end else begin
        B_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        B_11_address0 = zext_ln45_fu_882_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_11_address0 = grp_DiagMatMul_fu_725_B_11_address0;
    end else begin
        B_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        B_11_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_11_ce0 = grp_DiagMatMul_fu_725_B_11_ce0;
    end else begin
        B_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln42_fu_850_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln45_reg_958 == 4'd11))) begin
        B_11_we0 = 1'b1;
    end else begin
        B_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        B_12_address0 = zext_ln45_fu_882_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_12_address0 = grp_DiagMatMul_fu_725_B_12_address0;
    end else begin
        B_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        B_12_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_12_ce0 = grp_DiagMatMul_fu_725_B_12_ce0;
    end else begin
        B_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln42_fu_850_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln45_reg_958 == 4'd12))) begin
        B_12_we0 = 1'b1;
    end else begin
        B_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        B_13_address0 = zext_ln45_fu_882_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_13_address0 = grp_DiagMatMul_fu_725_B_13_address0;
    end else begin
        B_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        B_13_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_13_ce0 = grp_DiagMatMul_fu_725_B_13_ce0;
    end else begin
        B_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln42_fu_850_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln45_reg_958 == 4'd13))) begin
        B_13_we0 = 1'b1;
    end else begin
        B_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        B_14_address0 = zext_ln45_fu_882_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_14_address0 = grp_DiagMatMul_fu_725_B_14_address0;
    end else begin
        B_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        B_14_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_14_ce0 = grp_DiagMatMul_fu_725_B_14_ce0;
    end else begin
        B_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln42_fu_850_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln45_reg_958 == 4'd14))) begin
        B_14_we0 = 1'b1;
    end else begin
        B_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        B_15_address0 = zext_ln45_fu_882_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_15_address0 = grp_DiagMatMul_fu_725_B_15_address0;
    end else begin
        B_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        B_15_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_15_ce0 = grp_DiagMatMul_fu_725_B_15_ce0;
    end else begin
        B_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln42_fu_850_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln45_reg_958 == 4'd15))) begin
        B_15_we0 = 1'b1;
    end else begin
        B_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        B_1_address0 = zext_ln45_fu_882_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_1_address0 = grp_DiagMatMul_fu_725_B_1_address0;
    end else begin
        B_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        B_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_1_ce0 = grp_DiagMatMul_fu_725_B_1_ce0;
    end else begin
        B_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln42_fu_850_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln45_reg_958 == 4'd1))) begin
        B_1_we0 = 1'b1;
    end else begin
        B_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        B_2_address0 = zext_ln45_fu_882_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_2_address0 = grp_DiagMatMul_fu_725_B_2_address0;
    end else begin
        B_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        B_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_2_ce0 = grp_DiagMatMul_fu_725_B_2_ce0;
    end else begin
        B_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln42_fu_850_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln45_reg_958 == 4'd2))) begin
        B_2_we0 = 1'b1;
    end else begin
        B_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        B_3_address0 = zext_ln45_fu_882_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_3_address0 = grp_DiagMatMul_fu_725_B_3_address0;
    end else begin
        B_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        B_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_3_ce0 = grp_DiagMatMul_fu_725_B_3_ce0;
    end else begin
        B_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln42_fu_850_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln45_reg_958 == 4'd3))) begin
        B_3_we0 = 1'b1;
    end else begin
        B_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        B_4_address0 = zext_ln45_fu_882_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_4_address0 = grp_DiagMatMul_fu_725_B_4_address0;
    end else begin
        B_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        B_4_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_4_ce0 = grp_DiagMatMul_fu_725_B_4_ce0;
    end else begin
        B_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln42_fu_850_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln45_reg_958 == 4'd4))) begin
        B_4_we0 = 1'b1;
    end else begin
        B_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        B_5_address0 = zext_ln45_fu_882_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_5_address0 = grp_DiagMatMul_fu_725_B_5_address0;
    end else begin
        B_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        B_5_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_5_ce0 = grp_DiagMatMul_fu_725_B_5_ce0;
    end else begin
        B_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln42_fu_850_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln45_reg_958 == 4'd5))) begin
        B_5_we0 = 1'b1;
    end else begin
        B_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        B_6_address0 = zext_ln45_fu_882_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_6_address0 = grp_DiagMatMul_fu_725_B_6_address0;
    end else begin
        B_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        B_6_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_6_ce0 = grp_DiagMatMul_fu_725_B_6_ce0;
    end else begin
        B_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln42_fu_850_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln45_reg_958 == 4'd6))) begin
        B_6_we0 = 1'b1;
    end else begin
        B_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        B_7_address0 = zext_ln45_fu_882_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_7_address0 = grp_DiagMatMul_fu_725_B_7_address0;
    end else begin
        B_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        B_7_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_7_ce0 = grp_DiagMatMul_fu_725_B_7_ce0;
    end else begin
        B_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln42_fu_850_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln45_reg_958 == 4'd7))) begin
        B_7_we0 = 1'b1;
    end else begin
        B_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        B_8_address0 = zext_ln45_fu_882_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_8_address0 = grp_DiagMatMul_fu_725_B_8_address0;
    end else begin
        B_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        B_8_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_8_ce0 = grp_DiagMatMul_fu_725_B_8_ce0;
    end else begin
        B_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln42_fu_850_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln45_reg_958 == 4'd8))) begin
        B_8_we0 = 1'b1;
    end else begin
        B_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        B_9_address0 = zext_ln45_fu_882_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_9_address0 = grp_DiagMatMul_fu_725_B_9_address0;
    end else begin
        B_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        B_9_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_9_ce0 = grp_DiagMatMul_fu_725_B_9_ce0;
    end else begin
        B_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln42_fu_850_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (trunc_ln45_reg_958 == 4'd9))) begin
        B_9_we0 = 1'b1;
    end else begin
        B_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln51_fu_902_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_out_stream_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_out_stream_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln42_fu_850_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((icmp_ln34_fu_782_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        in_stream_TDATA_blk_n = in_stream_TVALID_int;
    end else begin
        in_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((in_stream_TVALID == 1'b1) & (regslice_both_in_stream_V_data_V_U_ack_in == 1'b1))) begin
        in_stream_TREADY = 1'b1;
    end else begin
        in_stream_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln42_fu_850_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | (~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln34_fu_782_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        in_stream_TREADY_int = 1'b1;
    end else begin
        in_stream_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        mulOut_address0 = zext_ln54_fu_914_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        mulOut_address0 = grp_DiagMatMul_fu_725_C_address0;
    end else begin
        mulOut_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mulOut_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        mulOut_ce0 = grp_DiagMatMul_fu_725_C_ce0;
    end else begin
        mulOut_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        mulOut_we0 = grp_DiagMatMul_fu_725_C_we0;
    end else begin
        mulOut_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (icmp_ln51_reg_970_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (icmp_ln51_reg_970 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        out_stream_TDATA_blk_n = out_stream_TREADY_int;
    end else begin
        out_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_970 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_stream_TVALID_int = 1'b1;
    end else begin
        out_stream_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln33_fu_766_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln34_fu_782_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln34_fu_782_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln41_fu_834_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln42_fu_850_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if ((~((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0)) & (icmp_ln42_fu_850_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_DiagMatMul_fu_725_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln51_fu_902_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln51_fu_902_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((regslice_both_out_stream_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b1 == ap_block_state11_io) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == ap_block_state10_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b1 == ap_block_state11_io) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == ap_block_state10_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state10_io = ((icmp_ln51_reg_970 == 1'd0) & (out_stream_TREADY_int == 1'b0));
end

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_io = ((icmp_ln51_reg_970_pp0_iter1_reg == 1'd0) & (out_stream_TREADY_int == 1'b0));
end

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3 = ((icmp_ln34_fu_782_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0));
end

always @ (*) begin
    ap_block_state6 = ((icmp_ln42_fu_850_p2 == 1'd0) & (in_stream_TVALID_int == 1'b0));
end

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bitcast_ln37_fu_794_p1 = in_stream_TDATA_int;

assign bitcast_ln45_fu_862_p1 = in_stream_TDATA_int;

assign grp_DiagMatMul_fu_725_ap_start = grp_DiagMatMul_fu_725_ap_start_reg;

assign i_3_fu_908_p2 = (i_2_reg_714 + 5'd1);

assign i_4_fu_840_p2 = (i_1_reg_692 + 5'd1);

assign i_fu_772_p2 = (i_0_reg_670 + 5'd1);

assign icmp_ln33_fu_766_p2 = ((i_0_reg_670 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln34_fu_782_p2 = ((j_0_reg_681 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_834_p2 = ((i_1_reg_692 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_850_p2 = ((j_1_reg_703 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln51_fu_902_p2 = ((i_2_reg_714 == 5'd16) ? 1'b1 : 1'b0);

assign j_2_fu_856_p2 = (j_1_reg_703 + 5'd1);

assign j_fu_788_p2 = (j_0_reg_681 + 5'd1);

assign out_stream_TDATA_int = mulOut_q0;

assign out_stream_TVALID = regslice_both_out_stream_V_data_V_U_vld_out;

assign trunc_ln37_fu_778_p1 = i_0_reg_670[3:0];

assign trunc_ln45_fu_846_p1 = i_1_reg_692[3:0];

assign valOut_last_V_fu_919_p2 = ((i_2_reg_714 == 5'd15) ? 1'b1 : 1'b0);

assign zext_ln37_fu_814_p1 = j_0_reg_681;

assign zext_ln45_fu_882_p1 = j_1_reg_703;

assign zext_ln54_fu_914_p1 = i_2_reg_714;

endmodule //matmul
