-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matmul is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 4;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_stream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    in_stream_TVALID : IN STD_LOGIC;
    in_stream_TREADY : OUT STD_LOGIC;
    in_stream_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    in_stream_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    in_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    out_stream_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_stream_TVALID : OUT STD_LOGIC;
    out_stream_TREADY : IN STD_LOGIC;
    out_stream_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_stream_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of matmul is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "matmul,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.419000,HLS_SYN_LAT=1302,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=10,HLS_SYN_FF=5399,HLS_SYN_LUT=4816,HLS_VERSION=2019_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal in_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln34_fu_782_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln42_fu_850_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln72_reg_970 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal icmp_ln72_reg_970_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_2_reg_714 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_fu_772_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_reg_933 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal trunc_ln37_fu_778_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln37_reg_938 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln33_fu_766_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_fu_788_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_reg_945 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal i_4_fu_840_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_4_reg_953 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal trunc_ln45_fu_846_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln45_reg_958 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln41_fu_834_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_2_fu_856_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_2_reg_965 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state6 : BOOLEAN;
    signal icmp_ln72_fu_902_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state9_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state10_io : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state11_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_3_fu_908_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal valOut_last_V_fu_919_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal valOut_last_V_reg_984 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_DiagMatMul_fu_725_ap_ready : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_ap_done : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state9 : STD_LOGIC;
    signal A_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_0_ce0 : STD_LOGIC;
    signal A_0_we0 : STD_LOGIC;
    signal A_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_0_ce1 : STD_LOGIC;
    signal A_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_1_ce0 : STD_LOGIC;
    signal A_1_we0 : STD_LOGIC;
    signal A_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_1_ce1 : STD_LOGIC;
    signal A_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_2_ce0 : STD_LOGIC;
    signal A_2_we0 : STD_LOGIC;
    signal A_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_2_ce1 : STD_LOGIC;
    signal A_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_3_ce0 : STD_LOGIC;
    signal A_3_we0 : STD_LOGIC;
    signal A_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_3_ce1 : STD_LOGIC;
    signal A_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_4_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_4_ce0 : STD_LOGIC;
    signal A_4_we0 : STD_LOGIC;
    signal A_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_4_ce1 : STD_LOGIC;
    signal A_4_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_5_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_5_ce0 : STD_LOGIC;
    signal A_5_we0 : STD_LOGIC;
    signal A_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_5_ce1 : STD_LOGIC;
    signal A_5_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_6_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_6_ce0 : STD_LOGIC;
    signal A_6_we0 : STD_LOGIC;
    signal A_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_6_ce1 : STD_LOGIC;
    signal A_6_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_7_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_7_ce0 : STD_LOGIC;
    signal A_7_we0 : STD_LOGIC;
    signal A_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_7_ce1 : STD_LOGIC;
    signal A_7_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_8_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_8_ce0 : STD_LOGIC;
    signal A_8_we0 : STD_LOGIC;
    signal A_8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_8_ce1 : STD_LOGIC;
    signal A_8_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_9_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_9_ce0 : STD_LOGIC;
    signal A_9_we0 : STD_LOGIC;
    signal A_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_9_ce1 : STD_LOGIC;
    signal A_9_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_10_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_10_ce0 : STD_LOGIC;
    signal A_10_we0 : STD_LOGIC;
    signal A_10_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_10_ce1 : STD_LOGIC;
    signal A_10_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_11_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_11_ce0 : STD_LOGIC;
    signal A_11_we0 : STD_LOGIC;
    signal A_11_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_11_ce1 : STD_LOGIC;
    signal A_11_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_12_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_12_ce0 : STD_LOGIC;
    signal A_12_we0 : STD_LOGIC;
    signal A_12_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_12_ce1 : STD_LOGIC;
    signal A_12_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_13_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_13_ce0 : STD_LOGIC;
    signal A_13_we0 : STD_LOGIC;
    signal A_13_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_13_ce1 : STD_LOGIC;
    signal A_13_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_14_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_14_ce0 : STD_LOGIC;
    signal A_14_we0 : STD_LOGIC;
    signal A_14_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_14_ce1 : STD_LOGIC;
    signal A_14_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_15_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_15_ce0 : STD_LOGIC;
    signal A_15_we0 : STD_LOGIC;
    signal A_15_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_15_ce1 : STD_LOGIC;
    signal A_15_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal B_0_ce0 : STD_LOGIC;
    signal B_0_we0 : STD_LOGIC;
    signal B_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal B_1_ce0 : STD_LOGIC;
    signal B_1_we0 : STD_LOGIC;
    signal B_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal B_2_ce0 : STD_LOGIC;
    signal B_2_we0 : STD_LOGIC;
    signal B_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal B_3_ce0 : STD_LOGIC;
    signal B_3_we0 : STD_LOGIC;
    signal B_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_4_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal B_4_ce0 : STD_LOGIC;
    signal B_4_we0 : STD_LOGIC;
    signal B_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_5_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal B_5_ce0 : STD_LOGIC;
    signal B_5_we0 : STD_LOGIC;
    signal B_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_6_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal B_6_ce0 : STD_LOGIC;
    signal B_6_we0 : STD_LOGIC;
    signal B_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_7_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal B_7_ce0 : STD_LOGIC;
    signal B_7_we0 : STD_LOGIC;
    signal B_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_8_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal B_8_ce0 : STD_LOGIC;
    signal B_8_we0 : STD_LOGIC;
    signal B_8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_9_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal B_9_ce0 : STD_LOGIC;
    signal B_9_we0 : STD_LOGIC;
    signal B_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_10_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal B_10_ce0 : STD_LOGIC;
    signal B_10_we0 : STD_LOGIC;
    signal B_10_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_11_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal B_11_ce0 : STD_LOGIC;
    signal B_11_we0 : STD_LOGIC;
    signal B_11_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_12_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal B_12_ce0 : STD_LOGIC;
    signal B_12_we0 : STD_LOGIC;
    signal B_12_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_13_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal B_13_ce0 : STD_LOGIC;
    signal B_13_we0 : STD_LOGIC;
    signal B_13_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_14_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal B_14_ce0 : STD_LOGIC;
    signal B_14_we0 : STD_LOGIC;
    signal B_14_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_15_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal B_15_ce0 : STD_LOGIC;
    signal B_15_we0 : STD_LOGIC;
    signal B_15_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mulOut_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mulOut_ce0 : STD_LOGIC;
    signal mulOut_we0 : STD_LOGIC;
    signal mulOut_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DiagMatMul_fu_725_ap_start : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_ap_idle : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_0_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_0_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_0_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_1_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_1_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_1_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_2_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_2_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_2_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_3_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_3_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_3_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_4_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_4_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_4_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_4_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_5_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_5_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_5_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_5_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_6_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_6_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_6_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_6_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_7_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_7_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_7_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_7_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_8_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_8_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_8_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_8_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_9_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_9_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_9_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_9_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_10_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_10_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_10_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_10_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_11_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_11_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_11_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_11_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_12_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_12_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_12_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_12_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_13_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_13_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_13_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_13_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_14_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_14_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_14_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_14_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_15_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_15_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_A_15_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_A_15_ce1 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_B_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_B_0_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_B_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_B_1_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_B_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_B_2_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_B_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_B_3_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_B_4_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_B_4_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_B_5_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_B_5_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_B_6_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_B_6_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_B_7_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_B_7_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_B_8_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_B_8_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_B_9_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_B_9_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_B_10_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_B_10_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_B_11_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_B_11_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_B_12_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_B_12_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_B_13_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_B_13_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_B_14_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_B_14_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_B_15_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_B_15_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_C_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DiagMatMul_fu_725_C_ce0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_C_we0 : STD_LOGIC;
    signal grp_DiagMatMul_fu_725_C_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_0_reg_670 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_0_reg_681 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal i_1_reg_692 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_1_reg_703 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_DiagMatMul_fu_725_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln37_fu_814_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln45_fu_882_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln75_fu_914_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal bitcast_ln37_fu_794_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln45_fu_862_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal regslice_both_out_stream_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_in_stream_V_data_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TDATA_int : STD_LOGIC_VECTOR (31 downto 0);
    signal in_stream_TVALID_int : STD_LOGIC;
    signal in_stream_TREADY_int : STD_LOGIC;
    signal regslice_both_in_stream_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_stream_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TKEEP_int : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_in_stream_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_stream_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_stream_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TSTRB_int : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_in_stream_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_stream_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_stream_V_last_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TLAST_int : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in_stream_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_stream_V_last_V_U_ack_in : STD_LOGIC;
    signal out_stream_TDATA_int : STD_LOGIC_VECTOR (31 downto 0);
    signal out_stream_TVALID_int : STD_LOGIC;
    signal out_stream_TREADY_int : STD_LOGIC;
    signal regslice_both_out_stream_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_stream_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_stream_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_stream_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_stream_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_stream_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_stream_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_stream_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_stream_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_stream_V_last_V_U_vld_out : STD_LOGIC;

    component DiagMatMul IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        A_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_0_ce0 : OUT STD_LOGIC;
        A_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_0_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_0_ce1 : OUT STD_LOGIC;
        A_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_1_ce0 : OUT STD_LOGIC;
        A_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_1_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_1_ce1 : OUT STD_LOGIC;
        A_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_2_ce0 : OUT STD_LOGIC;
        A_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_2_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_2_ce1 : OUT STD_LOGIC;
        A_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_3_ce0 : OUT STD_LOGIC;
        A_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_3_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_3_ce1 : OUT STD_LOGIC;
        A_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_4_ce0 : OUT STD_LOGIC;
        A_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_4_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_4_ce1 : OUT STD_LOGIC;
        A_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_5_ce0 : OUT STD_LOGIC;
        A_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_5_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_5_ce1 : OUT STD_LOGIC;
        A_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_6_ce0 : OUT STD_LOGIC;
        A_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_6_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_6_ce1 : OUT STD_LOGIC;
        A_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_7_ce0 : OUT STD_LOGIC;
        A_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_7_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_7_ce1 : OUT STD_LOGIC;
        A_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_8_ce0 : OUT STD_LOGIC;
        A_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_8_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_8_ce1 : OUT STD_LOGIC;
        A_8_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_9_ce0 : OUT STD_LOGIC;
        A_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_9_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_9_ce1 : OUT STD_LOGIC;
        A_9_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_10_ce0 : OUT STD_LOGIC;
        A_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_10_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_10_ce1 : OUT STD_LOGIC;
        A_10_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_11_ce0 : OUT STD_LOGIC;
        A_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_11_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_11_ce1 : OUT STD_LOGIC;
        A_11_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_12_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_12_ce0 : OUT STD_LOGIC;
        A_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_12_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_12_ce1 : OUT STD_LOGIC;
        A_12_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_13_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_13_ce0 : OUT STD_LOGIC;
        A_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_13_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_13_ce1 : OUT STD_LOGIC;
        A_13_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_14_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_14_ce0 : OUT STD_LOGIC;
        A_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_14_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_14_ce1 : OUT STD_LOGIC;
        A_14_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_15_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_15_ce0 : OUT STD_LOGIC;
        A_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_15_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_15_ce1 : OUT STD_LOGIC;
        A_15_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_0_ce0 : OUT STD_LOGIC;
        B_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_1_ce0 : OUT STD_LOGIC;
        B_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_2_ce0 : OUT STD_LOGIC;
        B_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_3_ce0 : OUT STD_LOGIC;
        B_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_4_ce0 : OUT STD_LOGIC;
        B_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_5_ce0 : OUT STD_LOGIC;
        B_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_6_ce0 : OUT STD_LOGIC;
        B_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_7_ce0 : OUT STD_LOGIC;
        B_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_8_ce0 : OUT STD_LOGIC;
        B_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_9_ce0 : OUT STD_LOGIC;
        B_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_10_ce0 : OUT STD_LOGIC;
        B_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_11_ce0 : OUT STD_LOGIC;
        B_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_12_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_12_ce0 : OUT STD_LOGIC;
        B_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_13_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_13_ce0 : OUT STD_LOGIC;
        B_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_14_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_14_ce0 : OUT STD_LOGIC;
        B_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_15_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_15_ce0 : OUT STD_LOGIC;
        B_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        C_ce0 : OUT STD_LOGIC;
        C_we0 : OUT STD_LOGIC;
        C_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_A_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_B_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    matmul_control_s_axi_U : component matmul_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    A_0_U : component matmul_A_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => A_0_address0,
        ce0 => A_0_ce0,
        we0 => A_0_we0,
        d0 => bitcast_ln37_fu_794_p1,
        q0 => A_0_q0,
        address1 => grp_DiagMatMul_fu_725_A_0_address1,
        ce1 => A_0_ce1,
        q1 => A_0_q1);

    A_1_U : component matmul_A_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => A_1_address0,
        ce0 => A_1_ce0,
        we0 => A_1_we0,
        d0 => bitcast_ln37_fu_794_p1,
        q0 => A_1_q0,
        address1 => grp_DiagMatMul_fu_725_A_1_address1,
        ce1 => A_1_ce1,
        q1 => A_1_q1);

    A_2_U : component matmul_A_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => A_2_address0,
        ce0 => A_2_ce0,
        we0 => A_2_we0,
        d0 => bitcast_ln37_fu_794_p1,
        q0 => A_2_q0,
        address1 => grp_DiagMatMul_fu_725_A_2_address1,
        ce1 => A_2_ce1,
        q1 => A_2_q1);

    A_3_U : component matmul_A_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => A_3_address0,
        ce0 => A_3_ce0,
        we0 => A_3_we0,
        d0 => bitcast_ln37_fu_794_p1,
        q0 => A_3_q0,
        address1 => grp_DiagMatMul_fu_725_A_3_address1,
        ce1 => A_3_ce1,
        q1 => A_3_q1);

    A_4_U : component matmul_A_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => A_4_address0,
        ce0 => A_4_ce0,
        we0 => A_4_we0,
        d0 => bitcast_ln37_fu_794_p1,
        q0 => A_4_q0,
        address1 => grp_DiagMatMul_fu_725_A_4_address1,
        ce1 => A_4_ce1,
        q1 => A_4_q1);

    A_5_U : component matmul_A_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => A_5_address0,
        ce0 => A_5_ce0,
        we0 => A_5_we0,
        d0 => bitcast_ln37_fu_794_p1,
        q0 => A_5_q0,
        address1 => grp_DiagMatMul_fu_725_A_5_address1,
        ce1 => A_5_ce1,
        q1 => A_5_q1);

    A_6_U : component matmul_A_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => A_6_address0,
        ce0 => A_6_ce0,
        we0 => A_6_we0,
        d0 => bitcast_ln37_fu_794_p1,
        q0 => A_6_q0,
        address1 => grp_DiagMatMul_fu_725_A_6_address1,
        ce1 => A_6_ce1,
        q1 => A_6_q1);

    A_7_U : component matmul_A_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => A_7_address0,
        ce0 => A_7_ce0,
        we0 => A_7_we0,
        d0 => bitcast_ln37_fu_794_p1,
        q0 => A_7_q0,
        address1 => grp_DiagMatMul_fu_725_A_7_address1,
        ce1 => A_7_ce1,
        q1 => A_7_q1);

    A_8_U : component matmul_A_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => A_8_address0,
        ce0 => A_8_ce0,
        we0 => A_8_we0,
        d0 => bitcast_ln37_fu_794_p1,
        q0 => A_8_q0,
        address1 => grp_DiagMatMul_fu_725_A_8_address1,
        ce1 => A_8_ce1,
        q1 => A_8_q1);

    A_9_U : component matmul_A_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => A_9_address0,
        ce0 => A_9_ce0,
        we0 => A_9_we0,
        d0 => bitcast_ln37_fu_794_p1,
        q0 => A_9_q0,
        address1 => grp_DiagMatMul_fu_725_A_9_address1,
        ce1 => A_9_ce1,
        q1 => A_9_q1);

    A_10_U : component matmul_A_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => A_10_address0,
        ce0 => A_10_ce0,
        we0 => A_10_we0,
        d0 => bitcast_ln37_fu_794_p1,
        q0 => A_10_q0,
        address1 => grp_DiagMatMul_fu_725_A_10_address1,
        ce1 => A_10_ce1,
        q1 => A_10_q1);

    A_11_U : component matmul_A_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => A_11_address0,
        ce0 => A_11_ce0,
        we0 => A_11_we0,
        d0 => bitcast_ln37_fu_794_p1,
        q0 => A_11_q0,
        address1 => grp_DiagMatMul_fu_725_A_11_address1,
        ce1 => A_11_ce1,
        q1 => A_11_q1);

    A_12_U : component matmul_A_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => A_12_address0,
        ce0 => A_12_ce0,
        we0 => A_12_we0,
        d0 => bitcast_ln37_fu_794_p1,
        q0 => A_12_q0,
        address1 => grp_DiagMatMul_fu_725_A_12_address1,
        ce1 => A_12_ce1,
        q1 => A_12_q1);

    A_13_U : component matmul_A_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => A_13_address0,
        ce0 => A_13_ce0,
        we0 => A_13_we0,
        d0 => bitcast_ln37_fu_794_p1,
        q0 => A_13_q0,
        address1 => grp_DiagMatMul_fu_725_A_13_address1,
        ce1 => A_13_ce1,
        q1 => A_13_q1);

    A_14_U : component matmul_A_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => A_14_address0,
        ce0 => A_14_ce0,
        we0 => A_14_we0,
        d0 => bitcast_ln37_fu_794_p1,
        q0 => A_14_q0,
        address1 => grp_DiagMatMul_fu_725_A_14_address1,
        ce1 => A_14_ce1,
        q1 => A_14_q1);

    A_15_U : component matmul_A_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => A_15_address0,
        ce0 => A_15_ce0,
        we0 => A_15_we0,
        d0 => bitcast_ln37_fu_794_p1,
        q0 => A_15_q0,
        address1 => grp_DiagMatMul_fu_725_A_15_address1,
        ce1 => A_15_ce1,
        q1 => A_15_q1);

    B_0_U : component matmul_B_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => B_0_address0,
        ce0 => B_0_ce0,
        we0 => B_0_we0,
        d0 => bitcast_ln45_fu_862_p1,
        q0 => B_0_q0);

    B_1_U : component matmul_B_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => B_1_address0,
        ce0 => B_1_ce0,
        we0 => B_1_we0,
        d0 => bitcast_ln45_fu_862_p1,
        q0 => B_1_q0);

    B_2_U : component matmul_B_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => B_2_address0,
        ce0 => B_2_ce0,
        we0 => B_2_we0,
        d0 => bitcast_ln45_fu_862_p1,
        q0 => B_2_q0);

    B_3_U : component matmul_B_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => B_3_address0,
        ce0 => B_3_ce0,
        we0 => B_3_we0,
        d0 => bitcast_ln45_fu_862_p1,
        q0 => B_3_q0);

    B_4_U : component matmul_B_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => B_4_address0,
        ce0 => B_4_ce0,
        we0 => B_4_we0,
        d0 => bitcast_ln45_fu_862_p1,
        q0 => B_4_q0);

    B_5_U : component matmul_B_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => B_5_address0,
        ce0 => B_5_ce0,
        we0 => B_5_we0,
        d0 => bitcast_ln45_fu_862_p1,
        q0 => B_5_q0);

    B_6_U : component matmul_B_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => B_6_address0,
        ce0 => B_6_ce0,
        we0 => B_6_we0,
        d0 => bitcast_ln45_fu_862_p1,
        q0 => B_6_q0);

    B_7_U : component matmul_B_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => B_7_address0,
        ce0 => B_7_ce0,
        we0 => B_7_we0,
        d0 => bitcast_ln45_fu_862_p1,
        q0 => B_7_q0);

    B_8_U : component matmul_B_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => B_8_address0,
        ce0 => B_8_ce0,
        we0 => B_8_we0,
        d0 => bitcast_ln45_fu_862_p1,
        q0 => B_8_q0);

    B_9_U : component matmul_B_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => B_9_address0,
        ce0 => B_9_ce0,
        we0 => B_9_we0,
        d0 => bitcast_ln45_fu_862_p1,
        q0 => B_9_q0);

    B_10_U : component matmul_B_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => B_10_address0,
        ce0 => B_10_ce0,
        we0 => B_10_we0,
        d0 => bitcast_ln45_fu_862_p1,
        q0 => B_10_q0);

    B_11_U : component matmul_B_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => B_11_address0,
        ce0 => B_11_ce0,
        we0 => B_11_we0,
        d0 => bitcast_ln45_fu_862_p1,
        q0 => B_11_q0);

    B_12_U : component matmul_B_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => B_12_address0,
        ce0 => B_12_ce0,
        we0 => B_12_we0,
        d0 => bitcast_ln45_fu_862_p1,
        q0 => B_12_q0);

    B_13_U : component matmul_B_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => B_13_address0,
        ce0 => B_13_ce0,
        we0 => B_13_we0,
        d0 => bitcast_ln45_fu_862_p1,
        q0 => B_13_q0);

    B_14_U : component matmul_B_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => B_14_address0,
        ce0 => B_14_ce0,
        we0 => B_14_we0,
        d0 => bitcast_ln45_fu_862_p1,
        q0 => B_14_q0);

    B_15_U : component matmul_B_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => B_15_address0,
        ce0 => B_15_ce0,
        we0 => B_15_we0,
        d0 => bitcast_ln45_fu_862_p1,
        q0 => B_15_q0);

    mulOut_U : component matmul_B_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => mulOut_address0,
        ce0 => mulOut_ce0,
        we0 => mulOut_we0,
        d0 => grp_DiagMatMul_fu_725_C_d0,
        q0 => mulOut_q0);

    grp_DiagMatMul_fu_725 : component DiagMatMul
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_DiagMatMul_fu_725_ap_start,
        ap_done => grp_DiagMatMul_fu_725_ap_done,
        ap_idle => grp_DiagMatMul_fu_725_ap_idle,
        ap_ready => grp_DiagMatMul_fu_725_ap_ready,
        A_0_address0 => grp_DiagMatMul_fu_725_A_0_address0,
        A_0_ce0 => grp_DiagMatMul_fu_725_A_0_ce0,
        A_0_q0 => A_0_q0,
        A_0_address1 => grp_DiagMatMul_fu_725_A_0_address1,
        A_0_ce1 => grp_DiagMatMul_fu_725_A_0_ce1,
        A_0_q1 => A_0_q1,
        A_1_address0 => grp_DiagMatMul_fu_725_A_1_address0,
        A_1_ce0 => grp_DiagMatMul_fu_725_A_1_ce0,
        A_1_q0 => A_1_q0,
        A_1_address1 => grp_DiagMatMul_fu_725_A_1_address1,
        A_1_ce1 => grp_DiagMatMul_fu_725_A_1_ce1,
        A_1_q1 => A_1_q1,
        A_2_address0 => grp_DiagMatMul_fu_725_A_2_address0,
        A_2_ce0 => grp_DiagMatMul_fu_725_A_2_ce0,
        A_2_q0 => A_2_q0,
        A_2_address1 => grp_DiagMatMul_fu_725_A_2_address1,
        A_2_ce1 => grp_DiagMatMul_fu_725_A_2_ce1,
        A_2_q1 => A_2_q1,
        A_3_address0 => grp_DiagMatMul_fu_725_A_3_address0,
        A_3_ce0 => grp_DiagMatMul_fu_725_A_3_ce0,
        A_3_q0 => A_3_q0,
        A_3_address1 => grp_DiagMatMul_fu_725_A_3_address1,
        A_3_ce1 => grp_DiagMatMul_fu_725_A_3_ce1,
        A_3_q1 => A_3_q1,
        A_4_address0 => grp_DiagMatMul_fu_725_A_4_address0,
        A_4_ce0 => grp_DiagMatMul_fu_725_A_4_ce0,
        A_4_q0 => A_4_q0,
        A_4_address1 => grp_DiagMatMul_fu_725_A_4_address1,
        A_4_ce1 => grp_DiagMatMul_fu_725_A_4_ce1,
        A_4_q1 => A_4_q1,
        A_5_address0 => grp_DiagMatMul_fu_725_A_5_address0,
        A_5_ce0 => grp_DiagMatMul_fu_725_A_5_ce0,
        A_5_q0 => A_5_q0,
        A_5_address1 => grp_DiagMatMul_fu_725_A_5_address1,
        A_5_ce1 => grp_DiagMatMul_fu_725_A_5_ce1,
        A_5_q1 => A_5_q1,
        A_6_address0 => grp_DiagMatMul_fu_725_A_6_address0,
        A_6_ce0 => grp_DiagMatMul_fu_725_A_6_ce0,
        A_6_q0 => A_6_q0,
        A_6_address1 => grp_DiagMatMul_fu_725_A_6_address1,
        A_6_ce1 => grp_DiagMatMul_fu_725_A_6_ce1,
        A_6_q1 => A_6_q1,
        A_7_address0 => grp_DiagMatMul_fu_725_A_7_address0,
        A_7_ce0 => grp_DiagMatMul_fu_725_A_7_ce0,
        A_7_q0 => A_7_q0,
        A_7_address1 => grp_DiagMatMul_fu_725_A_7_address1,
        A_7_ce1 => grp_DiagMatMul_fu_725_A_7_ce1,
        A_7_q1 => A_7_q1,
        A_8_address0 => grp_DiagMatMul_fu_725_A_8_address0,
        A_8_ce0 => grp_DiagMatMul_fu_725_A_8_ce0,
        A_8_q0 => A_8_q0,
        A_8_address1 => grp_DiagMatMul_fu_725_A_8_address1,
        A_8_ce1 => grp_DiagMatMul_fu_725_A_8_ce1,
        A_8_q1 => A_8_q1,
        A_9_address0 => grp_DiagMatMul_fu_725_A_9_address0,
        A_9_ce0 => grp_DiagMatMul_fu_725_A_9_ce0,
        A_9_q0 => A_9_q0,
        A_9_address1 => grp_DiagMatMul_fu_725_A_9_address1,
        A_9_ce1 => grp_DiagMatMul_fu_725_A_9_ce1,
        A_9_q1 => A_9_q1,
        A_10_address0 => grp_DiagMatMul_fu_725_A_10_address0,
        A_10_ce0 => grp_DiagMatMul_fu_725_A_10_ce0,
        A_10_q0 => A_10_q0,
        A_10_address1 => grp_DiagMatMul_fu_725_A_10_address1,
        A_10_ce1 => grp_DiagMatMul_fu_725_A_10_ce1,
        A_10_q1 => A_10_q1,
        A_11_address0 => grp_DiagMatMul_fu_725_A_11_address0,
        A_11_ce0 => grp_DiagMatMul_fu_725_A_11_ce0,
        A_11_q0 => A_11_q0,
        A_11_address1 => grp_DiagMatMul_fu_725_A_11_address1,
        A_11_ce1 => grp_DiagMatMul_fu_725_A_11_ce1,
        A_11_q1 => A_11_q1,
        A_12_address0 => grp_DiagMatMul_fu_725_A_12_address0,
        A_12_ce0 => grp_DiagMatMul_fu_725_A_12_ce0,
        A_12_q0 => A_12_q0,
        A_12_address1 => grp_DiagMatMul_fu_725_A_12_address1,
        A_12_ce1 => grp_DiagMatMul_fu_725_A_12_ce1,
        A_12_q1 => A_12_q1,
        A_13_address0 => grp_DiagMatMul_fu_725_A_13_address0,
        A_13_ce0 => grp_DiagMatMul_fu_725_A_13_ce0,
        A_13_q0 => A_13_q0,
        A_13_address1 => grp_DiagMatMul_fu_725_A_13_address1,
        A_13_ce1 => grp_DiagMatMul_fu_725_A_13_ce1,
        A_13_q1 => A_13_q1,
        A_14_address0 => grp_DiagMatMul_fu_725_A_14_address0,
        A_14_ce0 => grp_DiagMatMul_fu_725_A_14_ce0,
        A_14_q0 => A_14_q0,
        A_14_address1 => grp_DiagMatMul_fu_725_A_14_address1,
        A_14_ce1 => grp_DiagMatMul_fu_725_A_14_ce1,
        A_14_q1 => A_14_q1,
        A_15_address0 => grp_DiagMatMul_fu_725_A_15_address0,
        A_15_ce0 => grp_DiagMatMul_fu_725_A_15_ce0,
        A_15_q0 => A_15_q0,
        A_15_address1 => grp_DiagMatMul_fu_725_A_15_address1,
        A_15_ce1 => grp_DiagMatMul_fu_725_A_15_ce1,
        A_15_q1 => A_15_q1,
        B_0_address0 => grp_DiagMatMul_fu_725_B_0_address0,
        B_0_ce0 => grp_DiagMatMul_fu_725_B_0_ce0,
        B_0_q0 => B_0_q0,
        B_1_address0 => grp_DiagMatMul_fu_725_B_1_address0,
        B_1_ce0 => grp_DiagMatMul_fu_725_B_1_ce0,
        B_1_q0 => B_1_q0,
        B_2_address0 => grp_DiagMatMul_fu_725_B_2_address0,
        B_2_ce0 => grp_DiagMatMul_fu_725_B_2_ce0,
        B_2_q0 => B_2_q0,
        B_3_address0 => grp_DiagMatMul_fu_725_B_3_address0,
        B_3_ce0 => grp_DiagMatMul_fu_725_B_3_ce0,
        B_3_q0 => B_3_q0,
        B_4_address0 => grp_DiagMatMul_fu_725_B_4_address0,
        B_4_ce0 => grp_DiagMatMul_fu_725_B_4_ce0,
        B_4_q0 => B_4_q0,
        B_5_address0 => grp_DiagMatMul_fu_725_B_5_address0,
        B_5_ce0 => grp_DiagMatMul_fu_725_B_5_ce0,
        B_5_q0 => B_5_q0,
        B_6_address0 => grp_DiagMatMul_fu_725_B_6_address0,
        B_6_ce0 => grp_DiagMatMul_fu_725_B_6_ce0,
        B_6_q0 => B_6_q0,
        B_7_address0 => grp_DiagMatMul_fu_725_B_7_address0,
        B_7_ce0 => grp_DiagMatMul_fu_725_B_7_ce0,
        B_7_q0 => B_7_q0,
        B_8_address0 => grp_DiagMatMul_fu_725_B_8_address0,
        B_8_ce0 => grp_DiagMatMul_fu_725_B_8_ce0,
        B_8_q0 => B_8_q0,
        B_9_address0 => grp_DiagMatMul_fu_725_B_9_address0,
        B_9_ce0 => grp_DiagMatMul_fu_725_B_9_ce0,
        B_9_q0 => B_9_q0,
        B_10_address0 => grp_DiagMatMul_fu_725_B_10_address0,
        B_10_ce0 => grp_DiagMatMul_fu_725_B_10_ce0,
        B_10_q0 => B_10_q0,
        B_11_address0 => grp_DiagMatMul_fu_725_B_11_address0,
        B_11_ce0 => grp_DiagMatMul_fu_725_B_11_ce0,
        B_11_q0 => B_11_q0,
        B_12_address0 => grp_DiagMatMul_fu_725_B_12_address0,
        B_12_ce0 => grp_DiagMatMul_fu_725_B_12_ce0,
        B_12_q0 => B_12_q0,
        B_13_address0 => grp_DiagMatMul_fu_725_B_13_address0,
        B_13_ce0 => grp_DiagMatMul_fu_725_B_13_ce0,
        B_13_q0 => B_13_q0,
        B_14_address0 => grp_DiagMatMul_fu_725_B_14_address0,
        B_14_ce0 => grp_DiagMatMul_fu_725_B_14_ce0,
        B_14_q0 => B_14_q0,
        B_15_address0 => grp_DiagMatMul_fu_725_B_15_address0,
        B_15_ce0 => grp_DiagMatMul_fu_725_B_15_ce0,
        B_15_q0 => B_15_q0,
        C_address0 => grp_DiagMatMul_fu_725_C_address0,
        C_ce0 => grp_DiagMatMul_fu_725_C_ce0,
        C_we0 => grp_DiagMatMul_fu_725_C_we0,
        C_d0 => grp_DiagMatMul_fu_725_C_d0);

    regslice_both_in_stream_V_data_V_U : component regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TDATA,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_data_V_U_ack_in,
        data_out => in_stream_TDATA_int,
        vld_out => in_stream_TVALID_int,
        ack_out => in_stream_TREADY_int,
        apdone_blk => regslice_both_in_stream_V_data_V_U_apdone_blk);

    regslice_both_in_stream_V_keep_V_U : component regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TKEEP,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_keep_V_U_ack_in,
        data_out => in_stream_TKEEP_int,
        vld_out => regslice_both_in_stream_V_keep_V_U_vld_out,
        ack_out => in_stream_TREADY_int,
        apdone_blk => regslice_both_in_stream_V_keep_V_U_apdone_blk);

    regslice_both_in_stream_V_strb_V_U : component regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TSTRB,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_strb_V_U_ack_in,
        data_out => in_stream_TSTRB_int,
        vld_out => regslice_both_in_stream_V_strb_V_U_vld_out,
        ack_out => in_stream_TREADY_int,
        apdone_blk => regslice_both_in_stream_V_strb_V_U_apdone_blk);

    regslice_both_in_stream_V_last_V_U : component regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TLAST,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_last_V_U_ack_in,
        data_out => in_stream_TLAST_int,
        vld_out => regslice_both_in_stream_V_last_V_U_vld_out,
        ack_out => in_stream_TREADY_int,
        apdone_blk => regslice_both_in_stream_V_last_V_U_apdone_blk);

    regslice_both_out_stream_V_data_V_U : component regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => out_stream_TDATA_int,
        vld_in => out_stream_TVALID_int,
        ack_in => out_stream_TREADY_int,
        data_out => out_stream_TDATA,
        vld_out => regslice_both_out_stream_V_data_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_data_V_U_apdone_blk);

    regslice_both_out_stream_V_keep_V_U : component regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_0,
        vld_in => out_stream_TVALID_int,
        ack_in => regslice_both_out_stream_V_keep_V_U_ack_in_dummy,
        data_out => out_stream_TKEEP,
        vld_out => regslice_both_out_stream_V_keep_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_keep_V_U_apdone_blk);

    regslice_both_out_stream_V_strb_V_U : component regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_0,
        vld_in => out_stream_TVALID_int,
        ack_in => regslice_both_out_stream_V_strb_V_U_ack_in_dummy,
        data_out => out_stream_TSTRB,
        vld_out => regslice_both_out_stream_V_strb_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_strb_V_U_apdone_blk);

    regslice_both_out_stream_V_last_V_U : component regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => valOut_last_V_reg_984,
        vld_in => out_stream_TVALID_int,
        ack_in => regslice_both_out_stream_V_last_V_U_ack_in_dummy,
        data_out => out_stream_TLAST,
        vld_out => regslice_both_out_stream_V_last_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state9))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((grp_DiagMatMul_fu_725_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state9)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state9);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((grp_DiagMatMul_fu_725_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_DiagMatMul_fu_725_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_DiagMatMul_fu_725_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln41_fu_834_p2 = ap_const_lv1_1))) then 
                    grp_DiagMatMul_fu_725_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_DiagMatMul_fu_725_ap_ready = ap_const_logic_1)) then 
                    grp_DiagMatMul_fu_725_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_reg_670_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln34_fu_782_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_0_reg_670 <= i_reg_933;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_0_reg_670 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    i_1_reg_692_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln33_fu_766_p2 = ap_const_lv1_1))) then 
                i_1_reg_692 <= ap_const_lv5_0;
            elsif ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln42_fu_850_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                i_1_reg_692 <= i_4_reg_953;
            end if; 
        end if;
    end process;

    i_2_reg_714_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln72_fu_902_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i_2_reg_714 <= i_3_fu_908_p2;
            elsif (((grp_DiagMatMul_fu_725_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                i_2_reg_714 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    j_0_reg_681_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                j_0_reg_681 <= j_reg_945;
            elsif (((icmp_ln33_fu_766_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_0_reg_681 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    j_1_reg_703_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                j_1_reg_703 <= j_2_reg_965;
            elsif (((icmp_ln41_fu_834_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                j_1_reg_703 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                i_4_reg_953 <= i_4_fu_840_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_933 <= i_fu_772_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln72_reg_970 <= icmp_ln72_fu_902_p2;
                icmp_ln72_reg_970_pp0_iter1_reg <= icmp_ln72_reg_970;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                j_2_reg_965 <= j_2_fu_856_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                j_reg_945 <= j_fu_788_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln33_fu_766_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                trunc_ln37_reg_938 <= trunc_ln37_fu_778_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln41_fu_834_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                trunc_ln45_reg_958 <= trunc_ln45_fu_846_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln72_fu_902_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                valOut_last_V_reg_984 <= valOut_last_V_fu_919_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, icmp_ln34_fu_782_p2, ap_CS_fsm_state6, icmp_ln42_fu_850_p2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_state2, icmp_ln33_fu_766_p2, ap_CS_fsm_state5, icmp_ln41_fu_834_p2, icmp_ln72_fu_902_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_ap_done, ap_block_pp0_stage0_subdone, ap_CS_fsm_state12, regslice_both_out_stream_V_data_V_U_apdone_blk, in_stream_TVALID_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln33_fu_766_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln34_fu_782_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state5 => 
                if (((icmp_ln41_fu_834_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln42_fu_850_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state8 => 
                if (((grp_DiagMatMul_fu_725_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln72_fu_902_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln72_fu_902_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state12 => 
                if (((regslice_both_out_stream_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;

    A_0_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_0_address0, zext_ln37_fu_814_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_0_address0 <= zext_ln37_fu_814_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_0_address0 <= grp_DiagMatMul_fu_725_A_0_address0;
        else 
            A_0_address0 <= "XXXX";
        end if; 
    end process;


    A_0_ce0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_0_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_0_ce0 <= grp_DiagMatMul_fu_725_A_0_ce0;
        else 
            A_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_0_ce1_assign_proc : process(ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_0_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_0_ce1 <= grp_DiagMatMul_fu_725_A_0_ce1;
        else 
            A_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_0_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, trunc_ln37_reg_938, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (trunc_ln37_reg_938 = ap_const_lv4_0))) then 
            A_0_we0 <= ap_const_logic_1;
        else 
            A_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    A_10_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_10_address0, zext_ln37_fu_814_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_10_address0 <= zext_ln37_fu_814_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_10_address0 <= grp_DiagMatMul_fu_725_A_10_address0;
        else 
            A_10_address0 <= "XXXX";
        end if; 
    end process;


    A_10_ce0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_10_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_10_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_10_ce0 <= grp_DiagMatMul_fu_725_A_10_ce0;
        else 
            A_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_10_ce1_assign_proc : process(ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_10_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_10_ce1 <= grp_DiagMatMul_fu_725_A_10_ce1;
        else 
            A_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_10_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, trunc_ln37_reg_938, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (trunc_ln37_reg_938 = ap_const_lv4_A))) then 
            A_10_we0 <= ap_const_logic_1;
        else 
            A_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    A_11_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_11_address0, zext_ln37_fu_814_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_11_address0 <= zext_ln37_fu_814_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_11_address0 <= grp_DiagMatMul_fu_725_A_11_address0;
        else 
            A_11_address0 <= "XXXX";
        end if; 
    end process;


    A_11_ce0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_11_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_11_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_11_ce0 <= grp_DiagMatMul_fu_725_A_11_ce0;
        else 
            A_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_11_ce1_assign_proc : process(ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_11_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_11_ce1 <= grp_DiagMatMul_fu_725_A_11_ce1;
        else 
            A_11_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_11_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, trunc_ln37_reg_938, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (trunc_ln37_reg_938 = ap_const_lv4_B))) then 
            A_11_we0 <= ap_const_logic_1;
        else 
            A_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    A_12_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_12_address0, zext_ln37_fu_814_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_12_address0 <= zext_ln37_fu_814_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_12_address0 <= grp_DiagMatMul_fu_725_A_12_address0;
        else 
            A_12_address0 <= "XXXX";
        end if; 
    end process;


    A_12_ce0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_12_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_12_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_12_ce0 <= grp_DiagMatMul_fu_725_A_12_ce0;
        else 
            A_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_12_ce1_assign_proc : process(ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_12_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_12_ce1 <= grp_DiagMatMul_fu_725_A_12_ce1;
        else 
            A_12_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_12_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, trunc_ln37_reg_938, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (trunc_ln37_reg_938 = ap_const_lv4_C))) then 
            A_12_we0 <= ap_const_logic_1;
        else 
            A_12_we0 <= ap_const_logic_0;
        end if; 
    end process;


    A_13_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_13_address0, zext_ln37_fu_814_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_13_address0 <= zext_ln37_fu_814_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_13_address0 <= grp_DiagMatMul_fu_725_A_13_address0;
        else 
            A_13_address0 <= "XXXX";
        end if; 
    end process;


    A_13_ce0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_13_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_13_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_13_ce0 <= grp_DiagMatMul_fu_725_A_13_ce0;
        else 
            A_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_13_ce1_assign_proc : process(ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_13_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_13_ce1 <= grp_DiagMatMul_fu_725_A_13_ce1;
        else 
            A_13_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_13_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, trunc_ln37_reg_938, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (trunc_ln37_reg_938 = ap_const_lv4_D))) then 
            A_13_we0 <= ap_const_logic_1;
        else 
            A_13_we0 <= ap_const_logic_0;
        end if; 
    end process;


    A_14_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_14_address0, zext_ln37_fu_814_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_14_address0 <= zext_ln37_fu_814_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_14_address0 <= grp_DiagMatMul_fu_725_A_14_address0;
        else 
            A_14_address0 <= "XXXX";
        end if; 
    end process;


    A_14_ce0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_14_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_14_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_14_ce0 <= grp_DiagMatMul_fu_725_A_14_ce0;
        else 
            A_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_14_ce1_assign_proc : process(ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_14_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_14_ce1 <= grp_DiagMatMul_fu_725_A_14_ce1;
        else 
            A_14_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_14_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, trunc_ln37_reg_938, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (trunc_ln37_reg_938 = ap_const_lv4_E))) then 
            A_14_we0 <= ap_const_logic_1;
        else 
            A_14_we0 <= ap_const_logic_0;
        end if; 
    end process;


    A_15_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_15_address0, zext_ln37_fu_814_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_15_address0 <= zext_ln37_fu_814_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_15_address0 <= grp_DiagMatMul_fu_725_A_15_address0;
        else 
            A_15_address0 <= "XXXX";
        end if; 
    end process;


    A_15_ce0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_15_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_15_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_15_ce0 <= grp_DiagMatMul_fu_725_A_15_ce0;
        else 
            A_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_15_ce1_assign_proc : process(ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_15_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_15_ce1 <= grp_DiagMatMul_fu_725_A_15_ce1;
        else 
            A_15_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_15_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, trunc_ln37_reg_938, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (trunc_ln37_reg_938 = ap_const_lv4_F))) then 
            A_15_we0 <= ap_const_logic_1;
        else 
            A_15_we0 <= ap_const_logic_0;
        end if; 
    end process;


    A_1_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_1_address0, zext_ln37_fu_814_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_1_address0 <= zext_ln37_fu_814_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_1_address0 <= grp_DiagMatMul_fu_725_A_1_address0;
        else 
            A_1_address0 <= "XXXX";
        end if; 
    end process;


    A_1_ce0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_1_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_1_ce0 <= grp_DiagMatMul_fu_725_A_1_ce0;
        else 
            A_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_1_ce1_assign_proc : process(ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_1_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_1_ce1 <= grp_DiagMatMul_fu_725_A_1_ce1;
        else 
            A_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_1_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, trunc_ln37_reg_938, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (trunc_ln37_reg_938 = ap_const_lv4_1))) then 
            A_1_we0 <= ap_const_logic_1;
        else 
            A_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    A_2_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_2_address0, zext_ln37_fu_814_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_2_address0 <= zext_ln37_fu_814_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_2_address0 <= grp_DiagMatMul_fu_725_A_2_address0;
        else 
            A_2_address0 <= "XXXX";
        end if; 
    end process;


    A_2_ce0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_2_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_2_ce0 <= grp_DiagMatMul_fu_725_A_2_ce0;
        else 
            A_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_2_ce1_assign_proc : process(ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_2_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_2_ce1 <= grp_DiagMatMul_fu_725_A_2_ce1;
        else 
            A_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_2_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, trunc_ln37_reg_938, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (trunc_ln37_reg_938 = ap_const_lv4_2))) then 
            A_2_we0 <= ap_const_logic_1;
        else 
            A_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    A_3_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_3_address0, zext_ln37_fu_814_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_3_address0 <= zext_ln37_fu_814_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_3_address0 <= grp_DiagMatMul_fu_725_A_3_address0;
        else 
            A_3_address0 <= "XXXX";
        end if; 
    end process;


    A_3_ce0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_3_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_3_ce0 <= grp_DiagMatMul_fu_725_A_3_ce0;
        else 
            A_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_3_ce1_assign_proc : process(ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_3_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_3_ce1 <= grp_DiagMatMul_fu_725_A_3_ce1;
        else 
            A_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_3_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, trunc_ln37_reg_938, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (trunc_ln37_reg_938 = ap_const_lv4_3))) then 
            A_3_we0 <= ap_const_logic_1;
        else 
            A_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    A_4_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_4_address0, zext_ln37_fu_814_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_4_address0 <= zext_ln37_fu_814_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_4_address0 <= grp_DiagMatMul_fu_725_A_4_address0;
        else 
            A_4_address0 <= "XXXX";
        end if; 
    end process;


    A_4_ce0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_4_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_4_ce0 <= grp_DiagMatMul_fu_725_A_4_ce0;
        else 
            A_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_4_ce1_assign_proc : process(ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_4_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_4_ce1 <= grp_DiagMatMul_fu_725_A_4_ce1;
        else 
            A_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_4_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, trunc_ln37_reg_938, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (trunc_ln37_reg_938 = ap_const_lv4_4))) then 
            A_4_we0 <= ap_const_logic_1;
        else 
            A_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    A_5_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_5_address0, zext_ln37_fu_814_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_5_address0 <= zext_ln37_fu_814_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_5_address0 <= grp_DiagMatMul_fu_725_A_5_address0;
        else 
            A_5_address0 <= "XXXX";
        end if; 
    end process;


    A_5_ce0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_5_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_5_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_5_ce0 <= grp_DiagMatMul_fu_725_A_5_ce0;
        else 
            A_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_5_ce1_assign_proc : process(ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_5_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_5_ce1 <= grp_DiagMatMul_fu_725_A_5_ce1;
        else 
            A_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_5_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, trunc_ln37_reg_938, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (trunc_ln37_reg_938 = ap_const_lv4_5))) then 
            A_5_we0 <= ap_const_logic_1;
        else 
            A_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    A_6_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_6_address0, zext_ln37_fu_814_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_6_address0 <= zext_ln37_fu_814_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_6_address0 <= grp_DiagMatMul_fu_725_A_6_address0;
        else 
            A_6_address0 <= "XXXX";
        end if; 
    end process;


    A_6_ce0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_6_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_6_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_6_ce0 <= grp_DiagMatMul_fu_725_A_6_ce0;
        else 
            A_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_6_ce1_assign_proc : process(ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_6_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_6_ce1 <= grp_DiagMatMul_fu_725_A_6_ce1;
        else 
            A_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_6_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, trunc_ln37_reg_938, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (trunc_ln37_reg_938 = ap_const_lv4_6))) then 
            A_6_we0 <= ap_const_logic_1;
        else 
            A_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    A_7_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_7_address0, zext_ln37_fu_814_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_7_address0 <= zext_ln37_fu_814_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_7_address0 <= grp_DiagMatMul_fu_725_A_7_address0;
        else 
            A_7_address0 <= "XXXX";
        end if; 
    end process;


    A_7_ce0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_7_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_7_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_7_ce0 <= grp_DiagMatMul_fu_725_A_7_ce0;
        else 
            A_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_7_ce1_assign_proc : process(ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_7_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_7_ce1 <= grp_DiagMatMul_fu_725_A_7_ce1;
        else 
            A_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_7_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, trunc_ln37_reg_938, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (trunc_ln37_reg_938 = ap_const_lv4_7))) then 
            A_7_we0 <= ap_const_logic_1;
        else 
            A_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    A_8_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_8_address0, zext_ln37_fu_814_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_8_address0 <= zext_ln37_fu_814_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_8_address0 <= grp_DiagMatMul_fu_725_A_8_address0;
        else 
            A_8_address0 <= "XXXX";
        end if; 
    end process;


    A_8_ce0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_8_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_8_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_8_ce0 <= grp_DiagMatMul_fu_725_A_8_ce0;
        else 
            A_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_8_ce1_assign_proc : process(ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_8_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_8_ce1 <= grp_DiagMatMul_fu_725_A_8_ce1;
        else 
            A_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_8_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, trunc_ln37_reg_938, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (trunc_ln37_reg_938 = ap_const_lv4_8))) then 
            A_8_we0 <= ap_const_logic_1;
        else 
            A_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    A_9_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_9_address0, zext_ln37_fu_814_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_9_address0 <= zext_ln37_fu_814_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_9_address0 <= grp_DiagMatMul_fu_725_A_9_address0;
        else 
            A_9_address0 <= "XXXX";
        end if; 
    end process;


    A_9_ce0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_9_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_9_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_9_ce0 <= grp_DiagMatMul_fu_725_A_9_ce0;
        else 
            A_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_9_ce1_assign_proc : process(ap_CS_fsm_state8, grp_DiagMatMul_fu_725_A_9_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_9_ce1 <= grp_DiagMatMul_fu_725_A_9_ce1;
        else 
            A_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_9_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, trunc_ln37_reg_938, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (trunc_ln37_reg_938 = ap_const_lv4_9))) then 
            A_9_we0 <= ap_const_logic_1;
        else 
            A_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_0_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_0_address0, zext_ln45_fu_882_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_0_address0 <= zext_ln45_fu_882_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_0_address0 <= grp_DiagMatMul_fu_725_B_0_address0;
        else 
            B_0_address0 <= "XXXX";
        end if; 
    end process;


    B_0_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_0_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            B_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_0_ce0 <= grp_DiagMatMul_fu_725_B_0_ce0;
        else 
            B_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_0_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, trunc_ln45_reg_958, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln45_reg_958 = ap_const_lv4_0))) then 
            B_0_we0 <= ap_const_logic_1;
        else 
            B_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_10_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_10_address0, zext_ln45_fu_882_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_10_address0 <= zext_ln45_fu_882_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_10_address0 <= grp_DiagMatMul_fu_725_B_10_address0;
        else 
            B_10_address0 <= "XXXX";
        end if; 
    end process;


    B_10_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_10_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            B_10_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_10_ce0 <= grp_DiagMatMul_fu_725_B_10_ce0;
        else 
            B_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_10_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, trunc_ln45_reg_958, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln45_reg_958 = ap_const_lv4_A))) then 
            B_10_we0 <= ap_const_logic_1;
        else 
            B_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_11_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_11_address0, zext_ln45_fu_882_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_11_address0 <= zext_ln45_fu_882_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_11_address0 <= grp_DiagMatMul_fu_725_B_11_address0;
        else 
            B_11_address0 <= "XXXX";
        end if; 
    end process;


    B_11_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_11_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            B_11_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_11_ce0 <= grp_DiagMatMul_fu_725_B_11_ce0;
        else 
            B_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_11_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, trunc_ln45_reg_958, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln45_reg_958 = ap_const_lv4_B))) then 
            B_11_we0 <= ap_const_logic_1;
        else 
            B_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_12_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_12_address0, zext_ln45_fu_882_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_12_address0 <= zext_ln45_fu_882_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_12_address0 <= grp_DiagMatMul_fu_725_B_12_address0;
        else 
            B_12_address0 <= "XXXX";
        end if; 
    end process;


    B_12_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_12_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            B_12_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_12_ce0 <= grp_DiagMatMul_fu_725_B_12_ce0;
        else 
            B_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_12_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, trunc_ln45_reg_958, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln45_reg_958 = ap_const_lv4_C))) then 
            B_12_we0 <= ap_const_logic_1;
        else 
            B_12_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_13_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_13_address0, zext_ln45_fu_882_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_13_address0 <= zext_ln45_fu_882_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_13_address0 <= grp_DiagMatMul_fu_725_B_13_address0;
        else 
            B_13_address0 <= "XXXX";
        end if; 
    end process;


    B_13_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_13_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            B_13_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_13_ce0 <= grp_DiagMatMul_fu_725_B_13_ce0;
        else 
            B_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_13_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, trunc_ln45_reg_958, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln45_reg_958 = ap_const_lv4_D))) then 
            B_13_we0 <= ap_const_logic_1;
        else 
            B_13_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_14_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_14_address0, zext_ln45_fu_882_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_14_address0 <= zext_ln45_fu_882_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_14_address0 <= grp_DiagMatMul_fu_725_B_14_address0;
        else 
            B_14_address0 <= "XXXX";
        end if; 
    end process;


    B_14_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_14_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            B_14_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_14_ce0 <= grp_DiagMatMul_fu_725_B_14_ce0;
        else 
            B_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_14_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, trunc_ln45_reg_958, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln45_reg_958 = ap_const_lv4_E))) then 
            B_14_we0 <= ap_const_logic_1;
        else 
            B_14_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_15_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_15_address0, zext_ln45_fu_882_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_15_address0 <= zext_ln45_fu_882_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_15_address0 <= grp_DiagMatMul_fu_725_B_15_address0;
        else 
            B_15_address0 <= "XXXX";
        end if; 
    end process;


    B_15_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_15_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            B_15_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_15_ce0 <= grp_DiagMatMul_fu_725_B_15_ce0;
        else 
            B_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_15_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, trunc_ln45_reg_958, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln45_reg_958 = ap_const_lv4_F))) then 
            B_15_we0 <= ap_const_logic_1;
        else 
            B_15_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_1_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_1_address0, zext_ln45_fu_882_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_1_address0 <= zext_ln45_fu_882_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_1_address0 <= grp_DiagMatMul_fu_725_B_1_address0;
        else 
            B_1_address0 <= "XXXX";
        end if; 
    end process;


    B_1_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_1_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            B_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_1_ce0 <= grp_DiagMatMul_fu_725_B_1_ce0;
        else 
            B_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_1_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, trunc_ln45_reg_958, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln45_reg_958 = ap_const_lv4_1))) then 
            B_1_we0 <= ap_const_logic_1;
        else 
            B_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_2_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_2_address0, zext_ln45_fu_882_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_2_address0 <= zext_ln45_fu_882_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_2_address0 <= grp_DiagMatMul_fu_725_B_2_address0;
        else 
            B_2_address0 <= "XXXX";
        end if; 
    end process;


    B_2_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_2_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            B_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_2_ce0 <= grp_DiagMatMul_fu_725_B_2_ce0;
        else 
            B_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_2_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, trunc_ln45_reg_958, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln45_reg_958 = ap_const_lv4_2))) then 
            B_2_we0 <= ap_const_logic_1;
        else 
            B_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_3_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_3_address0, zext_ln45_fu_882_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_3_address0 <= zext_ln45_fu_882_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_3_address0 <= grp_DiagMatMul_fu_725_B_3_address0;
        else 
            B_3_address0 <= "XXXX";
        end if; 
    end process;


    B_3_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_3_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            B_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_3_ce0 <= grp_DiagMatMul_fu_725_B_3_ce0;
        else 
            B_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_3_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, trunc_ln45_reg_958, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln45_reg_958 = ap_const_lv4_3))) then 
            B_3_we0 <= ap_const_logic_1;
        else 
            B_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_4_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_4_address0, zext_ln45_fu_882_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_4_address0 <= zext_ln45_fu_882_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_4_address0 <= grp_DiagMatMul_fu_725_B_4_address0;
        else 
            B_4_address0 <= "XXXX";
        end if; 
    end process;


    B_4_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_4_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            B_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_4_ce0 <= grp_DiagMatMul_fu_725_B_4_ce0;
        else 
            B_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_4_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, trunc_ln45_reg_958, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln45_reg_958 = ap_const_lv4_4))) then 
            B_4_we0 <= ap_const_logic_1;
        else 
            B_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_5_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_5_address0, zext_ln45_fu_882_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_5_address0 <= zext_ln45_fu_882_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_5_address0 <= grp_DiagMatMul_fu_725_B_5_address0;
        else 
            B_5_address0 <= "XXXX";
        end if; 
    end process;


    B_5_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_5_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            B_5_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_5_ce0 <= grp_DiagMatMul_fu_725_B_5_ce0;
        else 
            B_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_5_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, trunc_ln45_reg_958, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln45_reg_958 = ap_const_lv4_5))) then 
            B_5_we0 <= ap_const_logic_1;
        else 
            B_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_6_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_6_address0, zext_ln45_fu_882_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_6_address0 <= zext_ln45_fu_882_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_6_address0 <= grp_DiagMatMul_fu_725_B_6_address0;
        else 
            B_6_address0 <= "XXXX";
        end if; 
    end process;


    B_6_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_6_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            B_6_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_6_ce0 <= grp_DiagMatMul_fu_725_B_6_ce0;
        else 
            B_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_6_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, trunc_ln45_reg_958, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln45_reg_958 = ap_const_lv4_6))) then 
            B_6_we0 <= ap_const_logic_1;
        else 
            B_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_7_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_7_address0, zext_ln45_fu_882_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_7_address0 <= zext_ln45_fu_882_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_7_address0 <= grp_DiagMatMul_fu_725_B_7_address0;
        else 
            B_7_address0 <= "XXXX";
        end if; 
    end process;


    B_7_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_7_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            B_7_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_7_ce0 <= grp_DiagMatMul_fu_725_B_7_ce0;
        else 
            B_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_7_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, trunc_ln45_reg_958, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln45_reg_958 = ap_const_lv4_7))) then 
            B_7_we0 <= ap_const_logic_1;
        else 
            B_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_8_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_8_address0, zext_ln45_fu_882_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_8_address0 <= zext_ln45_fu_882_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_8_address0 <= grp_DiagMatMul_fu_725_B_8_address0;
        else 
            B_8_address0 <= "XXXX";
        end if; 
    end process;


    B_8_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_8_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            B_8_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_8_ce0 <= grp_DiagMatMul_fu_725_B_8_ce0;
        else 
            B_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_8_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, trunc_ln45_reg_958, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln45_reg_958 = ap_const_lv4_8))) then 
            B_8_we0 <= ap_const_logic_1;
        else 
            B_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_9_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_9_address0, zext_ln45_fu_882_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_9_address0 <= zext_ln45_fu_882_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_9_address0 <= grp_DiagMatMul_fu_725_B_9_address0;
        else 
            B_9_address0 <= "XXXX";
        end if; 
    end process;


    B_9_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_B_9_ce0, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            B_9_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_9_ce0 <= grp_DiagMatMul_fu_725_B_9_ce0;
        else 
            B_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_9_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln42_fu_850_p2, trunc_ln45_reg_958, in_stream_TVALID_int)
    begin
        if ((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln45_reg_958 = ap_const_lv4_9))) then 
            B_9_we0 <= ap_const_logic_1;
        else 
            B_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state10_io, ap_block_state11_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state11_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state10_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state10_io, ap_block_state11_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state11_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state10_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state10_io_assign_proc : process(icmp_ln72_reg_970, out_stream_TREADY_int)
    begin
                ap_block_state10_io <= ((icmp_ln72_reg_970 = ap_const_lv1_0) and (out_stream_TREADY_int = ap_const_logic_0));
    end process;

        ap_block_state10_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_io_assign_proc : process(icmp_ln72_reg_970_pp0_iter1_reg, out_stream_TREADY_int)
    begin
                ap_block_state11_io <= ((icmp_ln72_reg_970_pp0_iter1_reg = ap_const_lv1_0) and (out_stream_TREADY_int = ap_const_logic_0));
    end process;

        ap_block_state11_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_assign_proc : process(icmp_ln34_fu_782_p2, in_stream_TVALID_int)
    begin
                ap_block_state3 <= ((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0));
    end process;


    ap_block_state6_assign_proc : process(icmp_ln42_fu_850_p2, in_stream_TVALID_int)
    begin
                ap_block_state6 <= ((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0));
    end process;

        ap_block_state9_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state9_assign_proc : process(icmp_ln72_fu_902_p2)
    begin
        if ((icmp_ln72_fu_902_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state9 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state12, regslice_both_out_stream_V_data_V_U_apdone_blk)
    begin
        if (((regslice_both_out_stream_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state12, regslice_both_out_stream_V_data_V_U_apdone_blk)
    begin
        if (((regslice_both_out_stream_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    bitcast_ln37_fu_794_p1 <= in_stream_TDATA_int;
    bitcast_ln45_fu_862_p1 <= in_stream_TDATA_int;
    grp_DiagMatMul_fu_725_ap_start <= grp_DiagMatMul_fu_725_ap_start_reg;
    i_3_fu_908_p2 <= std_logic_vector(unsigned(i_2_reg_714) + unsigned(ap_const_lv5_1));
    i_4_fu_840_p2 <= std_logic_vector(unsigned(i_1_reg_692) + unsigned(ap_const_lv5_1));
    i_fu_772_p2 <= std_logic_vector(unsigned(i_0_reg_670) + unsigned(ap_const_lv5_1));
    icmp_ln33_fu_766_p2 <= "1" when (i_0_reg_670 = ap_const_lv5_10) else "0";
    icmp_ln34_fu_782_p2 <= "1" when (j_0_reg_681 = ap_const_lv5_10) else "0";
    icmp_ln41_fu_834_p2 <= "1" when (i_1_reg_692 = ap_const_lv5_10) else "0";
    icmp_ln42_fu_850_p2 <= "1" when (j_1_reg_703 = ap_const_lv5_10) else "0";
    icmp_ln72_fu_902_p2 <= "1" when (i_2_reg_714 = ap_const_lv5_10) else "0";

    in_stream_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, ap_CS_fsm_state6, icmp_ln42_fu_850_p2, in_stream_TVALID_int)
    begin
        if ((((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            in_stream_TDATA_blk_n <= in_stream_TVALID_int;
        else 
            in_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_stream_TREADY_assign_proc : process(in_stream_TVALID, regslice_both_in_stream_V_data_V_U_ack_in)
    begin
        if (((in_stream_TVALID = ap_const_logic_1) and (regslice_both_in_stream_V_data_V_U_ack_in = ap_const_logic_1))) then 
            in_stream_TREADY <= ap_const_logic_1;
        else 
            in_stream_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    in_stream_TREADY_int_assign_proc : process(ap_CS_fsm_state3, icmp_ln34_fu_782_p2, ap_CS_fsm_state6, icmp_ln42_fu_850_p2, in_stream_TVALID_int)
    begin
        if (((not(((icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln42_fu_850_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (in_stream_TVALID_int = ap_const_logic_0))) and (icmp_ln34_fu_782_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            in_stream_TREADY_int <= ap_const_logic_1;
        else 
            in_stream_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;

    j_2_fu_856_p2 <= std_logic_vector(unsigned(j_1_reg_703) + unsigned(ap_const_lv5_1));
    j_fu_788_p2 <= std_logic_vector(unsigned(j_0_reg_681) + unsigned(ap_const_lv5_1));

    mulOut_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_C_address0, zext_ln75_fu_914_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            mulOut_address0 <= zext_ln75_fu_914_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            mulOut_address0 <= grp_DiagMatMul_fu_725_C_address0;
        else 
            mulOut_address0 <= "XXXX";
        end if; 
    end process;


    mulOut_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_state8, grp_DiagMatMul_fu_725_C_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mulOut_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            mulOut_ce0 <= grp_DiagMatMul_fu_725_C_ce0;
        else 
            mulOut_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mulOut_we0_assign_proc : process(ap_CS_fsm_state8, grp_DiagMatMul_fu_725_C_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            mulOut_we0 <= grp_DiagMatMul_fu_725_C_we0;
        else 
            mulOut_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_stream_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln72_reg_970, ap_enable_reg_pp0_iter2, icmp_ln72_reg_970_pp0_iter1_reg, out_stream_TREADY_int)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln72_reg_970_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln72_reg_970 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_stream_TDATA_blk_n <= out_stream_TREADY_int;
        else 
            out_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_stream_TDATA_int <= mulOut_q0;
    out_stream_TVALID <= regslice_both_out_stream_V_data_V_U_vld_out;

    out_stream_TVALID_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln72_reg_970, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln72_reg_970 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            out_stream_TVALID_int <= ap_const_logic_1;
        else 
            out_stream_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln37_fu_778_p1 <= i_0_reg_670(4 - 1 downto 0);
    trunc_ln45_fu_846_p1 <= i_1_reg_692(4 - 1 downto 0);
    valOut_last_V_fu_919_p2 <= "1" when (i_2_reg_714 = ap_const_lv5_F) else "0";
    zext_ln37_fu_814_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_reg_681),64));
    zext_ln45_fu_882_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_1_reg_703),64));
    zext_ln75_fu_914_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_2_reg_714),64));
end behav;
